{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit';\nimport { updatePairChartData, updatePairTokensChartData } from './actions';\nconst initialState = {\n  pairData: {},\n  tokenPairData: {}\n};\nexport default createReducer(initialState, builder => builder.addCase(updatePairChartData, (state, _ref) => {\n  let {\n    payload: {\n      address,\n      chartData\n    }\n  } = _ref;\n  const container = {};\n  container[address] = chartData;\n  const existingChartData = { ...(state.pairData || {}),\n    ...container\n  };\n  state.pairData = existingChartData;\n}).addCase(updatePairTokensChartData, (state, _ref2) => {\n  let {\n    payload: {\n      address,\n      chartData\n    }\n  } = _ref2;\n  const container = {};\n  container[address] = chartData;\n  const existingChartData = { ...(state.tokenPairData || {}),\n    ...container\n  };\n  state.tokenPairData = existingChartData;\n}));","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/state/pair/reducer.ts"],"names":["createReducer","updatePairChartData","updatePairTokensChartData","initialState","pairData","tokenPairData","builder","addCase","state","payload","address","chartData","container","existingChartData"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,mBAAT,EAA8BC,yBAA9B,QAA+D,WAA/D;AAYA,MAAMC,YAA6B,GAAG;AACpCC,EAAAA,QAAQ,EAAE,EAD0B;AAEpCC,EAAAA,aAAa,EAAE;AAFqB,CAAtC;AAKA,eAAeL,aAAa,CAACG,YAAD,EAAeG,OAAO,IAChDA,OAAO,CACJC,OADH,CACWN,mBADX,EACgC,CAACO,KAAD,WAAgD;AAAA,MAAxC;AAAEC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX;AAAX,GAAwC;AAC5E,QAAMC,SAAS,GAAG,EAAlB;AACAA,EAAAA,SAAS,CAACF,OAAD,CAAT,GAAqBC,SAArB;AACA,QAAME,iBAAiB,GAAG,EACxB,IAAIL,KAAK,CAACJ,QAAN,IAAkB,EAAtB,CADwB;AAExB,OAAGQ;AAFqB,GAA1B;AAIAJ,EAAAA,KAAK,CAACJ,QAAN,GAAiBS,iBAAjB;AACD,CATH,EAWGN,OAXH,CAWWL,yBAXX,EAWsC,CAACM,KAAD,YAAgD;AAAA,MAAxC;AAAEC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX;AAAX,GAAwC;AAClF,QAAMC,SAAS,GAAG,EAAlB;AACAA,EAAAA,SAAS,CAACF,OAAD,CAAT,GAAqBC,SAArB;AACA,QAAME,iBAAiB,GAAG,EACxB,IAAIL,KAAK,CAACH,aAAN,IAAuB,EAA3B,CADwB;AAExB,OAAGO;AAFqB,GAA1B;AAIAJ,EAAAA,KAAK,CAACH,aAAN,GAAsBQ,iBAAtB;AACD,CAnBH,CAD0B,CAA5B","sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\nimport { updatePairChartData, updatePairTokensChartData } from './actions'\nimport { Time } from 'lightweight-charts'\n\nexport interface ChartState {\n  [address: string]: Array<Array<{ open: number; close: number; high: number; low: number; time: Time }>>\n}\n\nexport interface TokenChartState {\n  readonly pairData: ChartState\n  readonly tokenPairData: ChartState\n}\n\nconst initialState: TokenChartState = {\n  pairData: {},\n  tokenPairData: {}\n}\n\nexport default createReducer(initialState, builder =>\n  builder\n    .addCase(updatePairChartData, (state, { payload: { address, chartData } }) => {\n      const container = {} as ChartState\n      container[address] = chartData\n      const existingChartData = {\n        ...(state.pairData || {}),\n        ...container\n      }\n      state.pairData = existingChartData\n    })\n\n    .addCase(updatePairTokensChartData, (state, { payload: { address, chartData } }) => {\n      const container = {} as ChartState\n      container[address] = chartData\n      const existingChartData = {\n        ...(state.tokenPairData || {}),\n        ...container\n      }\n      state.tokenPairData = existingChartData\n    })\n)\n"]},"metadata":{},"sourceType":"module"}