{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/earn/SingleSidePoolCard.tsx\";\nimport React from 'react';\nimport { AutoColumn } from '../Column';\nimport { RowBetween } from '../Row';\nimport styled from 'styled-components';\nimport { TYPE, StyledInternalLink } from '../../theme';\nimport { ButtonPrimary } from '../Button';\nimport { useColor } from '../../hooks/useColor';\nimport { currencyId } from '../../utils/currencyId';\nimport { Break } from './styled';\nimport { useTranslation } from 'react-i18next';\nimport CurrencyLogo from '../CurrencyLogo';\nimport { JSBI } from '@pangolindex/sdk';\nimport { useChainId } from 'src/hooks';\nconst StatContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  gap: 12px;\n  margin-bottom: 1rem;\n  margin-right: 1rem;\n  margin-left: 1rem;\n  ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.mediaWidth.upToSmall`\n   display: none;\n `;\n}};\n`;\nconst AprContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  gap: 12px;\n  margin-bottom: 1rem;\n  margin-right: 1rem;\n  margin-left: 1rem;\n`;\nconst Wrapper = styled(AutoColumn)`\n  border-radius: 12px;\n  width: 100%;\n  overflow: hidden;\n  position: relative;\n  opacity: ${_ref2 => {\n  let {\n    showBackground\n  } = _ref2;\n  return showBackground ? '1' : '1';\n}};\n  background: ${_ref3 => {\n  let {\n    theme,\n    bgColor,\n    showBackground\n  } = _ref3;\n  return `radial-gradient(91.85% 100% at 1.84% 0%, ${bgColor} 0%, ${showBackground ? theme.black : theme.bg5} 100%) `;\n}};\n  color: ${_ref4 => {\n  let {\n    theme,\n    showBackground\n  } = _ref4;\n  return showBackground ? theme.white : theme.text1;\n}} !important;\n\n  ${_ref5 => {\n  let {\n    showBackground\n  } = _ref5;\n  return showBackground && `  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n     0px 24px 32px rgba(0, 0, 0, 0.01);`;\n}}\n`;\nconst TopSection = styled.div`\n  display: grid;\n  grid-template-columns: 24px 1fr 120px;\n  grid-gap: 0px;\n  align-items: center;\n  padding: 1rem;\n  z-index: 1;\n  ${_ref6 => {\n  let {\n    theme\n  } = _ref6;\n  return theme.mediaWidth.upToSmall`\n     grid-template-columns: 24px 1fr 96px;\n   `;\n}};\n`;\nconst BottomSection = styled.div`\n  padding: 12px 16px;\n  opacity: ${_ref7 => {\n  let {\n    showBackground\n  } = _ref7;\n  return showBackground ? '1' : '0.4';\n}};\n  border-radius: 0 0 12px 12px;\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n  justify-content: space-between;\n  z-index: 1;\n`;\nexport default function SingleSidePoolCard(_ref8) {\n  var _stakingInfo$totalSta, _stakingInfo$rewardRa;\n\n  let {\n    stakingInfo,\n    version\n  } = _ref8;\n  const {\n    t\n  } = useTranslation();\n  const isStaking = Boolean(stakingInfo.stakedAmount.greaterThan('0')); // get the color of the token\n\n  const backgroundColor = useColor(stakingInfo.rewardToken);\n  const chainId = useChainId();\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    showBackground: isStaking,\n    bgColor: backgroundColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TopSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, chainId && /*#__PURE__*/React.createElement(CurrencyLogo, {\n    currency: stakingInfo.rewardToken,\n    chainId: chainId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TYPE.white, {\n    fontWeight: 600,\n    fontSize: 24,\n    style: {\n      marginLeft: '8px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Earn \", stakingInfo.rewardToken.symbol), (isStaking || !stakingInfo.isPeriodFinished) && /*#__PURE__*/React.createElement(StyledInternalLink, {\n    to: `/stake/${version}/${currencyId(stakingInfo.rewardToken, chainId)}`,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonPrimary, {\n    padding: \"8px\",\n    borderRadius: \"8px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, isStaking ? t('earn.manage') : t('earn.deposit')))), /*#__PURE__*/React.createElement(StatContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, \" \", t('earn.totalStaked')), /*#__PURE__*/React.createElement(TYPE.white, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, `${(_stakingInfo$totalSta = stakingInfo.totalStakedInPng.toSignificant(4, {\n    groupSeparator: ','\n  })) !== null && _stakingInfo$totalSta !== void 0 ? _stakingInfo$totalSta : '-'} PNG`))), /*#__PURE__*/React.createElement(AprContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, \"APR\"), /*#__PURE__*/React.createElement(TYPE.white, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, JSBI.greaterThan(stakingInfo.apr, JSBI.BigInt(0)) && !stakingInfo.isPeriodFinished ? `${stakingInfo.apr.toLocaleString()}%` : ' - '))), isStaking && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Break, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(BottomSection, {\n    showBackground: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    color: 'white',\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, t('earn.yourRate'))), /*#__PURE__*/React.createElement(TYPE.black, {\n    style: {\n      textAlign: 'right'\n    },\n    color: 'white',\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"wizard-icon\",\n    style: {\n      marginRight: '0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, \"\\u26A1\"), `${(_stakingInfo$rewardRa = stakingInfo.rewardRatePerWeek) === null || _stakingInfo$rewardRa === void 0 ? void 0 : _stakingInfo$rewardRa.toSignificant(4, {\n    groupSeparator: ','\n  })} ${stakingInfo.rewardToken.symbol} / week`))));\n}","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/earn/SingleSidePoolCard.tsx"],"names":["React","AutoColumn","RowBetween","styled","TYPE","StyledInternalLink","ButtonPrimary","useColor","currencyId","Break","useTranslation","CurrencyLogo","JSBI","useChainId","StatContainer","div","theme","mediaWidth","upToSmall","AprContainer","Wrapper","showBackground","bgColor","black","bg5","white","text1","TopSection","BottomSection","SingleSidePoolCard","stakingInfo","version","t","isStaking","Boolean","stakedAmount","greaterThan","backgroundColor","rewardToken","chainId","marginLeft","symbol","isPeriodFinished","width","totalStakedInPng","toSignificant","groupSeparator","apr","BigInt","toLocaleString","textAlign","marginRight","rewardRatePerWeek"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,kBAAf,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,WAA9B;AAEA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,WAA3B;AAEA,MAAMC,aAAa,GAAGX,MAAM,CAACY,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,SAAeA,KAAK,CAACC,UAAN,CAAiBC,SAAU;AAC9C;AACA,EAFI;AAAA,CAED;AACH,CAXA;AAaA,MAAMC,YAAY,GAAGhB,MAAM,CAACY,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAMK,OAAO,GAAGjB,MAAM,CAACF,UAAD,CAAwD;AAC9E;AACA;AACA;AACA;AACA,aAAa;AAAA,MAAC;AAAEoB,IAAAA;AAAF,GAAD;AAAA,SAAyBA,cAAc,GAAG,GAAH,GAAS,GAAhD;AAAA,CAAqD;AAClE,gBAAgB;AAAA,MAAC;AAAEL,IAAAA,KAAF;AAASM,IAAAA,OAAT;AAAkBD,IAAAA;AAAlB,GAAD;AAAA,SACX,4CAA2CC,OAAQ,QAAOD,cAAc,GAAGL,KAAK,CAACO,KAAT,GAAiBP,KAAK,CAACQ,GAAI,SADxF;AAAA,CACiG;AACjH,WAAW;AAAA,MAAC;AAAER,IAAAA,KAAF;AAASK,IAAAA;AAAT,GAAD;AAAA,SAAgCA,cAAc,GAAGL,KAAK,CAACS,KAAT,GAAiBT,KAAK,CAACU,KAArE;AAAA,CAA4E;AACvF;AACA,IAAI;AAAA,MAAC;AAAEL,IAAAA;AAAF,GAAD;AAAA,SACAA,cAAc,IACb;AACL,wCAHI;AAAA,CAGqC;AACzC,CAdA;AAgBA,MAAMM,UAAU,GAAGxB,MAAM,CAACY,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,SAAeA,KAAK,CAACC,UAAN,CAAiBC,SAAU;AAC9C;AACA,IAFI;AAAA,CAEC;AACL,CAVA;AAYA,MAAMU,aAAa,GAAGzB,MAAM,CAACY,GAAiC;AAC9D;AACA,aAAa;AAAA,MAAC;AAAEM,IAAAA;AAAF,GAAD;AAAA,SAAyBA,cAAc,GAAG,GAAH,GAAS,KAAhD;AAAA,CAAuD;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAWA,eAAe,SAASQ,kBAAT,QAOZ;AAAA;;AAAA,MAPwC;AACzCC,IAAAA,WADyC;AAEzCC,IAAAA;AAFyC,GAOxC;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAQtB,cAAc,EAA5B;AACA,QAAMuB,SAAS,GAAGC,OAAO,CAACJ,WAAW,CAACK,YAAZ,CAAyBC,WAAzB,CAAqC,GAArC,CAAD,CAAzB,CAFC,CAID;;AACA,QAAMC,eAAe,GAAG9B,QAAQ,CAACuB,WAAW,CAACQ,WAAb,CAAhC;AACA,QAAMC,OAAO,GAAG1B,UAAU,EAA1B;AAEA,sBACE,oBAAC,OAAD;AAAS,IAAA,cAAc,EAAEoB,SAAzB;AAAoC,IAAA,OAAO,EAAEI,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,OAAO,iBAAI,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAET,WAAW,CAACQ,WAApC;AAAiD,IAAA,OAAO,EAAEC,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADd,eAEE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,UAAU,EAAE,GAAxB;AAA6B,IAAA,QAAQ,EAAE,EAAvC;AAA2C,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACQV,WAAW,CAACQ,WAAZ,CAAwBG,MADhC,CAFF,EAMG,CAACR,SAAS,IAAI,CAACH,WAAW,CAACY,gBAA3B,kBACC,oBAAC,kBAAD;AACE,IAAA,EAAE,EAAG,UAASX,OAAQ,IAAGvB,UAAU,CAACsB,WAAW,CAACQ,WAAb,EAA0BC,OAA1B,CAAmC,EADxE;AAEE,IAAA,KAAK,EAAE;AAAEI,MAAAA,KAAK,EAAE;AAAT,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAC,KAAvB;AAA6B,IAAA,YAAY,EAAC,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,SAAS,GAAGD,CAAC,CAAC,aAAD,CAAJ,GAAsBA,CAAC,CAAC,cAAD,CADnC,CAJF,CAPJ,CADF,eAmBE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAcA,CAAC,CAAC,kBAAD,CAAf,CADF,eAEE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,GAAD,yBAAGF,WAAW,CAACc,gBAAZ,CAA6BC,aAA7B,CAA2C,CAA3C,EAA8C;AAAEC,IAAAA,cAAc,EAAE;AAAlB,GAA9C,CAAH,yEAA6E,GAAI,MADpF,CAFF,CADF,CAnBF,eA2BE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,eAEE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlC,IAAI,CAACwB,WAAL,CAAiBN,WAAW,CAACiB,GAA7B,EAAkCnC,IAAI,CAACoC,MAAL,CAAY,CAAZ,CAAlC,KAAqD,CAAClB,WAAW,CAACY,gBAAlE,GACI,GAAEZ,WAAW,CAACiB,GAAZ,CAAgBE,cAAhB,EAAiC,GADvC,GAEG,KAHN,CAFF,CADF,CA3BF,EAsCGhB,SAAS,iBACR,uDACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,aAAD;AAAe,IAAA,cAAc,EAAE,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,EAAE,OAAnB;AAA4B,IAAA,UAAU,EAAE,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,CAAC,CAAC,eAAD,CAAR,CADF,CADF,eAKE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,EAAE;AAAEkB,MAAAA,SAAS,EAAE;AAAb,KAAnB;AAA2C,IAAA,KAAK,EAAE,OAAlD;AAA2D,IAAA,UAAU,EAAE,GAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,aAA5B;AAA0C,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAII,GAAD,yBAAGrB,WAAW,CAACsB,iBAAf,0DAAG,sBAA+BP,aAA/B,CAA6C,CAA7C,EAAgD;AAAEC,IAAAA,cAAc,EAAE;AAAlB,GAAhD,CAAyE,IAC3EhB,WAAW,CAACQ,WAAZ,CAAwBG,MACzB,SANH,CALF,CAFF,CAvCJ,CADF;AA4DD","sourcesContent":["import React from 'react'\nimport { AutoColumn } from '../Column'\nimport { RowBetween } from '../Row'\nimport styled from 'styled-components'\nimport { TYPE, StyledInternalLink } from '../../theme'\nimport { ButtonPrimary } from '../Button'\nimport { SingleSideStaking, SingleSideStakingInfo } from '../../state/stake/hooks'\nimport { useColor } from '../../hooks/useColor'\nimport { currencyId } from '../../utils/currencyId'\nimport { Break } from './styled'\nimport { useTranslation } from 'react-i18next'\nimport CurrencyLogo from '../CurrencyLogo'\nimport { JSBI } from '@pangolindex/sdk'\nimport { useChainId } from 'src/hooks'\n\nconst StatContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  gap: 12px;\n  margin-bottom: 1rem;\n  margin-right: 1rem;\n  margin-left: 1rem;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n   display: none;\n `};\n`\n\nconst AprContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  gap: 12px;\n  margin-bottom: 1rem;\n  margin-right: 1rem;\n  margin-left: 1rem;\n`\n\nconst Wrapper = styled(AutoColumn)<{ showBackground: boolean; bgColor: any }>`\n  border-radius: 12px;\n  width: 100%;\n  overflow: hidden;\n  position: relative;\n  opacity: ${({ showBackground }) => (showBackground ? '1' : '1')};\n  background: ${({ theme, bgColor, showBackground }) =>\n    `radial-gradient(91.85% 100% at 1.84% 0%, ${bgColor} 0%, ${showBackground ? theme.black : theme.bg5} 100%) `};\n  color: ${({ theme, showBackground }) => (showBackground ? theme.white : theme.text1)} !important;\n\n  ${({ showBackground }) =>\n    showBackground &&\n    `  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n     0px 24px 32px rgba(0, 0, 0, 0.01);`}\n`\n\nconst TopSection = styled.div`\n  display: grid;\n  grid-template-columns: 24px 1fr 120px;\n  grid-gap: 0px;\n  align-items: center;\n  padding: 1rem;\n  z-index: 1;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n     grid-template-columns: 24px 1fr 96px;\n   `};\n`\n\nconst BottomSection = styled.div<{ showBackground: boolean }>`\n  padding: 12px 16px;\n  opacity: ${({ showBackground }) => (showBackground ? '1' : '0.4')};\n  border-radius: 0 0 12px 12px;\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n  justify-content: space-between;\n  z-index: 1;\n`\n\nexport default function SingleSidePoolCard({\n  stakingInfo,\n  version\n}: {\n  stakingInfo: SingleSideStakingInfo\n  migration?: SingleSideStaking\n  version: string\n}) {\n  const { t } = useTranslation()\n  const isStaking = Boolean(stakingInfo.stakedAmount.greaterThan('0'))\n\n  // get the color of the token\n  const backgroundColor = useColor(stakingInfo.rewardToken)\n  const chainId = useChainId()\n\n  return (\n    <Wrapper showBackground={isStaking} bgColor={backgroundColor}>\n      <TopSection>\n        {chainId && <CurrencyLogo currency={stakingInfo.rewardToken} chainId={chainId} />}\n        <TYPE.white fontWeight={600} fontSize={24} style={{ marginLeft: '8px' }}>\n          Earn {stakingInfo.rewardToken.symbol}\n        </TYPE.white>\n\n        {(isStaking || !stakingInfo.isPeriodFinished) && (\n          <StyledInternalLink\n            to={`/stake/${version}/${currencyId(stakingInfo.rewardToken, chainId)}`}\n            style={{ width: '100%' }}\n          >\n            <ButtonPrimary padding=\"8px\" borderRadius=\"8px\">\n              {isStaking ? t('earn.manage') : t('earn.deposit')}\n            </ButtonPrimary>\n          </StyledInternalLink>\n        )}\n      </TopSection>\n\n      <StatContainer>\n        <RowBetween>\n          <TYPE.white> {t('earn.totalStaked')}</TYPE.white>\n          <TYPE.white>\n            {`${stakingInfo.totalStakedInPng.toSignificant(4, { groupSeparator: ',' }) ?? '-'} PNG`}\n          </TYPE.white>\n        </RowBetween>\n      </StatContainer>\n      <AprContainer>\n        <RowBetween>\n          <TYPE.white>APR</TYPE.white>\n          <TYPE.white>\n            {JSBI.greaterThan(stakingInfo.apr, JSBI.BigInt(0)) && !stakingInfo.isPeriodFinished\n              ? `${stakingInfo.apr.toLocaleString()}%`\n              : ' - '}\n          </TYPE.white>\n        </RowBetween>\n      </AprContainer>\n\n      {isStaking && (\n        <>\n          <Break />\n          <BottomSection showBackground={true}>\n            <TYPE.black color={'white'} fontWeight={500}>\n              <span>{t('earn.yourRate')}</span>\n            </TYPE.black>\n\n            <TYPE.black style={{ textAlign: 'right' }} color={'white'} fontWeight={500}>\n              <span role=\"img\" aria-label=\"wizard-icon\" style={{ marginRight: '0.5rem' }}>\n                ⚡\n              </span>\n              {`${stakingInfo.rewardRatePerWeek?.toSignificant(4, { groupSeparator: ',' })} ${\n                stakingInfo.rewardToken.symbol\n              } / week`}\n            </TYPE.black>\n          </BottomSection>\n        </>\n      )}\n    </Wrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}