{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Pool/EarnWidget/Stake/SelectPoolDrawer/PoolRow.tsx\";\nimport React, { useCallback } from 'react';\nimport { Text, DoubleCurrencyLogo, Box } from '@pangolindex/components';\nimport { CurrencyRowRoot, Balance } from './styled';\nimport { unwrappedToken } from 'src/utils/wrappedCurrency';\nimport { useActiveWeb3React } from 'src/hooks';\nimport { useTokenBalance } from 'src/state/wallet/hooks';\nimport { useChainId } from 'src/hooks';\n\nconst PoolRow = props => {\n  const {\n    pair,\n    style,\n    onSelect,\n    isSelected\n  } = props;\n  const {\n    account\n  } = useActiveWeb3React();\n  const chainId = useChainId();\n  const currency0 = unwrappedToken(pair.token0, chainId);\n  const currency1 = unwrappedToken(pair.token1, chainId);\n  const userPgl = useTokenBalance(account !== null && account !== void 0 ? account : undefined, pair === null || pair === void 0 ? void 0 : pair.liquidityToken);\n  const handleSelect = useCallback(() => {\n    onSelect(pair);\n  }, [onSelect, pair]);\n  return /*#__PURE__*/React.createElement(CurrencyRowRoot, {\n    style: style,\n    onClick: handleSelect,\n    disabled: isSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DoubleCurrencyLogo, {\n    size: 24,\n    currency0: currency0,\n    currency1: currency1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    color: \"text2\",\n    fontSize: 16,\n    fontWeight: 500,\n    lineHeight: \"40px\",\n    marginLeft: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, currency0 === null || currency0 === void 0 ? void 0 : currency0.symbol, \"/\", currency1 === null || currency1 === void 0 ? void 0 : currency1.symbol)), /*#__PURE__*/React.createElement(Balance, {\n    color: \"text1\",\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, userPgl ? userPgl.toSignificant(4) : '-'));\n};\n\nexport default PoolRow;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Pool/EarnWidget/Stake/SelectPoolDrawer/PoolRow.tsx"],"names":["React","useCallback","Text","DoubleCurrencyLogo","Box","CurrencyRowRoot","Balance","unwrappedToken","useActiveWeb3React","useTokenBalance","useChainId","PoolRow","props","pair","style","onSelect","isSelected","account","chainId","currency0","token0","currency1","token1","userPgl","undefined","liquidityToken","handleSelect","symbol","toSignificant"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,IAAT,EAAeC,kBAAf,EAAmCC,GAAnC,QAA8C,yBAA9C;AACA,SAASC,eAAT,EAA0BC,OAA1B,QAAyC,UAAzC;AAEA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,kBAAT,QAAmC,WAAnC;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,SAASC,UAAT,QAA2B,WAA3B;;AASA,MAAMC,OAAwB,GAAGC,KAAK,IAAI;AACxC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,QAAf;AAAyBC,IAAAA;AAAzB,MAAwCJ,KAA9C;AAEA,QAAM;AAAEK,IAAAA;AAAF,MAAcT,kBAAkB,EAAtC;AACA,QAAMU,OAAO,GAAGR,UAAU,EAA1B;AAEA,QAAMS,SAAS,GAAGZ,cAAc,CAACM,IAAI,CAACO,MAAN,EAAcF,OAAd,CAAhC;AACA,QAAMG,SAAS,GAAGd,cAAc,CAACM,IAAI,CAACS,MAAN,EAAcJ,OAAd,CAAhC;AAEA,QAAMK,OAAO,GAAGd,eAAe,CAACQ,OAAD,aAACA,OAAD,cAACA,OAAD,GAAYO,SAAZ,EAAuBX,IAAvB,aAAuBA,IAAvB,uBAAuBA,IAAI,CAAEY,cAA7B,CAA/B;AAEA,QAAMC,YAAY,GAAGzB,WAAW,CAAC,MAAM;AACrCc,IAAAA,QAAQ,CAACF,IAAD,CAAR;AACD,GAF+B,EAE7B,CAACE,QAAD,EAAWF,IAAX,CAF6B,CAAhC;AAIA,sBACE,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAEC,KAAxB;AAA+B,IAAA,OAAO,EAAEY,YAAxC;AAAsD,IAAA,QAAQ,EAAEV,UAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,UAAU,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AAAoB,IAAA,IAAI,EAAE,EAA1B;AAA8B,IAAA,SAAS,EAAEG,SAAzC;AAAoD,IAAA,SAAS,EAAEE,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,OAAZ;AAAoB,IAAA,QAAQ,EAAE,EAA9B;AAAkC,IAAA,UAAU,EAAE,GAA9C;AAAmD,IAAA,UAAU,EAAC,MAA9D;AAAqE,IAAA,UAAU,EAAE,EAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,SADH,aACGA,SADH,uBACGA,SAAS,CAAEQ,MADd,OACuBN,SADvB,aACuBA,SADvB,uBACuBA,SAAS,CAAEM,MADlC,CAFF,CADF,eAOE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,OAAf;AAAuB,IAAA,QAAQ,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,OAAO,GAAGA,OAAO,CAACK,aAAR,CAAsB,CAAtB,CAAH,GAA8B,GADxC,CAPF,CADF;AAaD,CA5BD;;AA6BA,eAAejB,OAAf","sourcesContent":["import React, { useCallback } from 'react'\nimport { Text, DoubleCurrencyLogo, Box } from '@pangolindex/components'\nimport { CurrencyRowRoot, Balance } from './styled'\nimport { Pair } from '@pangolindex/sdk'\nimport { unwrappedToken } from 'src/utils/wrappedCurrency'\nimport { useActiveWeb3React } from 'src/hooks'\nimport { useTokenBalance } from 'src/state/wallet/hooks'\nimport { useChainId } from 'src/hooks'\n\ninterface Props {\n  pair: Pair\n  style: any\n  onSelect: (pair: Pair) => void\n  isSelected: boolean\n}\n\nconst PoolRow: React.FC<Props> = props => {\n  const { pair, style, onSelect, isSelected } = props\n\n  const { account } = useActiveWeb3React()\n  const chainId = useChainId()\n\n  const currency0 = unwrappedToken(pair.token0, chainId)\n  const currency1 = unwrappedToken(pair.token1, chainId)\n\n  const userPgl = useTokenBalance(account ?? undefined, pair?.liquidityToken)\n\n  const handleSelect = useCallback(() => {\n    onSelect(pair)\n  }, [onSelect, pair])\n\n  return (\n    <CurrencyRowRoot style={style} onClick={handleSelect} disabled={isSelected}>\n      <Box display=\"flex\" alignItems=\"center\">\n        <DoubleCurrencyLogo size={24} currency0={currency0} currency1={currency1} />\n        <Text color=\"text2\" fontSize={16} fontWeight={500} lineHeight=\"40px\" marginLeft={10}>\n          {currency0?.symbol}/{currency1?.symbol}\n        </Text>\n      </Box>\n      <Balance color=\"text1\" fontSize={14}>\n        {userPgl ? userPgl.toSignificant(4) : '-'}\n      </Balance>\n    </CurrencyRowRoot>\n  )\n}\nexport default PoolRow\n"]},"metadata":{},"sourceType":"module"}