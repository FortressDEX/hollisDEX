{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Swap/PairInfo/PairChart/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { createChart, CrosshairMode } from 'lightweight-charts';\nimport { useMeasure } from 'react-use';\nimport { useDarkModeManager } from 'src/state/user/hooks';\nimport { TIMEFRAME } from 'src/constants';\nimport { usePairHourlyRateData, useHourlyPairTokensChartData } from 'src/state/pair/hooks';\nimport { CustomLightSpinner } from 'src/theme';\nimport Circle from \"src/assets/images/blue-loader.svg\";\nimport { Box } from '@pangolindex/components';\nimport { ChartWrapper, ChartContainer } from './styleds';\nimport { useChainId } from 'src/hooks';\nimport { CHAINS } from 'src/constants/chains';\n\nconst PairChart = _ref => {\n  var _pair$liquidityToken;\n\n  let {\n    pair,\n    tokenA,\n    tokenB\n  } = _ref;\n  const [ref, {\n    width,\n    height\n  }] = useMeasure();\n  const [chartCreated, setChartCreated] = useState();\n  const [chartSeries, setChartSeries] = useState();\n  const [isDark] = useDarkModeManager();\n  const timeWindow = TIMEFRAME.find(t => t.label === '1Y') || {};\n  const pairChartData = usePairHourlyRateData(((pair === null || pair === void 0 ? void 0 : (_pair$liquidityToken = pair.liquidityToken) === null || _pair$liquidityToken === void 0 ? void 0 : _pair$liquidityToken.address) || '').toLowerCase(), timeWindow === null || timeWindow === void 0 ? void 0 : timeWindow.momentIdentifier, 86400);\n  const chartData = pairChartData && (pair === null || pair === void 0 ? void 0 : pair.token0) === tokenB ? pairChartData[0] : pairChartData ? pairChartData[1] : [];\n  const pairTokensChartData = useHourlyPairTokensChartData((tokenA === null || tokenA === void 0 ? void 0 : tokenA.address) || '', (tokenB === null || tokenB === void 0 ? void 0 : tokenB.address) || '', timeWindow === null || timeWindow === void 0 ? void 0 : timeWindow.momentIdentifier, 86400);\n  const chartData1 = pairTokensChartData && (pair === null || pair === void 0 ? void 0 : pair.token0) === tokenB ? pairTokensChartData[0] : pairTokensChartData ? pairTokensChartData[1] : [];\n  const formattedData = (chartData || []).length > 0 ? chartData : chartData1; // if no chart created yet, create one with options and add to DOM manually\n\n  useEffect(() => {\n    let chart;\n\n    if (!chartCreated) {\n      const htmlElement = document.getElementById('chart-container-id');\n      chart = createChart(htmlElement, {\n        layout: {\n          backgroundColor: 'transparent',\n          textColor: '#fff',\n          fontSize: 12,\n          fontFamily: \"'Poppins',sans-serif\"\n        },\n        leftPriceScale: {\n          visible: true\n        },\n        rightPriceScale: {\n          visible: false,\n          borderVisible: false\n        },\n        timeScale: {\n          borderVisible: true // timeVisible: true,\n          // secondsVisible: false\n\n        },\n        grid: {\n          horzLines: {\n            color: '#707070',\n            visible: true,\n            style: 2\n          },\n          vertLines: {\n            color: '#707070',\n            visible: true,\n            style: 2\n          }\n        },\n        crosshair: {\n          mode: CrosshairMode.Normal,\n          horzLine: {\n            visible: true,\n            labelVisible: true\n          },\n          vertLine: {\n            visible: true,\n            style: 1,\n            width: 2,\n            color: 'rgba(32, 38, 46, 0.5)',\n            labelVisible: true\n          }\n        },\n        localization: {\n          dateFormat: 'yyyy-MM-dd'\n        }\n      });\n      const series = chart.addCandlestickSeries({\n        upColor: '#4bffb5',\n        downColor: '#ff4976',\n        borderDownColor: '#ff4976',\n        borderUpColor: '#4bffb5',\n        wickDownColor: '#838ca1',\n        wickUpColor: '#838ca1'\n      });\n      series === null || series === void 0 ? void 0 : series.setData([...(formattedData || [])]);\n      setChartSeries(series);\n      const toolTip = document.createElement('div');\n      toolTip.setAttribute('id', 'tooltip-id');\n      if (htmlElement) htmlElement.appendChild(toolTip);\n      toolTip.style.display = 'block';\n      toolTip.style.fontWeight = '400';\n      toolTip.style.left = -4 + 'px';\n      toolTip.style.top = '-' + 8 + 'px';\n      toolTip.style.backgroundColor = 'transparent';\n      chart.timeScale().fitContent();\n      setChartCreated(chart);\n    }\n  }, [chartCreated, formattedData]);\n  useEffect(() => {\n    if (chartCreated && formattedData) {\n      chartSeries === null || chartSeries === void 0 ? void 0 : chartSeries.setData([...(formattedData || [])]);\n    }\n  }, [formattedData, chartCreated, chartSeries]);\n  useEffect(() => {\n    if (chartCreated) {\n      chartCreated.applyOptions({\n        layout: {\n          textColor: isDark ? '#707070' : 'black'\n        }\n      });\n    }\n  }, [isDark, chartCreated]);\n  useEffect(() => {\n    chartCreated === null || chartCreated === void 0 ? void 0 : chartCreated.applyOptions({\n      width,\n      height\n    });\n  }, [width, height, chartCreated]);\n  const chainId = useChainId();\n  return /*#__PURE__*/React.createElement(ChartWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  }, !CHAINS[chainId].tracked_by_debank ? /*#__PURE__*/React.createElement(ChartContainer, {\n    id: \"chart-container-id\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, (formattedData || []).length === 0 && /*#__PURE__*/React.createElement(Box, {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, \"Not supported on this chain\"))) : /*#__PURE__*/React.createElement(ChartContainer, {\n    id: \"chart-container-id\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, (formattedData || []).length === 0 && /*#__PURE__*/React.createElement(Box, {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CustomLightSpinner, {\n    src: Circle,\n    alt: \"loader\",\n    size: '50px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }))));\n};\n\nexport default PairChart;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Swap/PairInfo/PairChart/index.tsx"],"names":["React","useState","useEffect","createChart","CrosshairMode","useMeasure","useDarkModeManager","TIMEFRAME","usePairHourlyRateData","useHourlyPairTokensChartData","CustomLightSpinner","Box","ChartWrapper","ChartContainer","useChainId","CHAINS","PairChart","pair","tokenA","tokenB","ref","width","height","chartCreated","setChartCreated","chartSeries","setChartSeries","isDark","timeWindow","find","t","label","pairChartData","liquidityToken","address","toLowerCase","momentIdentifier","chartData","token0","pairTokensChartData","chartData1","formattedData","length","chart","htmlElement","document","getElementById","layout","backgroundColor","textColor","fontSize","fontFamily","leftPriceScale","visible","rightPriceScale","borderVisible","timeScale","grid","horzLines","color","style","vertLines","crosshair","mode","Normal","horzLine","labelVisible","vertLine","localization","dateFormat","series","addCandlestickSeries","upColor","downColor","borderDownColor","borderUpColor","wickDownColor","wickUpColor","setData","toolTip","createElement","setAttribute","appendChild","display","fontWeight","left","top","fitContent","applyOptions","chainId","tracked_by_debank","Circle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Pair, Token } from '@pangolindex/sdk'\nimport { createChart, CrosshairMode, IChartApi, ISeriesApi } from 'lightweight-charts'\nimport { useMeasure } from 'react-use'\nimport { useDarkModeManager } from 'src/state/user/hooks'\nimport { TIMEFRAME } from 'src/constants'\nimport { usePairHourlyRateData, useHourlyPairTokensChartData } from 'src/state/pair/hooks'\nimport { CustomLightSpinner } from 'src/theme'\nimport Circle from 'src/assets/images/blue-loader.svg'\nimport { Box } from '@pangolindex/components'\nimport { ChartWrapper, ChartContainer } from './styleds'\nimport { useChainId } from 'src/hooks'\nimport { CHAINS } from 'src/constants/chains'\n\ntype Props = { pair?: Pair | null; tokenB?: Token; tokenA?: Token }\n\nconst PairChart: React.FC<Props> = ({ pair, tokenA, tokenB }) => {\n  const [ref, { width, height }] = useMeasure()\n\n  const [chartCreated, setChartCreated] = useState<IChartApi>()\n  const [chartSeries, setChartSeries] = useState<ISeriesApi<'Candlestick'>>()\n  const [isDark] = useDarkModeManager()\n\n  const timeWindow =\n    TIMEFRAME.find(t => t.label === '1Y') ||\n    ({} as {\n      description: string\n      label: string\n      interval: number\n      momentIdentifier: string\n    })\n\n  const pairChartData = usePairHourlyRateData(\n    (pair?.liquidityToken?.address || '').toLowerCase(),\n    timeWindow?.momentIdentifier,\n    86400\n  )\n  const chartData = pairChartData && pair?.token0 === tokenB ? pairChartData[0] : pairChartData ? pairChartData[1] : []\n\n  const pairTokensChartData = useHourlyPairTokensChartData(\n    tokenA?.address || '',\n    tokenB?.address || '',\n    timeWindow?.momentIdentifier,\n    86400\n  )\n\n  const chartData1 =\n    pairTokensChartData && pair?.token0 === tokenB\n      ? pairTokensChartData[0]\n      : pairTokensChartData\n      ? pairTokensChartData[1]\n      : []\n\n  const formattedData = (chartData || []).length > 0 ? chartData : chartData1\n\n  // if no chart created yet, create one with options and add to DOM manually\n  useEffect(() => {\n    let chart\n    if (!chartCreated) {\n      const htmlElement = document.getElementById('chart-container-id')!\n      chart = createChart(htmlElement, {\n        layout: {\n          backgroundColor: 'transparent',\n          textColor: '#fff',\n          fontSize: 12,\n          fontFamily: \"'Poppins',sans-serif\"\n        },\n        leftPriceScale: {\n          visible: true\n        },\n        rightPriceScale: {\n          visible: false,\n          borderVisible: false\n        },\n        timeScale: {\n          borderVisible: true\n          // timeVisible: true,\n          // secondsVisible: false\n        },\n        grid: {\n          horzLines: {\n            color: '#707070',\n            visible: true,\n            style: 2\n          },\n          vertLines: {\n            color: '#707070',\n            visible: true,\n            style: 2\n          }\n        },\n        crosshair: {\n          mode: CrosshairMode.Normal,\n          horzLine: {\n            visible: true,\n            labelVisible: true\n          },\n          vertLine: {\n            visible: true,\n            style: 1,\n            width: 2,\n            color: 'rgba(32, 38, 46, 0.5)',\n            labelVisible: true\n          }\n        },\n        localization: {\n          dateFormat: 'yyyy-MM-dd'\n        }\n      })\n\n      const series = chart.addCandlestickSeries({\n        upColor: '#4bffb5',\n        downColor: '#ff4976',\n        borderDownColor: '#ff4976',\n        borderUpColor: '#4bffb5',\n        wickDownColor: '#838ca1',\n        wickUpColor: '#838ca1'\n      })\n\n      series?.setData([...(formattedData || [])])\n      setChartSeries(series)\n\n      const toolTip = document.createElement('div')\n      toolTip.setAttribute('id', 'tooltip-id')\n      if (htmlElement) htmlElement.appendChild(toolTip)\n      toolTip.style.display = 'block'\n      toolTip.style.fontWeight = '400'\n      toolTip.style.left = -4 + 'px'\n      toolTip.style.top = '-' + 8 + 'px'\n      toolTip.style.backgroundColor = 'transparent'\n\n      chart.timeScale().fitContent()\n\n      setChartCreated(chart)\n    }\n  }, [chartCreated, formattedData])\n\n  useEffect(() => {\n    if (chartCreated && formattedData) {\n      chartSeries?.setData([...(formattedData || [])])\n    }\n  }, [formattedData, chartCreated, chartSeries])\n\n  useEffect(() => {\n    if (chartCreated) {\n      chartCreated.applyOptions({\n        layout: {\n          textColor: isDark ? '#707070' : 'black'\n        }\n      })\n    }\n  }, [isDark, chartCreated])\n\n  useEffect(() => {\n    chartCreated?.applyOptions({\n      width,\n      height\n    })\n  }, [width, height, chartCreated])\n\n  const chainId = useChainId()\n\n  return (\n    <ChartWrapper>\n      {!CHAINS[chainId].tracked_by_debank ? (\n        <ChartContainer id=\"chart-container-id\" ref={ref as any}>\n          {(formattedData || []).length === 0 && (\n            <Box\n              position={'absolute'}\n              top={0}\n              left={0}\n              bottom={0}\n              right={0}\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n            >\n              <h1>Not supported on this chain</h1>\n            </Box>\n          )}\n        </ChartContainer>\n      ) : (\n        <ChartContainer id=\"chart-container-id\" ref={ref as any}>\n          {(formattedData || []).length === 0 && (\n            <Box\n              position={'absolute'}\n              top={0}\n              left={0}\n              bottom={0}\n              right={0}\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n            >\n              <CustomLightSpinner src={Circle} alt=\"loader\" size={'50px'} />\n            </Box>\n          )}\n        </ChartContainer>\n      )}\n    </ChartWrapper>\n  )\n}\n\nexport default PairChart\n"]},"metadata":{},"sourceType":"module"}