{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Pool/Wallet/index.tsx\";\nimport React, { useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { TYPE } from 'src/theme';\nimport Card from 'src/components/Card';\nimport { useActiveWeb3React } from 'src/hooks';\nimport { useTranslation } from 'react-i18next';\nimport { PageWrapper, EmptyProposals, PanelWrapper, MobileContainer } from './styleds';\nimport WalletCard from './WalletCard';\nimport Scrollbars from 'react-custom-scrollbars';\nimport Loader from 'src/components/Loader';\nimport { useGetUserLP } from 'src/state/migrate/hooks';\nimport DropdownMenu from 'src/components/Beta/DropdownMenu';\n\nconst Wallet = _ref => {\n  let {\n    setMenu,\n    activeMenu,\n    menuItems\n  } = _ref;\n  const theme = useContext(ThemeContext);\n  const {\n    account\n  } = useActiveWeb3React();\n  const {\n    v2IsLoading,\n    allV2PairsWithLiquidity\n  } = useGetUserLP(); // fetch the user's balances of all tracked V2 LP tokens\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/React.createElement(PageWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MobileContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DropdownMenu, {\n    options: menuItems,\n    value: activeMenu,\n    onSelect: value => {\n      setMenu(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })), !account ? /*#__PURE__*/React.createElement(Card, {\n    padding: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    color: theme.text3,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, t('pool.connectWalletToView'))) : v2IsLoading ? /*#__PURE__*/React.createElement(Loader, {\n    style: {\n      margin: 'auto'\n    },\n    stroke: theme.primary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }) : (allV2PairsWithLiquidity === null || allV2PairsWithLiquidity === void 0 ? void 0 : allV2PairsWithLiquidity.length) > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Scrollbars, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PanelWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, allV2PairsWithLiquidity.map(v2Pair => /*#__PURE__*/React.createElement(WalletCard, {\n    key: v2Pair.liquidityToken.address,\n    pair: v2Pair,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }))))) : /*#__PURE__*/React.createElement(EmptyProposals, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    color: theme.text3,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, t('pool.noLiquidity'))));\n};\n\nexport default Wallet;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Pool/Wallet/index.tsx"],"names":["React","useContext","ThemeContext","TYPE","Card","useActiveWeb3React","useTranslation","PageWrapper","EmptyProposals","PanelWrapper","MobileContainer","WalletCard","Scrollbars","Loader","useGetUserLP","DropdownMenu","Wallet","setMenu","activeMenu","menuItems","theme","account","v2IsLoading","allV2PairsWithLiquidity","t","value","text3","margin","primary","length","map","v2Pair","liquidityToken","address"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { TYPE } from 'src/theme'\nimport Card from 'src/components/Card'\nimport { useActiveWeb3React } from 'src/hooks'\nimport { useTranslation } from 'react-i18next'\nimport { PageWrapper, EmptyProposals, PanelWrapper, MobileContainer } from './styleds'\nimport WalletCard from './WalletCard'\nimport Scrollbars from 'react-custom-scrollbars'\nimport Loader from 'src/components/Loader'\nimport { useGetUserLP } from 'src/state/migrate/hooks'\n\nimport DropdownMenu from 'src/components/Beta/DropdownMenu'\n\ninterface Props {\n  setMenu: (value: string) => void\n  activeMenu: string\n  menuItems: Array<{ label: string; value: string }>\n}\n\nconst Wallet: React.FC<Props> = ({ setMenu, activeMenu, menuItems }) => {\n  const theme = useContext(ThemeContext)\n  const { account } = useActiveWeb3React()\n  const { v2IsLoading, allV2PairsWithLiquidity } = useGetUserLP()\n  // fetch the user's balances of all tracked V2 LP tokens\n\n  const { t } = useTranslation()\n\n  return (\n    <PageWrapper>\n      <MobileContainer>\n        <DropdownMenu\n          options={menuItems}\n          value={activeMenu}\n          onSelect={value => {\n            setMenu(value)\n          }}\n        />\n      </MobileContainer>\n\n      {!account ? (\n        <Card padding=\"40px\">\n          <TYPE.body color={theme.text3} textAlign=\"center\">\n            {t('pool.connectWalletToView')}\n          </TYPE.body>\n        </Card>\n      ) : v2IsLoading ? (\n        <Loader style={{ margin: 'auto' }} stroke={theme.primary} />\n      ) : allV2PairsWithLiquidity?.length > 0 ? (\n        <>\n          <Scrollbars>\n            <PanelWrapper>\n              {allV2PairsWithLiquidity.map(v2Pair => (\n                <WalletCard key={v2Pair.liquidityToken.address} pair={v2Pair} />\n              ))}\n            </PanelWrapper>\n          </Scrollbars>\n        </>\n      ) : (\n        <EmptyProposals>\n          <TYPE.body color={theme.text3} textAlign=\"center\">\n            {t('pool.noLiquidity')}\n          </TYPE.body>\n        </EmptyProposals>\n      )}\n    </PageWrapper>\n  )\n}\n\nexport default Wallet\n"]},"metadata":{},"sourceType":"module"}