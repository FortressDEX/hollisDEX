{"ast":null,"code":"import { ChainId, Token } from '@pangolindex/sdk';\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { AEB_TOKENS } from '../../constants/lists';\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  constructor(tokenInfo, tags) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name);\n    this.tokenInfo = void 0;\n    this.tags = void 0;\n    this.tokenInfo = tokenInfo;\n    this.tags = tags;\n  }\n\n  get logoURI() {\n    return this.tokenInfo.logoURI;\n  }\n\n}\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST = {\n  [ChainId.FUJI]: {},\n  [ChainId.AVALANCHE]: {},\n  [ChainId.WAGMI]: {}\n};\nconst listCache = typeof WeakMap !== 'undefined' ? new WeakMap() : null;\nexport function listToTokenMap(list) {\n  const result = listCache === null || listCache === void 0 ? void 0 : listCache.get(list);\n  if (result) return result;\n  const map = list.tokens.reduce((tokenMap, tokenInfo) => {\n    var _tokenInfo$tags$map$f, _tokenInfo$tags, _tokenInfo$tags$map;\n\n    const tags = (_tokenInfo$tags$map$f = (_tokenInfo$tags = tokenInfo.tags) === null || _tokenInfo$tags === void 0 ? void 0 : (_tokenInfo$tags$map = _tokenInfo$tags.map(tagId => {\n      var _list$tags;\n\n      if (!((_list$tags = list.tags) === null || _list$tags === void 0 ? void 0 : _list$tags[tagId])) return undefined;\n      return { ...list.tags[tagId],\n        id: tagId\n      };\n    })) === null || _tokenInfo$tags$map === void 0 ? void 0 : _tokenInfo$tags$map.filter(x => Boolean(x))) !== null && _tokenInfo$tags$map$f !== void 0 ? _tokenInfo$tags$map$f : [];\n    const token = new WrappedTokenInfo(tokenInfo, tags);\n    if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.');\n    return { ...tokenMap,\n      [token.chainId]: { ...tokenMap[token.chainId],\n        [token.address]: token\n      }\n    };\n  }, { ...EMPTY_LIST\n  });\n  listCache === null || listCache === void 0 ? void 0 : listCache.set(list, map);\n  return map;\n}\nexport function useTokenList(urls) {\n  const lists = useSelector(state => state.lists.byUrl);\n  const tokenList = {};\n  return useMemo(() => {\n    ;\n    [].concat(urls || []).forEach(url => {\n      var _lists$url;\n\n      const current = (_lists$url = lists[url]) === null || _lists$url === void 0 ? void 0 : _lists$url.current;\n\n      if (url && current) {\n        try {\n          const data = listToTokenMap(current);\n\n          for (const [chainId, tokens] of Object.entries(data)) {\n            tokenList[chainId] = tokenList[chainId] || {};\n            tokenList[chainId] = { ...tokenList[chainId],\n              ...tokens\n            };\n          }\n        } catch (error) {\n          console.error('Could not show token list due to error', error);\n        }\n      }\n    });\n    return tokenList; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [lists, urls]);\n}\nexport function useSelectedListUrl() {\n  return useSelector(state => {\n    var _state$lists;\n\n    return [].concat((state === null || state === void 0 ? void 0 : (_state$lists = state.lists) === null || _state$lists === void 0 ? void 0 : _state$lists.selectedListUrl) || []);\n  });\n}\nexport function useSelectedTokenList() {\n  return useTokenList(useSelectedListUrl());\n}\nexport function useSelectedListInfo() {\n  var _ref, _list$current, _list$pendingUpdate, _ref2, _ref3;\n\n  const selectedListUrl = useSelectedListUrl();\n  const firstSelectedUrl = (_ref = selectedListUrl || []) === null || _ref === void 0 ? void 0 : _ref[0];\n  const listsByUrl = useSelector(state => state.lists.byUrl);\n  const list = firstSelectedUrl ? listsByUrl[firstSelectedUrl] : undefined;\n  return {\n    current: (_list$current = list === null || list === void 0 ? void 0 : list.current) !== null && _list$current !== void 0 ? _list$current : null,\n    pending: (_list$pendingUpdate = list === null || list === void 0 ? void 0 : list.pendingUpdate) !== null && _list$pendingUpdate !== void 0 ? _list$pendingUpdate : null,\n    loading: (list === null || list === void 0 ? void 0 : list.loadingRequestId) !== null,\n    multipleSelected: ((_ref2 = selectedListUrl || []) === null || _ref2 === void 0 ? void 0 : _ref2.length) > 1,\n    selectedCount: (_ref3 = selectedListUrl || []) === null || _ref3 === void 0 ? void 0 : _ref3.length\n  };\n} // returns all downloaded current lists\n\nexport function useAllLists() {\n  const lists = useSelector(state => state.lists.byUrl);\n  return useMemo(() => Object.keys(lists).map(url => lists[url].current).filter(l => Boolean(l)), [lists]);\n}\nexport function useIsSelectedAEBToken() {\n  const selectedOutputToken = useSelector(state => state.swap.OUTPUT);\n  return AEB_TOKENS.some(tokenAddress => tokenAddress === (selectedOutputToken === null || selectedOutputToken === void 0 ? void 0 : selectedOutputToken.currencyId));\n}","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/state/lists/hooks.ts"],"names":["ChainId","Token","useMemo","useSelector","AEB_TOKENS","WrappedTokenInfo","constructor","tokenInfo","tags","chainId","address","decimals","symbol","name","logoURI","EMPTY_LIST","FUJI","AVALANCHE","WAGMI","listCache","WeakMap","listToTokenMap","list","result","get","map","tokens","reduce","tokenMap","tagId","undefined","id","filter","x","Boolean","token","Error","set","useTokenList","urls","lists","state","byUrl","tokenList","concat","forEach","url","current","data","Object","entries","error","console","useSelectedListUrl","selectedListUrl","useSelectedTokenList","useSelectedListInfo","firstSelectedUrl","listsByUrl","pending","pendingUpdate","loading","loadingRequestId","multipleSelected","length","selectedCount","useAllLists","keys","l","useIsSelectedAEBToken","selectedOutputToken","swap","OUTPUT","some","tokenAddress","currencyId"],"mappings":"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","sourcesContent":["import { ChainId, Token } from '@pangolindex/sdk'\nimport { Tags, TokenInfo, TokenList } from '@pangolindex/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../index'\nimport { AEB_TOKENS } from '../../constants/lists'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n  public readonly tags: TagInfo[]\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<{ [chainId in ChainId]: Readonly<{ [tokenAddress: string]: WrappedTokenInfo }> }>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.FUJI]: {},\n  [ChainId.AVALANCHE]: {},\n  [ChainId.WAGMI]: {}\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map(tagId => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: token\n        }\n      }\n    },\n    { ...EMPTY_LIST }\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useTokenList(urls: string[] | undefined): TokenAddressMap {\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>(state => state.lists.byUrl)\n\n  const tokenList = {} as { [chainId: string]: { [tokenAddress: string]: WrappedTokenInfo } }\n  return useMemo(() => {\n    ;([] as string[]).concat(urls || []).forEach(url => {\n      const current = lists[url]?.current\n      if (url && current) {\n        try {\n          const data = listToTokenMap(current)\n          for (const [chainId, tokens] of Object.entries(data)) {\n            tokenList[chainId] = tokenList[chainId] || {}\n            tokenList[chainId] = {\n              ...tokenList[chainId],\n              ...tokens\n            }\n          }\n        } catch (error) {\n          console.error('Could not show token list due to error', error)\n        }\n      }\n    })\n    return tokenList as TokenAddressMap\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [lists, urls])\n}\n\nexport function useSelectedListUrl(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['selectedListUrl']>(state =>\n    ([] as string[]).concat(state?.lists?.selectedListUrl || [])\n  )\n}\n\nexport function useSelectedTokenList(): TokenAddressMap {\n  return useTokenList(useSelectedListUrl())\n}\n\nexport function useSelectedListInfo(): {\n  current: TokenList | null\n  pending: TokenList | null\n  loading: boolean\n  multipleSelected: boolean\n  selectedCount: number\n} {\n  const selectedListUrl = useSelectedListUrl()\n  const firstSelectedUrl = (selectedListUrl || [])?.[0]\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>(state => state.lists.byUrl)\n  const list = firstSelectedUrl ? listsByUrl[firstSelectedUrl] : undefined\n  return {\n    current: list?.current ?? null,\n    pending: list?.pendingUpdate ?? null,\n    loading: list?.loadingRequestId !== null,\n    multipleSelected: (selectedListUrl || [])?.length > 1,\n    selectedCount: (selectedListUrl || [])?.length\n  }\n}\n\n// returns all downloaded current lists\nexport function useAllLists(): TokenList[] {\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>(state => state.lists.byUrl)\n\n  return useMemo(\n    () =>\n      Object.keys(lists)\n        .map(url => lists[url].current)\n        .filter((l): l is TokenList => Boolean(l)),\n    [lists]\n  )\n}\n\nexport function useIsSelectedAEBToken(): boolean {\n  const selectedOutputToken = useSelector<AppState, AppState['swap']['OUTPUT']>(state => state.swap.OUTPUT)\n  return AEB_TOKENS.some(tokenAddress => tokenAddress === selectedOutputToken?.currencyId)\n}\n"]},"metadata":{},"sourceType":"module"}