{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/earn/StakingModal.tsx\";\nimport React, { useState, useCallback } from 'react';\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline';\nimport { Box } from '@pangolindex/components';\nimport Modal from '../Modal';\nimport { AutoColumn } from '../Column';\nimport styled from 'styled-components';\nimport { RowBetween } from '../Row';\nimport { TYPE, CloseIcon } from '../../theme';\nimport { ButtonConfirmed, ButtonError } from '../Button';\nimport ProgressCircles from '../ProgressSteps';\nimport CurrencyInputPanel from '../CurrencyInputPanel';\nimport { TokenAmount, Pair } from '@pangolindex/sdk';\nimport { useActiveWeb3React } from '../../hooks';\nimport { maxAmountSpend } from '../../utils/maxAmountSpend';\nimport { usePairContract, useStakingContract } from '../../hooks/useContract';\nimport { useApproveCallback, ApprovalState } from '../../hooks/useApproveCallback';\nimport { splitSignature } from 'ethers/lib/utils';\nimport { useDerivedStakeInfo, useMinichefPools } from '../../state/stake/hooks';\nimport { wrappedCurrencyAmount } from '../../utils/wrappedCurrency';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport { LoadingView, SubmittedView } from '../ModalViews';\nimport { useTranslation } from 'react-i18next';\nimport { useChainId } from 'src/hooks';\nconst HypotheticalRewardRate = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-right: 20px;\n  padding-left: 20px;\n\n  opacity: ${_ref => {\n  let {\n    dim\n  } = _ref;\n  return dim ? 0.5 : 1;\n}};\n`;\nconst ContentWrapper = styled(AutoColumn)`\n  width: 100%;\n  padding: 1rem;\n`;\nexport default function StakingModal(_ref2) {\n  var _ref3;\n\n  let {\n    isOpen,\n    onDismiss,\n    stakingInfo,\n    userLiquidityUnstaked,\n    version,\n    extraRewardTokensAmount\n  } = _ref2;\n  const {\n    account,\n    library\n  } = useActiveWeb3React();\n  const chainId = useChainId(); // track and parse user input\n\n  const [typedValue, setTypedValue] = useState('');\n  const {\n    parsedAmount,\n    error\n  } = useDerivedStakeInfo(typedValue, stakingInfo.stakedAmount.token, userLiquidityUnstaked);\n  const parsedAmountWrapped = wrappedCurrencyAmount(parsedAmount, chainId);\n  let hypotheticalWeeklyRewardRate = new TokenAmount(stakingInfo.rewardRatePerWeek.token, '0');\n\n  if (parsedAmountWrapped === null || parsedAmountWrapped === void 0 ? void 0 : parsedAmountWrapped.greaterThan('0')) {\n    hypotheticalWeeklyRewardRate = stakingInfo.getHypotheticalWeeklyRewardRate(stakingInfo.stakedAmount.add(parsedAmountWrapped), stakingInfo.totalStakedAmount.add(parsedAmountWrapped), stakingInfo.totalRewardRatePerSecond);\n  } // state for pending and submitted txn views\n\n\n  const addTransaction = useTransactionAdder();\n  const [attempting, setAttempting] = useState(false);\n  const [hash, setHash] = useState();\n  const wrappedOnDismiss = useCallback(() => {\n    setHash(undefined);\n    setAttempting(false);\n    onDismiss();\n  }, [onDismiss]); // pair contract for this token to be staked\n\n  const dummyPair = new Pair(new TokenAmount(stakingInfo.tokens[0], '0'), new TokenAmount(stakingInfo.tokens[1], '0'), chainId);\n  const pairContract = usePairContract(dummyPair.liquidityToken.address); // approval data for stake\n\n  const deadline = useTransactionDeadline();\n  const {\n    t\n  } = useTranslation();\n  const [signatureData, setSignatureData] = useState(null);\n  const [approval, approveCallback] = useApproveCallback(chainId, parsedAmount, stakingInfo.stakingRewardAddress);\n  const stakingContract = useStakingContract(stakingInfo.stakingRewardAddress);\n  const poolMap = useMinichefPools();\n  const isSuperFarm = ((_ref3 = extraRewardTokensAmount || []) === null || _ref3 === void 0 ? void 0 : _ref3.length) > 0;\n\n  async function onStake() {\n    if (stakingContract && poolMap && parsedAmount && deadline) {\n      setAttempting(true);\n      const method = version < 2 ? 'stake' : 'deposit';\n      const args = version < 2 ? [`0x${parsedAmount.raw.toString(16)}`] : [poolMap[stakingInfo.stakedAmount.token.address], `0x${parsedAmount.raw.toString(16)}`, account];\n\n      if (approval === ApprovalState.APPROVED) {\n        stakingContract[method](...args).then(response => {\n          addTransaction(response, {\n            summary: t('earn.depositLiquidity')\n          });\n          setHash(response.hash);\n        }).catch(error => {\n          setAttempting(false); // we only care if the error is something _other_ than the user rejected the tx\n\n          if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n            console.error(error);\n          }\n        });\n      } else if (signatureData) {\n        const permitMethod = version < 2 ? 'stakeWithPermit' : 'depositWithPermit';\n        const permitArgs = version < 2 ? [`0x${parsedAmount.raw.toString(16)}`, signatureData.deadline, signatureData.v, signatureData.r, signatureData.s] : [poolMap[stakingInfo.stakedAmount.token.address], `0x${parsedAmount.raw.toString(16)}`, account, signatureData.deadline, signatureData.v, signatureData.r, signatureData.s];\n        stakingContract[permitMethod](...permitArgs).then(response => {\n          addTransaction(response, {\n            summary: t('earn.depositLiquidity')\n          });\n          setHash(response.hash);\n        }).catch(error => {\n          setAttempting(false); // we only care if the error is something _other_ than the user rejected the tx\n\n          if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n            console.error(error);\n          }\n        });\n      } else {\n        setAttempting(false);\n        throw new Error(t('earn.attemptingToStakeError'));\n      }\n    }\n  } // wrapped onUserInput to clear signatures\n\n\n  const onUserInput = useCallback(typedValue => {\n    setSignatureData(null);\n    setTypedValue(typedValue);\n  }, []); // used for max input button\n\n  const maxAmountInput = maxAmountSpend(chainId, userLiquidityUnstaked);\n  const atMaxAmount = Boolean(maxAmountInput && (parsedAmount === null || parsedAmount === void 0 ? void 0 : parsedAmount.equalTo(maxAmountInput)));\n  const handleMax = useCallback(() => {\n    maxAmountInput && onUserInput(maxAmountInput.toExact());\n  }, [maxAmountInput, onUserInput]);\n\n  async function onAttemptToApprove() {\n    if (!pairContract || !library || !deadline) throw new Error(t('earn.missingDependencies'));\n    const liquidityAmount = parsedAmount;\n    if (!liquidityAmount) throw new Error(t('earn.missingLiquidityAmount')); // try to gather a signature for permission\n\n    const nonce = await pairContract.nonces(account);\n    const EIP712Domain = [{\n      name: 'name',\n      type: 'string'\n    }, {\n      name: 'version',\n      type: 'string'\n    }, {\n      name: 'chainId',\n      type: 'uint256'\n    }, {\n      name: 'verifyingContract',\n      type: 'address'\n    }];\n    const domain = {\n      name: 'Pangolin Liquidity',\n      version: '1',\n      chainId: chainId,\n      verifyingContract: pairContract.address\n    };\n    const Permit = [{\n      name: 'owner',\n      type: 'address'\n    }, {\n      name: 'spender',\n      type: 'address'\n    }, {\n      name: 'value',\n      type: 'uint256'\n    }, {\n      name: 'nonce',\n      type: 'uint256'\n    }, {\n      name: 'deadline',\n      type: 'uint256'\n    }];\n    const message = {\n      owner: account,\n      spender: stakingInfo.stakingRewardAddress,\n      value: liquidityAmount.raw.toString(),\n      nonce: nonce.toHexString(),\n      deadline: deadline.toNumber()\n    };\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain,\n        Permit\n      },\n      domain,\n      primaryType: 'Permit',\n      message\n    });\n    library.send('eth_signTypedData_v4', [account, data]).then(splitSignature).then(signature => {\n      setSignatureData({\n        v: signature.v,\n        r: signature.r,\n        s: signature.s,\n        deadline: deadline.toNumber()\n      });\n    }).catch(error => {\n      // for all errors other than 4001 (EIP-1193 user rejected request), fall back to manual approve\n      if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n        approveCallback();\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    onDismiss: wrappedOnDismiss,\n    maxHeight: 90,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 5\n    }\n  }, !attempting && !hash && /*#__PURE__*/React.createElement(ContentWrapper, {\n    gap: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.mediumHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }, t('earn.deposit')), /*#__PURE__*/React.createElement(CloseIcon, {\n    onClick: wrappedOnDismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(CurrencyInputPanel, {\n    value: typedValue,\n    onUserInput: onUserInput,\n    onMax: handleMax,\n    showMaxButton: !atMaxAmount,\n    currency: stakingInfo.stakedAmount.token,\n    pair: dummyPair,\n    label: '',\n    disableCurrencySelect: true,\n    customBalanceText: t('earn.availableToDeposit'),\n    id: \"stake-liquidity-token\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(HypotheticalRewardRate, {\n    dim: !hypotheticalWeeklyRewardRate.greaterThan('0'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 15\n    }\n  }, t('earn.weeklyRewards'))), /*#__PURE__*/React.createElement(TYPE.black, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  }, hypotheticalWeeklyRewardRate.toSignificant(4, {\n    groupSeparator: ','\n  }), ' ', t('earn.rewardPerWeek', {\n    symbol: 'PNG'\n  }))), isSuperFarm && /*#__PURE__*/React.createElement(HypotheticalRewardRate, {\n    dim: !hypotheticalWeeklyRewardRate.greaterThan('0'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }\n  }, t('earn.extraReward'))), /*#__PURE__*/React.createElement(Box, {\n    textAlign: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 15\n    }\n  }, extraRewardTokensAmount === null || extraRewardTokensAmount === void 0 ? void 0 : extraRewardTokensAmount.map((reward, index) => {\n    var _stakingInfo$rewardTo, _stakingInfo$getExtra;\n\n    const tokenMultiplier = stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$rewardTo = stakingInfo.rewardTokensMultiplier) === null || _stakingInfo$rewardTo === void 0 ? void 0 : _stakingInfo$rewardTo[index];\n    const extraTokenWeeklyRewardRate = stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$getExtra = stakingInfo.getExtraTokensWeeklyRewardRate) === null || _stakingInfo$getExtra === void 0 ? void 0 : _stakingInfo$getExtra.call(stakingInfo, hypotheticalWeeklyRewardRate, reward === null || reward === void 0 ? void 0 : reward.token, tokenMultiplier);\n\n    if (extraTokenWeeklyRewardRate) {\n      var _reward$token;\n\n      return /*#__PURE__*/React.createElement(TYPE.black, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 23\n        }\n      }, extraTokenWeeklyRewardRate.toSignificant(4, {\n        groupSeparator: ','\n      }), ' ', t('earn.rewardPerWeek', {\n        symbol: reward === null || reward === void 0 ? void 0 : (_reward$token = reward.token) === null || _reward$token === void 0 ? void 0 : _reward$token.symbol\n      }));\n    }\n\n    return null;\n  }))), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonConfirmed, {\n    mr: \"0.5rem\",\n    onClick: onAttemptToApprove,\n    confirmed: approval === ApprovalState.APPROVED || signatureData !== null,\n    disabled: approval !== ApprovalState.NOT_APPROVED || signatureData !== null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }\n  }, t('earn.approve')), /*#__PURE__*/React.createElement(ButtonError, {\n    disabled: !!error || signatureData === null && approval !== ApprovalState.APPROVED,\n    error: !!error && !!parsedAmount,\n    onClick: onStake,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }, error !== null && error !== void 0 ? error : t('earn.deposit'))), /*#__PURE__*/React.createElement(ProgressCircles, {\n    steps: [approval === ApprovalState.APPROVED || signatureData !== null],\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 11\n    }\n  })), attempting && !hash && /*#__PURE__*/React.createElement(LoadingView, {\n    onDismiss: wrappedOnDismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"12px\",\n    justify: 'center',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.largeHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }\n  }, t('earn.depositingLiquidity')), /*#__PURE__*/React.createElement(TYPE.body, {\n    fontSize: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }\n  }, parsedAmount === null || parsedAmount === void 0 ? void 0 : parsedAmount.toSignificant(4), \" PGL\"))), attempting && hash && /*#__PURE__*/React.createElement(SubmittedView, {\n    onDismiss: wrappedOnDismiss,\n    hash: hash,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"12px\",\n    justify: 'center',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.largeHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }\n  }, t('earn.transactionSubmitted')), /*#__PURE__*/React.createElement(TYPE.body, {\n    fontSize: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }\n  }, t('earn.deposited'), \" \", parsedAmount === null || parsedAmount === void 0 ? void 0 : parsedAmount.toSignificant(4), \" PGL\"))));\n}","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/earn/StakingModal.tsx"],"names":["React","useState","useCallback","useTransactionDeadline","Box","Modal","AutoColumn","styled","RowBetween","TYPE","CloseIcon","ButtonConfirmed","ButtonError","ProgressCircles","CurrencyInputPanel","TokenAmount","Pair","useActiveWeb3React","maxAmountSpend","usePairContract","useStakingContract","useApproveCallback","ApprovalState","splitSignature","useDerivedStakeInfo","useMinichefPools","wrappedCurrencyAmount","useTransactionAdder","LoadingView","SubmittedView","useTranslation","useChainId","HypotheticalRewardRate","div","dim","ContentWrapper","StakingModal","isOpen","onDismiss","stakingInfo","userLiquidityUnstaked","version","extraRewardTokensAmount","account","library","chainId","typedValue","setTypedValue","parsedAmount","error","stakedAmount","token","parsedAmountWrapped","hypotheticalWeeklyRewardRate","rewardRatePerWeek","greaterThan","getHypotheticalWeeklyRewardRate","add","totalStakedAmount","totalRewardRatePerSecond","addTransaction","attempting","setAttempting","hash","setHash","wrappedOnDismiss","undefined","dummyPair","tokens","pairContract","liquidityToken","address","deadline","t","signatureData","setSignatureData","approval","approveCallback","stakingRewardAddress","stakingContract","poolMap","isSuperFarm","length","onStake","method","args","raw","toString","APPROVED","then","response","summary","catch","code","console","permitMethod","permitArgs","v","r","s","Error","onUserInput","maxAmountInput","atMaxAmount","Boolean","equalTo","handleMax","toExact","onAttemptToApprove","liquidityAmount","nonce","nonces","EIP712Domain","name","type","domain","verifyingContract","Permit","message","owner","spender","value","toHexString","toNumber","data","JSON","stringify","types","primaryType","send","signature","toSignificant","groupSeparator","symbol","map","reward","index","tokenMultiplier","rewardTokensMultiplier","extraTokenWeeklyRewardRate","getExtraTokensWeeklyRewardRate","NOT_APPROVED"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Box } from '@pangolindex/components'\nimport Modal from '../Modal'\nimport { AutoColumn } from '../Column'\nimport styled from 'styled-components'\nimport { RowBetween } from '../Row'\nimport { TYPE, CloseIcon } from '../../theme'\nimport { ButtonConfirmed, ButtonError } from '../Button'\nimport ProgressCircles from '../ProgressSteps'\nimport CurrencyInputPanel from '../CurrencyInputPanel'\nimport { TokenAmount, Pair } from '@pangolindex/sdk'\nimport { useActiveWeb3React } from '../../hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { usePairContract, useStakingContract } from '../../hooks/useContract'\nimport { useApproveCallback, ApprovalState } from '../../hooks/useApproveCallback'\nimport { splitSignature } from 'ethers/lib/utils'\nimport { DoubleSideStakingInfo, useDerivedStakeInfo, useMinichefPools } from '../../state/stake/hooks'\nimport { wrappedCurrencyAmount } from '../../utils/wrappedCurrency'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { LoadingView, SubmittedView } from '../ModalViews'\nimport { useTranslation } from 'react-i18next'\nimport { useChainId } from 'src/hooks'\n\nconst HypotheticalRewardRate = styled.div<{ dim: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  padding-right: 20px;\n  padding-left: 20px;\n\n  opacity: ${({ dim }) => (dim ? 0.5 : 1)};\n`\n\nconst ContentWrapper = styled(AutoColumn)`\n  width: 100%;\n  padding: 1rem;\n`\n\ninterface StakingModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  stakingInfo: DoubleSideStakingInfo\n  userLiquidityUnstaked: TokenAmount | undefined\n  version: number\n  extraRewardTokensAmount?: Array<TokenAmount>\n}\n\nexport default function StakingModal({\n  isOpen,\n  onDismiss,\n  stakingInfo,\n  userLiquidityUnstaked,\n  version,\n  extraRewardTokensAmount\n}: StakingModalProps) {\n  const { account, library } = useActiveWeb3React()\n  const chainId = useChainId()\n  // track and parse user input\n  const [typedValue, setTypedValue] = useState('')\n  const { parsedAmount, error } = useDerivedStakeInfo(typedValue, stakingInfo.stakedAmount.token, userLiquidityUnstaked)\n  const parsedAmountWrapped = wrappedCurrencyAmount(parsedAmount, chainId)\n\n  let hypotheticalWeeklyRewardRate: TokenAmount = new TokenAmount(stakingInfo.rewardRatePerWeek.token, '0')\n  if (parsedAmountWrapped?.greaterThan('0')) {\n    hypotheticalWeeklyRewardRate = stakingInfo.getHypotheticalWeeklyRewardRate(\n      stakingInfo.stakedAmount.add(parsedAmountWrapped),\n      stakingInfo.totalStakedAmount.add(parsedAmountWrapped),\n      stakingInfo.totalRewardRatePerSecond\n    )\n  }\n\n  // state for pending and submitted txn views\n  const addTransaction = useTransactionAdder()\n  const [attempting, setAttempting] = useState<boolean>(false)\n  const [hash, setHash] = useState<string | undefined>()\n  const wrappedOnDismiss = useCallback(() => {\n    setHash(undefined)\n    setAttempting(false)\n    onDismiss()\n  }, [onDismiss])\n\n  // pair contract for this token to be staked\n  const dummyPair = new Pair(\n    new TokenAmount(stakingInfo.tokens[0], '0'),\n    new TokenAmount(stakingInfo.tokens[1], '0'),\n    chainId\n  )\n  const pairContract = usePairContract(dummyPair.liquidityToken.address)\n\n  // approval data for stake\n  const deadline = useTransactionDeadline()\n  const { t } = useTranslation()\n  const [signatureData, setSignatureData] = useState<{ v: number; r: string; s: string; deadline: number } | null>(null)\n  const [approval, approveCallback] = useApproveCallback(chainId, parsedAmount, stakingInfo.stakingRewardAddress)\n\n  const stakingContract = useStakingContract(stakingInfo.stakingRewardAddress)\n  const poolMap = useMinichefPools()\n  const isSuperFarm = (extraRewardTokensAmount || [])?.length > 0\n\n  async function onStake() {\n    if (stakingContract && poolMap && parsedAmount && deadline) {\n      setAttempting(true)\n      const method = version < 2 ? 'stake' : 'deposit'\n      const args =\n        version < 2\n          ? [`0x${parsedAmount.raw.toString(16)}`]\n          : [poolMap[stakingInfo.stakedAmount.token.address], `0x${parsedAmount.raw.toString(16)}`, account]\n\n      if (approval === ApprovalState.APPROVED) {\n        stakingContract[method](...args)\n          .then((response: TransactionResponse) => {\n            addTransaction(response, {\n              summary: t('earn.depositLiquidity')\n            })\n            setHash(response.hash)\n          })\n          .catch((error: any) => {\n            setAttempting(false)\n            // we only care if the error is something _other_ than the user rejected the tx\n            if (error?.code !== 4001) {\n              console.error(error)\n            }\n          })\n      } else if (signatureData) {\n        const permitMethod = version < 2 ? 'stakeWithPermit' : 'depositWithPermit'\n        const permitArgs =\n          version < 2\n            ? [\n                `0x${parsedAmount.raw.toString(16)}`,\n                signatureData.deadline,\n                signatureData.v,\n                signatureData.r,\n                signatureData.s\n              ]\n            : [\n                poolMap[stakingInfo.stakedAmount.token.address],\n                `0x${parsedAmount.raw.toString(16)}`,\n                account,\n                signatureData.deadline,\n                signatureData.v,\n                signatureData.r,\n                signatureData.s\n              ]\n\n        stakingContract[permitMethod](...permitArgs)\n          .then((response: TransactionResponse) => {\n            addTransaction(response, {\n              summary: t('earn.depositLiquidity')\n            })\n            setHash(response.hash)\n          })\n          .catch((error: any) => {\n            setAttempting(false)\n            // we only care if the error is something _other_ than the user rejected the tx\n            if (error?.code !== 4001) {\n              console.error(error)\n            }\n          })\n      } else {\n        setAttempting(false)\n        throw new Error(t('earn.attemptingToStakeError'))\n      }\n    }\n  }\n\n  // wrapped onUserInput to clear signatures\n  const onUserInput = useCallback((typedValue: string) => {\n    setSignatureData(null)\n    setTypedValue(typedValue)\n  }, [])\n\n  // used for max input button\n  const maxAmountInput = maxAmountSpend(chainId, userLiquidityUnstaked)\n  const atMaxAmount = Boolean(maxAmountInput && parsedAmount?.equalTo(maxAmountInput))\n  const handleMax = useCallback(() => {\n    maxAmountInput && onUserInput(maxAmountInput.toExact())\n  }, [maxAmountInput, onUserInput])\n\n  async function onAttemptToApprove() {\n    if (!pairContract || !library || !deadline) throw new Error(t('earn.missingDependencies'))\n\n    const liquidityAmount = parsedAmount\n    if (!liquidityAmount) throw new Error(t('earn.missingLiquidityAmount'))\n\n    // try to gather a signature for permission\n    const nonce = await pairContract.nonces(account)\n\n    const EIP712Domain = [\n      { name: 'name', type: 'string' },\n      { name: 'version', type: 'string' },\n      { name: 'chainId', type: 'uint256' },\n      { name: 'verifyingContract', type: 'address' }\n    ]\n    const domain = {\n      name: 'Pangolin Liquidity',\n      version: '1',\n      chainId: chainId,\n      verifyingContract: pairContract.address\n    }\n    const Permit = [\n      { name: 'owner', type: 'address' },\n      { name: 'spender', type: 'address' },\n      { name: 'value', type: 'uint256' },\n      { name: 'nonce', type: 'uint256' },\n      { name: 'deadline', type: 'uint256' }\n    ]\n    const message = {\n      owner: account,\n      spender: stakingInfo.stakingRewardAddress,\n      value: liquidityAmount.raw.toString(),\n      nonce: nonce.toHexString(),\n      deadline: deadline.toNumber()\n    }\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain,\n        Permit\n      },\n      domain,\n      primaryType: 'Permit',\n      message\n    })\n\n    library\n      .send('eth_signTypedData_v4', [account, data])\n      .then(splitSignature)\n      .then(signature => {\n        setSignatureData({\n          v: signature.v,\n          r: signature.r,\n          s: signature.s,\n          deadline: deadline.toNumber()\n        })\n      })\n      .catch(error => {\n        // for all errors other than 4001 (EIP-1193 user rejected request), fall back to manual approve\n        if (error?.code !== 4001) {\n          approveCallback()\n        }\n      })\n  }\n\n  return (\n    <Modal isOpen={isOpen} onDismiss={wrappedOnDismiss} maxHeight={90}>\n      {!attempting && !hash && (\n        <ContentWrapper gap=\"lg\">\n          <RowBetween>\n            <TYPE.mediumHeader>{t('earn.deposit')}</TYPE.mediumHeader>\n            <CloseIcon onClick={wrappedOnDismiss} />\n          </RowBetween>\n          <CurrencyInputPanel\n            value={typedValue}\n            onUserInput={onUserInput}\n            onMax={handleMax}\n            showMaxButton={!atMaxAmount}\n            currency={stakingInfo.stakedAmount.token}\n            pair={dummyPair}\n            label={''}\n            disableCurrencySelect={true}\n            customBalanceText={t('earn.availableToDeposit')}\n            id=\"stake-liquidity-token\"\n          />\n\n          <HypotheticalRewardRate dim={!hypotheticalWeeklyRewardRate.greaterThan('0')}>\n            <div>\n              <TYPE.black fontWeight={600}>{t('earn.weeklyRewards')}</TYPE.black>\n            </div>\n\n            <TYPE.black>\n              {hypotheticalWeeklyRewardRate.toSignificant(4, { groupSeparator: ',' })}{' '}\n              {t('earn.rewardPerWeek', { symbol: 'PNG' })}\n            </TYPE.black>\n          </HypotheticalRewardRate>\n\n          {isSuperFarm && (\n            <HypotheticalRewardRate dim={!hypotheticalWeeklyRewardRate.greaterThan('0')}>\n              <div>\n                <TYPE.black fontWeight={600}>{t('earn.extraReward')}</TYPE.black>\n              </div>\n\n              <Box textAlign=\"right\">\n                {extraRewardTokensAmount?.map((reward, index) => {\n                  const tokenMultiplier = stakingInfo?.rewardTokensMultiplier?.[index]\n                  const extraTokenWeeklyRewardRate = stakingInfo?.getExtraTokensWeeklyRewardRate?.(\n                    hypotheticalWeeklyRewardRate,\n                    reward?.token,\n                    tokenMultiplier\n                  )\n                  if (extraTokenWeeklyRewardRate) {\n                    return (\n                      <TYPE.black key={index}>\n                        {extraTokenWeeklyRewardRate.toSignificant(4, { groupSeparator: ',' })}{' '}\n                        {t('earn.rewardPerWeek', { symbol: reward?.token?.symbol })}\n                      </TYPE.black>\n                    )\n                  }\n                  return null\n                })}\n              </Box>\n            </HypotheticalRewardRate>\n          )}\n\n          <RowBetween>\n            <ButtonConfirmed\n              mr=\"0.5rem\"\n              onClick={onAttemptToApprove}\n              confirmed={approval === ApprovalState.APPROVED || signatureData !== null}\n              disabled={approval !== ApprovalState.NOT_APPROVED || signatureData !== null}\n            >\n              {t('earn.approve')}\n            </ButtonConfirmed>\n            <ButtonError\n              disabled={!!error || (signatureData === null && approval !== ApprovalState.APPROVED)}\n              error={!!error && !!parsedAmount}\n              onClick={onStake}\n            >\n              {error ?? t('earn.deposit')}\n            </ButtonError>\n          </RowBetween>\n          <ProgressCircles steps={[approval === ApprovalState.APPROVED || signatureData !== null]} disabled={true} />\n        </ContentWrapper>\n      )}\n      {attempting && !hash && (\n        <LoadingView onDismiss={wrappedOnDismiss}>\n          <AutoColumn gap=\"12px\" justify={'center'}>\n            <TYPE.largeHeader>{t('earn.depositingLiquidity')}</TYPE.largeHeader>\n            <TYPE.body fontSize={20}>{parsedAmount?.toSignificant(4)} PGL</TYPE.body>\n          </AutoColumn>\n        </LoadingView>\n      )}\n      {attempting && hash && (\n        <SubmittedView onDismiss={wrappedOnDismiss} hash={hash}>\n          <AutoColumn gap=\"12px\" justify={'center'}>\n            <TYPE.largeHeader>{t('earn.transactionSubmitted')}</TYPE.largeHeader>\n            <TYPE.body fontSize={20}>\n              {t('earn.deposited')} {parsedAmount?.toSignificant(4)} PGL\n            </TYPE.body>\n          </AutoColumn>\n        </SubmittedView>\n      )}\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}