{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/Header/PngBalanceContent.tsx\";\nimport { TokenAmount, JSBI, ChainId } from '@pangolindex/sdk';\nimport React, { useMemo, useState } from 'react';\nimport { X } from 'react-feather';\nimport styled from 'styled-components';\nimport tokenLogo from '../../assets/images/token-logo.png';\nimport { injected } from '../../connectors';\nimport { CHAINS } from '../../constants/chains';\nimport { getTokenLogoURL, PANGOLIN_API_BASE_URL } from '../../constants';\nimport { PNG } from '../../constants/tokens';\nimport { useTotalSupply } from '../../data/TotalSupply';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useTotalPngEarned } from '../../state/stake/hooks';\nimport { DOUBLE_SIDE_STAKING_REWARDS_CURRENT_VERSION } from '../../state/stake/doubleSideConfig';\nimport { useAggregatePngBalance, useTokenBalance } from '../../state/wallet/hooks';\nimport { StyledInternalLink, TYPE, PngTokenAnimated } from '../../theme';\nimport { AutoColumn } from '../Column';\nimport { RowBetween } from '../Row';\nimport { Break, CardBGImage, CardNoise, CardSection, DataCard } from '../earn/styled';\nimport { useTranslation } from 'react-i18next';\nimport useUSDCPrice from '../../utils/useUSDCPrice';\nimport { useChainId } from 'src/hooks';\nconst ContentWrapper = styled(AutoColumn)`\n  width: 100%;\n`;\nconst ModalUpper = styled(DataCard)`\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #f97316 0%, #e84142 100%);\n  padding: 0.5rem;\n`;\nconst StyledClose = styled(X)`\n  position: absolute;\n  right: 16px;\n  top: 16px;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\nconst AddPNG = styled.span`\n  width: 100%;\n  height: 100%;\n  font-weight: 500;\n  font-size: 32;\n  padding: 4px 6px;\n  align-items: center;\n  text-align: center;\n  background-color: ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.bg3;\n}};\n  background: radial-gradient(174.47% 188.91% at 1.84% 0%, #f97316 0%, #e84142 100%), #edeef2;\n  border-radius: 12px;\n  white-space: nowrap;\n  cursor: pointer;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n/**\n * Content for balance stats modal\n */\n\nexport default function PngBalanceContent(_ref2) {\n  var _pngPrice$toFixed, _pngPrice, _circulation$toFixed, _totalSupply$toFixed;\n\n  let {\n    setShowPngBalanceModal\n  } = _ref2;\n  const {\n    account\n  } = useActiveWeb3React();\n  const chainId = useChainId();\n  const png = chainId ? PNG[chainId] : undefined;\n  const total = useAggregatePngBalance();\n  const pngBalance = useTokenBalance(account !== null && account !== void 0 ? account : undefined, png);\n  const pngToClaim = useTotalPngEarned();\n  const totalSupply = useTotalSupply(png); // Determine PNG price in AVAX\n\n  const oneToken = JSBI.BigInt(1000000000000000000);\n  const {\n    t\n  } = useTranslation();\n  const usdcPriceTmp = useUSDCPrice(png);\n  const usdcPrice = CHAINS[chainId].is_mainnet ? usdcPriceTmp : undefined;\n  let pngPrice;\n\n  if (usdcPrice && png) {\n    pngPrice = usdcPrice.quote(new TokenAmount(png, oneToken), chainId);\n  }\n\n  const [circulation, setCirculation] = useState(totalSupply);\n  useMemo(() => {\n    if (png === undefined) return;\n    fetch(`${PANGOLIN_API_BASE_URL}/png/circulating-supply`).then(res => res.text()).then(val => setCirculation(new TokenAmount(png, val)));\n  }, [png]);\n  return /*#__PURE__*/React.createElement(ContentWrapper, {\n    gap: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalUpper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardBGImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardNoise, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardSection, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, t('header.pngBreakDown')), /*#__PURE__*/React.createElement(StyledClose, {\n    stroke: \"white\",\n    onClick: () => setShowPngBalanceModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Break, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), account && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CardSection, {\n    gap: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(PngTokenAnimated, {\n    width: \"48px\",\n    src: tokenLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }), ' ', /*#__PURE__*/React.createElement(TYPE.white, {\n    fontSize: 48,\n    fontWeight: 600,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, total === null || total === void 0 ? void 0 : total.toFixed(2, {\n    groupSeparator: ','\n  }))), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }\n  }, t('header.balance')), /*#__PURE__*/React.createElement(TYPE.white, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }\n  }, pngBalance === null || pngBalance === void 0 ? void 0 : pngBalance.toFixed(2, {\n    groupSeparator: ','\n  }))), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, t('header.unclaimed')), /*#__PURE__*/React.createElement(TYPE.white, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  }, pngToClaim === null || pngToClaim === void 0 ? void 0 : pngToClaim.toFixed(4, {\n    groupSeparator: ','\n  }), ' ', pngToClaim && pngToClaim.greaterThan('0') && /*#__PURE__*/React.createElement(StyledInternalLink, {\n    onClick: () => setShowPngBalanceModal(false),\n    to: `/png/${DOUBLE_SIDE_STAKING_REWARDS_CURRENT_VERSION}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 23\n    }\n  }, \"(\", t('earn.claim'), \")\"))))), /*#__PURE__*/React.createElement(Break, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(CardSection, {\n    gap: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, t('header.pngPrice')), /*#__PURE__*/React.createElement(TYPE.white, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, \"$\", (_pngPrice$toFixed = (_pngPrice = pngPrice) === null || _pngPrice === void 0 ? void 0 : _pngPrice.toFixed(2, {\n    groupSeparator: ','\n  })) !== null && _pngPrice$toFixed !== void 0 ? _pngPrice$toFixed : '-')), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, t('header.pngCirculation')), /*#__PURE__*/React.createElement(TYPE.white, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, (_circulation$toFixed = circulation === null || circulation === void 0 ? void 0 : circulation.toFixed(0, {\n    groupSeparator: ','\n  })) !== null && _circulation$toFixed !== void 0 ? _circulation$toFixed : '-')), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, t('header.totalSupply')), /*#__PURE__*/React.createElement(TYPE.white, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, (_totalSupply$toFixed = totalSupply === null || totalSupply === void 0 ? void 0 : totalSupply.toFixed(0, {\n    groupSeparator: ','\n  })) !== null && _totalSupply$toFixed !== void 0 ? _totalSupply$toFixed : '-')))), account && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CardSection, {\n    gap: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AddPNG, {\n    onClick: () => {\n      injected.getProvider().then(provider => {\n        if (provider) {\n          provider.request({\n            method: 'wallet_watchAsset',\n            params: {\n              type: 'ERC20',\n              options: {\n                address: png === null || png === void 0 ? void 0 : png.address,\n                symbol: png === null || png === void 0 ? void 0 : png.symbol,\n                decimals: png === null || png === void 0 ? void 0 : png.decimals,\n                image: getTokenLogoURL(PNG[ChainId.AVALANCHE].address, 48)\n              }\n            }\n          }).catch(error => {\n            console.error(error);\n          });\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 19\n    }\n  }, t('header.addMetamask'))))))));\n}","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/Header/PngBalanceContent.tsx"],"names":["TokenAmount","JSBI","ChainId","React","useMemo","useState","X","styled","tokenLogo","injected","CHAINS","getTokenLogoURL","PANGOLIN_API_BASE_URL","PNG","useTotalSupply","useActiveWeb3React","useTotalPngEarned","DOUBLE_SIDE_STAKING_REWARDS_CURRENT_VERSION","useAggregatePngBalance","useTokenBalance","StyledInternalLink","TYPE","PngTokenAnimated","AutoColumn","RowBetween","Break","CardBGImage","CardNoise","CardSection","DataCard","useTranslation","useUSDCPrice","useChainId","ContentWrapper","ModalUpper","StyledClose","AddPNG","span","theme","bg3","PngBalanceContent","setShowPngBalanceModal","account","chainId","png","undefined","total","pngBalance","pngToClaim","totalSupply","oneToken","BigInt","t","usdcPriceTmp","usdcPrice","is_mainnet","pngPrice","quote","circulation","setCirculation","fetch","then","res","text","val","toFixed","groupSeparator","greaterThan","getProvider","provider","request","method","params","type","options","address","symbol","decimals","image","AVALANCHE","catch","error","console"],"mappings":"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","sourcesContent":["import { TokenAmount, JSBI, ChainId } from '@pangolindex/sdk'\nimport React, { useMemo, useState } from 'react'\nimport { X } from 'react-feather'\nimport styled from 'styled-components'\nimport tokenLogo from '../../assets/images/token-logo.png'\nimport { injected } from '../../connectors'\nimport { CHAINS } from '../../constants/chains'\nimport { getTokenLogoURL, PANGOLIN_API_BASE_URL } from '../../constants'\nimport { PNG } from '../../constants/tokens'\nimport { useTotalSupply } from '../../data/TotalSupply'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useTotalPngEarned } from '../../state/stake/hooks'\nimport { DOUBLE_SIDE_STAKING_REWARDS_CURRENT_VERSION } from '../../state/stake/doubleSideConfig'\nimport { useAggregatePngBalance, useTokenBalance } from '../../state/wallet/hooks'\nimport { StyledInternalLink, TYPE, PngTokenAnimated } from '../../theme'\nimport { AutoColumn } from '../Column'\nimport { RowBetween } from '../Row'\nimport { Break, CardBGImage, CardNoise, CardSection, DataCard } from '../earn/styled'\nimport { useTranslation } from 'react-i18next'\nimport useUSDCPrice from '../../utils/useUSDCPrice'\nimport { useChainId } from 'src/hooks'\n\nconst ContentWrapper = styled(AutoColumn)`\n  width: 100%;\n`\n\nconst ModalUpper = styled(DataCard)`\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #f97316 0%, #e84142 100%);\n  padding: 0.5rem;\n`\n\nconst StyledClose = styled(X)`\n  position: absolute;\n  right: 16px;\n  top: 16px;\n\n  :hover {\n    cursor: pointer;\n  }\n`\nconst AddPNG = styled.span`\n  width: 100%;\n  height: 100%;\n  font-weight: 500;\n  font-size: 32;\n  padding: 4px 6px;\n  align-items: center;\n  text-align: center;\n  background-color: ${({ theme }) => theme.bg3};\n  background: radial-gradient(174.47% 188.91% at 1.84% 0%, #f97316 0%, #e84142 100%), #edeef2;\n  border-radius: 12px;\n  white-space: nowrap;\n  cursor: pointer;\n\n  :hover {\n    opacity: 0.8;\n  }\n`\n\n/**\n * Content for balance stats modal\n */\nexport default function PngBalanceContent({ setShowPngBalanceModal }: { setShowPngBalanceModal: any }) {\n  const { account } = useActiveWeb3React()\n  const chainId = useChainId()\n  const png = chainId ? PNG[chainId] : undefined\n\n  const total = useAggregatePngBalance()\n  const pngBalance: TokenAmount | undefined = useTokenBalance(account ?? undefined, png)\n  const pngToClaim: TokenAmount | undefined = useTotalPngEarned()\n\n  const totalSupply: TokenAmount | undefined = useTotalSupply(png)\n\n  // Determine PNG price in AVAX\n  const oneToken = JSBI.BigInt(1000000000000000000)\n  const { t } = useTranslation()\n\n  const usdcPriceTmp = useUSDCPrice(png)\n  const usdcPrice = CHAINS[chainId].is_mainnet ? usdcPriceTmp : undefined\n\n  let pngPrice\n\n  if (usdcPrice && png) {\n    pngPrice = usdcPrice.quote(new TokenAmount(png, oneToken), chainId)\n  }\n\n  const [circulation, setCirculation] = useState(totalSupply)\n\n  useMemo(() => {\n    if (png === undefined) return\n    fetch(`${PANGOLIN_API_BASE_URL}/png/circulating-supply`)\n      .then(res => res.text())\n      .then(val => setCirculation(new TokenAmount(png, val)))\n  }, [png])\n\n  return (\n    <ContentWrapper gap=\"lg\">\n      <ModalUpper>\n        <CardBGImage />\n        <CardNoise />\n        <CardSection gap=\"md\">\n          <RowBetween>\n            <TYPE.white color=\"white\">{t('header.pngBreakDown')}</TYPE.white>\n            <StyledClose stroke=\"white\" onClick={() => setShowPngBalanceModal(false)} />\n          </RowBetween>\n        </CardSection>\n        <Break />\n        {account && (\n          <>\n            <CardSection gap=\"sm\">\n              <AutoColumn gap=\"md\" justify=\"center\">\n                <PngTokenAnimated width=\"48px\" src={tokenLogo} />{' '}\n                <TYPE.white fontSize={48} fontWeight={600} color=\"white\">\n                  {total?.toFixed(2, { groupSeparator: ',' })}\n                </TYPE.white>\n              </AutoColumn>\n              <AutoColumn gap=\"md\">\n                <RowBetween>\n                  <TYPE.white color=\"white\">{t('header.balance')}</TYPE.white>\n                  <TYPE.white color=\"white\">{pngBalance?.toFixed(2, { groupSeparator: ',' })}</TYPE.white>\n                </RowBetween>\n                <RowBetween>\n                  <TYPE.white color=\"white\">{t('header.unclaimed')}</TYPE.white>\n                  <TYPE.white color=\"white\">\n                    {pngToClaim?.toFixed(4, { groupSeparator: ',' })}{' '}\n                    {pngToClaim && pngToClaim.greaterThan('0') && (\n                      <StyledInternalLink\n                        onClick={() => setShowPngBalanceModal(false)}\n                        to={`/png/${DOUBLE_SIDE_STAKING_REWARDS_CURRENT_VERSION}`}\n                      >\n                        ({t('earn.claim')})\n                      </StyledInternalLink>\n                    )}\n                  </TYPE.white>\n                </RowBetween>\n              </AutoColumn>\n            </CardSection>\n            <Break />\n          </>\n        )}\n        <CardSection gap=\"sm\">\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <TYPE.white color=\"white\">{t('header.pngPrice')}</TYPE.white>\n              <TYPE.white color=\"white\">${pngPrice?.toFixed(2, { groupSeparator: ',' }) ?? '-'}</TYPE.white>\n            </RowBetween>\n            <RowBetween>\n              <TYPE.white color=\"white\">{t('header.pngCirculation')}</TYPE.white>\n              <TYPE.white color=\"white\">{circulation?.toFixed(0, { groupSeparator: ',' }) ?? '-'}</TYPE.white>\n            </RowBetween>\n            <RowBetween>\n              <TYPE.white color=\"white\">{t('header.totalSupply')}</TYPE.white>\n              <TYPE.white color=\"white\">{totalSupply?.toFixed(0, { groupSeparator: ',' }) ?? '-'}</TYPE.white>\n            </RowBetween>\n          </AutoColumn>\n        </CardSection>\n        {account && (\n          <>\n            <CardSection gap=\"sm\">\n              <AutoColumn gap=\"md\">\n                <AddPNG\n                  onClick={() => {\n                    injected.getProvider().then(provider => {\n                      if (provider) {\n                        provider\n                          .request({\n                            method: 'wallet_watchAsset',\n                            params: {\n                              type: 'ERC20',\n                              options: {\n                                address: png?.address,\n                                symbol: png?.symbol,\n                                decimals: png?.decimals,\n                                image: getTokenLogoURL(PNG[ChainId.AVALANCHE].address, 48)\n                              }\n                            }\n                          })\n                          .catch((error: any) => {\n                            console.error(error)\n                          })\n                      }\n                    })\n                  }}\n                >\n                  <TYPE.white color=\"white\">{t('header.addMetamask')}</TYPE.white>\n                </AddPNG>\n              </AutoColumn>\n            </CardSection>\n          </>\n        )}\n      </ModalUpper>\n    </ContentWrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}