{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Pool/AllPoolList/PoolList/index.tsx\";\nimport React, { useCallback, useEffect, useState, useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { TextInput, Box } from '@pangolindex/components';\nimport { DOUBLE_SIDE_STAKING_REWARDS_INFO } from 'src/state/stake/doubleSideConfig';\nimport PoolCard from '../PoolCard';\nimport Loader from 'src/components/Loader';\nimport { useChainId } from 'src/hooks';\nimport { useTranslation } from 'react-i18next';\nimport { Search } from 'react-feather';\nimport useDebounce from 'src/hooks/useDebounce';\nimport { BIG_INT_ZERO, PANGOLIN_API_BASE_URL } from 'src/constants';\nimport Scrollbars from 'react-custom-scrollbars';\nimport { PoolsWrapper, PanelWrapper, LoadingWrapper, MobileGridContainer } from './styleds';\nimport { usePoolDetailnModalToggle } from 'src/state/application/hooks';\nimport DetailModal from '../../DetailModal';\nimport DropdownMenu from 'src/components/Beta/DropdownMenu';\nimport { Hidden } from 'src/theme';\nexport let SortingType;\n\n(function (SortingType) {\n  SortingType[\"totalStakedInUsd\"] = \"totalStakedInUsd\";\n  SortingType[\"totalApr\"] = \"totalApr\";\n})(SortingType || (SortingType = {}));\n\nexport const SortOptions = [{\n  label: 'Liquidity',\n  value: SortingType.totalStakedInUsd\n}, {\n  label: 'APR',\n  value: SortingType.totalApr\n}];\n\nconst PoolList = _ref => {\n  var _DOUBLE_SIDE_STAKING_, _DOUBLE_SIDE_STAKING_2;\n\n  let {\n    version,\n    stakingInfos,\n    poolMap,\n    setMenu,\n    activeMenu,\n    menuItems\n  } = _ref;\n  const chainId = useChainId();\n  const {\n    t\n  } = useTranslation();\n  const theme = useContext(ThemeContext);\n  const [poolCardsLoading, setPoolCardsLoading] = useState(false);\n  const [poolCards, setPoolCards] = useState();\n  const [filteredPoolCards, setFilteredPoolCards] = useState();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [sortBy, setSortBy] = useState('');\n  const debouncedSearchQuery = useDebounce(searchQuery, 250);\n  const [stakingInfoData, setStakingInfoData] = useState(stakingInfos);\n  const [selectedPoolIndex, setSelectedPoolIndex] = useState(-1);\n  const togglePoolDetailModal = usePoolDetailnModalToggle();\n  const handleSearch = useCallback(value => {\n    setSearchQuery(value.trim().toUpperCase());\n  }, []);\n  useEffect(() => {\n    const filtered = poolCards === null || poolCards === void 0 ? void 0 : poolCards.filter(card => {\n      var _card$props, _card$props$stakingIn, _card$props2, _card$props2$stakingI;\n\n      return (card === null || card === void 0 ? void 0 : (_card$props = card.props) === null || _card$props === void 0 ? void 0 : (_card$props$stakingIn = _card$props.stakingInfo) === null || _card$props$stakingIn === void 0 ? void 0 : _card$props$stakingIn.tokens[0].symbol.toUpperCase().includes(debouncedSearchQuery)) || (card === null || card === void 0 ? void 0 : (_card$props2 = card.props) === null || _card$props2 === void 0 ? void 0 : (_card$props2$stakingI = _card$props2.stakingInfo) === null || _card$props2$stakingI === void 0 ? void 0 : _card$props2$stakingI.tokens[1].symbol.toUpperCase().includes(debouncedSearchQuery));\n    });\n    setFilteredPoolCards(filtered); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [poolCards, debouncedSearchQuery]);\n  useEffect(() => {\n    Promise.all(stakingInfoData.sort(function (info_a, info_b) {\n      if (sortBy === SortingType.totalStakedInUsd) {\n        var _info_a$totalStakedIn, _info_b$totalStakedIn;\n\n        return ((_info_a$totalStakedIn = info_a.totalStakedInUsd) === null || _info_a$totalStakedIn === void 0 ? void 0 : _info_a$totalStakedIn.greaterThan((_info_b$totalStakedIn = info_b.totalStakedInUsd) !== null && _info_b$totalStakedIn !== void 0 ? _info_b$totalStakedIn : BIG_INT_ZERO)) ? -1 : 1;\n      }\n\n      if (sortBy === SortingType.totalApr) {\n        return info_a.stakingApr + info_a.swapFeeApr > info_b.stakingApr + info_b.swapFeeApr ? -1 : 1;\n      }\n\n      return 0;\n    })).then(stakingInfoData => {\n      const poolCards = stakingInfoData.map((stakingInfo, index) => {\n        // console.log('stakinginfo', stakingInfo)\n        return /*#__PURE__*/React.createElement(PoolCard, {\n          key: index,\n          stakingInfo: stakingInfo,\n          onClickViewDetail: () => {\n            // let container = {} as { [address: string]: { staking: StakingInfo } }\n            // container[stakingInfo.stakingRewardAddress] = stakingInfo\n            setSelectedPoolIndex(index);\n            togglePoolDetailModal();\n          },\n          version: Number(version),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }\n        });\n      });\n      setPoolCards(poolCards);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sortBy, stakingInfoData]);\n  useEffect(() => {\n    setPoolCardsLoading(true);\n\n    if ((stakingInfos === null || stakingInfos === void 0 ? void 0 : stakingInfos.length) > 0) {\n      Promise.all(stakingInfos.filter(function (info) {\n        // Only include pools that are live or require a migration\n        return !info.isPeriodFinished || info.stakedAmount.greaterThan(BIG_INT_ZERO);\n      }).sort(function (info_a, info_b) {\n        var _info_a$totalStakedIn2, _info_b$totalStakedIn2;\n\n        // only first has ended\n        if (info_a.isPeriodFinished && !info_b.isPeriodFinished) return 1; // only second has ended\n\n        if (!info_a.isPeriodFinished && info_b.isPeriodFinished) return -1; // greater stake in avax comes first\n\n        return ((_info_a$totalStakedIn2 = info_a.totalStakedInUsd) === null || _info_a$totalStakedIn2 === void 0 ? void 0 : _info_a$totalStakedIn2.greaterThan((_info_b$totalStakedIn2 = info_b.totalStakedInUsd) !== null && _info_b$totalStakedIn2 !== void 0 ? _info_b$totalStakedIn2 : BIG_INT_ZERO)) ? -1 : 1;\n      }).sort(function (info_a, info_b) {\n        // only the first is being staked, so we should bring the first up\n        if (info_a.stakedAmount.greaterThan(BIG_INT_ZERO) && !info_b.stakedAmount.greaterThan(BIG_INT_ZERO)) return -1; // only the second is being staked, so we should bring the first down\n\n        if (!info_a.stakedAmount.greaterThan(BIG_INT_ZERO) && info_b.stakedAmount.greaterThan(BIG_INT_ZERO)) return 1;\n        return 0;\n      }) // TODO: update here api call without staking reward address\n      .map(stakingInfo => {\n        if (poolMap) {\n          return fetch(`${PANGOLIN_API_BASE_URL}/pangolin/apr2/${poolMap[stakingInfo.totalStakedAmount.token.address]}`).then(res => res.json()).then(res => ({\n            swapFeeApr: Number(res.swapFeeApr),\n            stakingApr: Number(res.stakingApr),\n            combinedApr: Number(res.combinedApr),\n            ...stakingInfo\n          }));\n        } else {\n          return fetch(`${PANGOLIN_API_BASE_URL}/pangolin/apr/${stakingInfo.stakingRewardAddress}`).then(res => res.json()).then(res => ({\n            swapFeeApr: Number(res.swapFeeApr),\n            stakingApr: Number(res.stakingApr),\n            combinedApr: Number(res.combinedApr),\n            ...stakingInfo\n          }));\n        }\n      })).then(updatedStakingInfos => {\n        const poolCards = updatedStakingInfos.map((stakingInfo, index) => {\n          return /*#__PURE__*/React.createElement(PoolCard, {\n            key: index,\n            stakingInfo: stakingInfo,\n            onClickViewDetail: () => {\n              // let container = {} as { [address: string]: { staking: StakingInfo } }\n              // container[stakingInfo.stakingRewardAddress] = { staking: stakingInfo }\n              setSelectedPoolIndex(index);\n              togglePoolDetailModal();\n            },\n            version: Number(version),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 13\n            }\n          });\n        });\n        setStakingInfoData(updatedStakingInfos);\n        setPoolCards(poolCards);\n        setPoolCardsLoading(false);\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [stakingInfos === null || stakingInfos === void 0 ? void 0 : stakingInfos.length, version]);\n  const stakingRewardsExist = Boolean(typeof chainId === 'number' && ((_DOUBLE_SIDE_STAKING_ = (_DOUBLE_SIDE_STAKING_2 = DOUBLE_SIDE_STAKING_REWARDS_INFO[chainId]) === null || _DOUBLE_SIDE_STAKING_2 === void 0 ? void 0 : _DOUBLE_SIDE_STAKING_2.length) !== null && _DOUBLE_SIDE_STAKING_ !== void 0 ? _DOUBLE_SIDE_STAKING_ : 0) > 0);\n  const selectedPool = selectedPoolIndex !== -1 ? stakingInfoData[selectedPoolIndex] : undefined;\n  return /*#__PURE__*/React.createElement(PoolsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }\n  }, stakingRewardsExist && (stakingInfos === null || stakingInfos === void 0 ? void 0 : stakingInfos.length) === 0 || poolCardsLoading ? /*#__PURE__*/React.createElement(LoadingWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    style: {\n      margin: 'auto'\n    },\n    size: \"35px\",\n    stroke: theme.primary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  })) : (!stakingRewardsExist || (poolCards === null || poolCards === void 0 ? void 0 : poolCards.length) === 0) && !poolCardsLoading ? t('earnPage.noActiveRewards') : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    mb: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    placeholder: t('searchModal.tokenName'),\n    onChange: handleSearch,\n    value: searchQuery,\n    id: \"token-search-input\",\n    addonAfter: /*#__PURE__*/React.createElement(Search, {\n      style: {\n        marginTop: '5px'\n      },\n      color: theme.text2,\n      size: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 29\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Hidden, {\n    upToSmall: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    ml: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DropdownMenu, {\n    title: \"Sort by:\",\n    options: SortOptions,\n    value: sortBy,\n    onSelect: value => {\n      setSortBy(value);\n    },\n    height: \"54px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(MobileGridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DropdownMenu, {\n    options: menuItems,\n    value: activeMenu,\n    onSelect: value => {\n      setMenu(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(DropdownMenu, {\n    title: \"Sort by:\",\n    options: SortOptions,\n    value: sortBy,\n    onSelect: value => {\n      setSortBy(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Scrollbars, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PanelWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, filteredPoolCards))), /*#__PURE__*/React.createElement(DetailModal, {\n    stakingInfo: selectedPool,\n    version: Number(version),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default PoolList;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Pool/AllPoolList/PoolList/index.tsx"],"names":["React","useCallback","useEffect","useState","useContext","ThemeContext","TextInput","Box","DOUBLE_SIDE_STAKING_REWARDS_INFO","PoolCard","Loader","useChainId","useTranslation","Search","useDebounce","BIG_INT_ZERO","PANGOLIN_API_BASE_URL","Scrollbars","PoolsWrapper","PanelWrapper","LoadingWrapper","MobileGridContainer","usePoolDetailnModalToggle","DetailModal","DropdownMenu","Hidden","SortingType","SortOptions","label","value","totalStakedInUsd","totalApr","PoolList","version","stakingInfos","poolMap","setMenu","activeMenu","menuItems","chainId","t","theme","poolCardsLoading","setPoolCardsLoading","poolCards","setPoolCards","filteredPoolCards","setFilteredPoolCards","searchQuery","setSearchQuery","sortBy","setSortBy","debouncedSearchQuery","stakingInfoData","setStakingInfoData","selectedPoolIndex","setSelectedPoolIndex","togglePoolDetailModal","handleSearch","trim","toUpperCase","filtered","filter","card","props","stakingInfo","tokens","symbol","includes","Promise","all","sort","info_a","info_b","greaterThan","stakingApr","swapFeeApr","then","map","index","Number","length","info","isPeriodFinished","stakedAmount","fetch","totalStakedAmount","token","address","res","json","combinedApr","stakingRewardAddress","updatedStakingInfos","stakingRewardsExist","Boolean","selectedPool","undefined","margin","primary","marginTop","text2"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState, useContext } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { TextInput, Box } from '@pangolindex/components'\nimport { DoubleSideStakingInfo } from 'src/state/stake/hooks'\nimport { DOUBLE_SIDE_STAKING_REWARDS_INFO } from 'src/state/stake/doubleSideConfig'\nimport PoolCard from '../PoolCard'\nimport Loader from 'src/components/Loader'\nimport { useChainId } from 'src/hooks'\nimport { useTranslation } from 'react-i18next'\nimport { Search } from 'react-feather'\nimport useDebounce from 'src/hooks/useDebounce'\nimport { BIG_INT_ZERO, PANGOLIN_API_BASE_URL } from 'src/constants'\nimport Scrollbars from 'react-custom-scrollbars'\nimport { PoolsWrapper, PanelWrapper, LoadingWrapper, MobileGridContainer } from './styleds'\nimport { usePoolDetailnModalToggle } from 'src/state/application/hooks'\nimport DetailModal from '../../DetailModal'\nimport DropdownMenu from 'src/components/Beta/DropdownMenu'\nimport { Hidden } from 'src/theme'\n\nexport enum SortingType {\n  totalStakedInUsd = 'totalStakedInUsd',\n  totalApr = 'totalApr'\n}\n\nexport const SortOptions = [\n  {\n    label: 'Liquidity',\n    value: SortingType.totalStakedInUsd\n  },\n  {\n    label: 'APR',\n    value: SortingType.totalApr\n  }\n]\n\nexport interface EarnProps {\n  version: string\n  stakingInfos: DoubleSideStakingInfo[]\n  poolMap?: { [key: string]: number }\n  setMenu: (value: string) => void\n  activeMenu: string\n  menuItems: Array<{ label: string; value: string }>\n}\n\nconst PoolList: React.FC<EarnProps> = ({ version, stakingInfos, poolMap, setMenu, activeMenu, menuItems }) => {\n  const chainId = useChainId()\n  const { t } = useTranslation()\n  const theme = useContext(ThemeContext)\n  const [poolCardsLoading, setPoolCardsLoading] = useState(false)\n  const [poolCards, setPoolCards] = useState<any[]>()\n  const [filteredPoolCards, setFilteredPoolCards] = useState<any[]>()\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const [sortBy, setSortBy] = useState<string>('')\n  const debouncedSearchQuery = useDebounce(searchQuery, 250)\n  const [stakingInfoData, setStakingInfoData] = useState<any[]>(stakingInfos)\n\n  const [selectedPoolIndex, setSelectedPoolIndex] = useState(-1)\n\n  const togglePoolDetailModal = usePoolDetailnModalToggle()\n\n  const handleSearch = useCallback(value => {\n    setSearchQuery(value.trim().toUpperCase())\n  }, [])\n\n  useEffect(() => {\n    const filtered = poolCards?.filter(\n      card =>\n        card?.props?.stakingInfo?.tokens[0].symbol.toUpperCase().includes(debouncedSearchQuery) ||\n        card?.props?.stakingInfo?.tokens[1].symbol.toUpperCase().includes(debouncedSearchQuery)\n    )\n\n    setFilteredPoolCards(filtered)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [poolCards, debouncedSearchQuery])\n\n  useEffect(() => {\n    Promise.all(\n      stakingInfoData.sort(function(info_a, info_b) {\n        if (sortBy === SortingType.totalStakedInUsd) {\n          return info_a.totalStakedInUsd?.greaterThan(info_b.totalStakedInUsd ?? BIG_INT_ZERO) ? -1 : 1\n        }\n\n        if (sortBy === SortingType.totalApr) {\n          return info_a.stakingApr + info_a.swapFeeApr > info_b.stakingApr + info_b.swapFeeApr ? -1 : 1\n        }\n        return 0\n      })\n    ).then(stakingInfoData => {\n      const poolCards = stakingInfoData.map((stakingInfo, index) => {\n        // console.log('stakinginfo', stakingInfo)\n        return (\n          <PoolCard\n            key={index}\n            stakingInfo={stakingInfo}\n            onClickViewDetail={() => {\n              // let container = {} as { [address: string]: { staking: StakingInfo } }\n              // container[stakingInfo.stakingRewardAddress] = stakingInfo\n              setSelectedPoolIndex(index)\n              togglePoolDetailModal()\n            }}\n            version={Number(version)}\n          />\n        )\n      })\n      setPoolCards(poolCards)\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sortBy, stakingInfoData])\n\n  useEffect(() => {\n    setPoolCardsLoading(true)\n\n    if (stakingInfos?.length > 0) {\n      Promise.all(\n        stakingInfos\n          .filter(function(info) {\n            // Only include pools that are live or require a migration\n            return !info.isPeriodFinished || info.stakedAmount.greaterThan(BIG_INT_ZERO)\n          })\n          .sort(function(info_a, info_b) {\n            // only first has ended\n            if (info_a.isPeriodFinished && !info_b.isPeriodFinished) return 1\n            // only second has ended\n            if (!info_a.isPeriodFinished && info_b.isPeriodFinished) return -1\n            // greater stake in avax comes first\n            return info_a.totalStakedInUsd?.greaterThan(info_b.totalStakedInUsd ?? BIG_INT_ZERO) ? -1 : 1\n          })\n          .sort(function(info_a, info_b) {\n            // only the first is being staked, so we should bring the first up\n            if (info_a.stakedAmount.greaterThan(BIG_INT_ZERO) && !info_b.stakedAmount.greaterThan(BIG_INT_ZERO))\n              return -1\n            // only the second is being staked, so we should bring the first down\n            if (!info_a.stakedAmount.greaterThan(BIG_INT_ZERO) && info_b.stakedAmount.greaterThan(BIG_INT_ZERO))\n              return 1\n            return 0\n          })\n          // TODO: update here api call without staking reward address\n          .map(stakingInfo => {\n            if (poolMap) {\n              return fetch(\n                `${PANGOLIN_API_BASE_URL}/pangolin/apr2/${poolMap[stakingInfo.totalStakedAmount.token.address]}`\n              )\n                .then(res => res.json())\n                .then(res => ({\n                  swapFeeApr: Number(res.swapFeeApr),\n                  stakingApr: Number(res.stakingApr),\n                  combinedApr: Number(res.combinedApr),\n                  ...stakingInfo\n                }))\n            } else {\n              return fetch(`${PANGOLIN_API_BASE_URL}/pangolin/apr/${stakingInfo.stakingRewardAddress}`)\n                .then(res => res.json())\n                .then(res => ({\n                  swapFeeApr: Number(res.swapFeeApr),\n                  stakingApr: Number(res.stakingApr),\n                  combinedApr: Number(res.combinedApr),\n                  ...stakingInfo\n                }))\n            }\n          })\n      ).then(updatedStakingInfos => {\n        const poolCards = updatedStakingInfos.map((stakingInfo, index) => {\n          return (\n            <PoolCard\n              key={index}\n              stakingInfo={stakingInfo}\n              onClickViewDetail={() => {\n                // let container = {} as { [address: string]: { staking: StakingInfo } }\n                // container[stakingInfo.stakingRewardAddress] = { staking: stakingInfo }\n                setSelectedPoolIndex(index)\n                togglePoolDetailModal()\n              }}\n              version={Number(version)}\n            />\n          )\n        })\n\n        setStakingInfoData(updatedStakingInfos)\n        setPoolCards(poolCards)\n        setPoolCardsLoading(false)\n      })\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [stakingInfos?.length, version])\n\n  const stakingRewardsExist = Boolean(\n    typeof chainId === 'number' && (DOUBLE_SIDE_STAKING_REWARDS_INFO[chainId]?.length ?? 0) > 0\n  )\n  const selectedPool: DoubleSideStakingInfo = selectedPoolIndex !== -1 ? stakingInfoData[selectedPoolIndex] : undefined\n\n  return (\n    <PoolsWrapper>\n      {(stakingRewardsExist && stakingInfos?.length === 0) || poolCardsLoading ? (\n        <LoadingWrapper>\n          <Loader style={{ margin: 'auto' }} size=\"35px\" stroke={theme.primary} />\n        </LoadingWrapper>\n      ) : (!stakingRewardsExist || poolCards?.length === 0) && !poolCardsLoading ? (\n        t('earnPage.noActiveRewards')\n      ) : (\n        <>\n          <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={10}>\n            <Box width=\"100%\">\n              <TextInput\n                placeholder={t('searchModal.tokenName')}\n                onChange={handleSearch}\n                value={searchQuery}\n                id=\"token-search-input\"\n                addonAfter={<Search style={{ marginTop: '5px' }} color={theme.text2} size={20} />}\n              />\n            </Box>\n            <Hidden upToSmall={true}>\n              <Box ml={10}>\n                <DropdownMenu\n                  title=\"Sort by:\"\n                  options={SortOptions}\n                  value={sortBy}\n                  onSelect={value => {\n                    setSortBy(value)\n                  }}\n                  height=\"54px\"\n                />\n              </Box>\n            </Hidden>\n          </Box>\n          <MobileGridContainer>\n            <DropdownMenu\n              options={menuItems}\n              value={activeMenu}\n              onSelect={value => {\n                setMenu(value)\n              }}\n            />\n            <DropdownMenu\n              title=\"Sort by:\"\n              options={SortOptions}\n              value={sortBy}\n              onSelect={value => {\n                setSortBy(value)\n              }}\n            />\n          </MobileGridContainer>\n\n          <Scrollbars>\n            <PanelWrapper>{filteredPoolCards}</PanelWrapper>\n          </Scrollbars>\n        </>\n      )}\n\n      <DetailModal stakingInfo={selectedPool} version={Number(version)} />\n    </PoolsWrapper>\n  )\n}\n\nexport default PoolList\n"]},"metadata":{},"sourceType":"module"}