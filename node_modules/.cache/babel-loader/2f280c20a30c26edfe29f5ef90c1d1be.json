{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Dashboard/Portfolio/index.tsx\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Box, Text } from '@pangolindex/components';\nimport Scrollbars from 'react-custom-scrollbars';\nimport { useTranslation } from 'react-i18next';\nimport { ThemeContext } from 'styled-components';\nimport { CHAINS, ChainsId } from 'src/constants/chains';\nimport { useActiveWeb3React } from 'src/hooks';\nimport { useGetChainsBalances } from 'src/state/portifolio/hooks';\nimport { PortfolioToken, PortfolioInfo } from './styleds';\nimport { Card, CardHeader, CardBody } from '../styleds';\nimport Loader from 'src/components/Loader';\nimport Info2 from \"src/assets/svg/info2.svg\";\nexport default function PortfolioWidget() {\n  const theme = useContext(ThemeContext);\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useActiveWeb3React(); // portifolio\n  // const [selectChain, setSelectChain] = useState<CHAIN>(CHAINS[ChainsId.All])\n  // const handleSelectChain = (newChain: CHAIN) => {\n  //   setSelectChain(newChain)\n  // }\n\n  const {\n    data: balances,\n    isLoading\n  } = useGetChainsBalances();\n  const [availableBalances, setAvailableBalances] = useState([]);\n  useEffect(() => {\n    const availableBalance = [];\n    Object.keys(ChainsId).filter(k => typeof k === 'string').forEach(key => {\n      if (isNaN(parseInt(key)) && key.toLowerCase() !== 'all' && balances) {\n        const chainid = ChainsId[key];\n        const balance = balances[chainid];\n\n        if (!!balance && balance >= 0.1) {\n          availableBalance.push({\n            chainID: chainid,\n            balance: balance\n          });\n        }\n      }\n    });\n    setAvailableBalances(availableBalance);\n  }, [balances]);\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, t('dashboardPage.portfolioValue') + ' in All Chains'), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, account ? isLoading ? /*#__PURE__*/React.createElement(Loader, {\n    size: \"10%\",\n    stroke: theme.yellow3,\n    style: {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }) : availableBalances.length > 0 ? /*#__PURE__*/React.createElement(Scrollbars, {\n    style: {\n      height: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, availableBalances.map((chain, index) => /*#__PURE__*/React.createElement(PortfolioToken, {\n    key: index,\n    height: 35,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"$\", ' ', chain.balance.toLocaleString(undefined, {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    width: '24px',\n    src: CHAINS[chain.chainID].logo,\n    alt: 'Chain logo',\n    style: {\n      marginLeft: '12px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  })))) : /*#__PURE__*/React.createElement(Box, {\n    height: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"text1\",\n    fontSize: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"$ 0\")) : /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"text1\",\n    fontSize: 24,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, `${t('swapPage.connectWalletViewPortFolio')}`)), /*#__PURE__*/React.createElement(PortfolioInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    width: '24px',\n    src: Info2,\n    alt: \"i\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }), ' ', /*#__PURE__*/React.createElement(Text, {\n    color: \"text8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, \"Includes coins, pools and other holdings in your current wallet\"))));\n}","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Dashboard/Portfolio/index.tsx"],"names":["React","useContext","useEffect","useState","Box","Text","Scrollbars","useTranslation","ThemeContext","CHAINS","ChainsId","useActiveWeb3React","useGetChainsBalances","PortfolioToken","PortfolioInfo","Card","CardHeader","CardBody","Loader","PortfolioWidget","theme","t","account","data","balances","isLoading","availableBalances","setAvailableBalances","availableBalance","Object","keys","filter","k","forEach","key","isNaN","parseInt","toLowerCase","chainid","balance","push","chainID","yellow3","marginLeft","marginRight","display","length","height","map","chain","index","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","logo","Info2"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { Box, Text } from '@pangolindex/components'\nimport Scrollbars from 'react-custom-scrollbars'\nimport { useTranslation } from 'react-i18next'\nimport { ThemeContext } from 'styled-components'\n\nimport { CHAINS, ChainsId } from 'src/constants/chains'\nimport { useActiveWeb3React } from 'src/hooks'\nimport { useGetChainsBalances } from 'src/state/portifolio/hooks'\n\nimport { PortfolioToken, PortfolioInfo } from './styleds'\nimport { Card, CardHeader, CardBody } from '../styleds'\nimport Loader from 'src/components/Loader'\nimport Info2 from 'src/assets/svg/info2.svg'\n\nexport default function PortfolioWidget() {\n  const theme = useContext(ThemeContext)\n  const { t } = useTranslation()\n  const { account } = useActiveWeb3React()\n  // portifolio\n  // const [selectChain, setSelectChain] = useState<CHAIN>(CHAINS[ChainsId.All])\n  // const handleSelectChain = (newChain: CHAIN) => {\n  //   setSelectChain(newChain)\n  // }\n  const { data: balances, isLoading } = useGetChainsBalances()\n  const [availableBalances, setAvailableBalances] = useState<{ chainID: ChainsId; balance: number }[]>([])\n\n  useEffect(() => {\n    const availableBalance: { chainID: ChainsId; balance: number }[] = []\n    Object.keys(ChainsId)\n      .filter(k => typeof k === 'string')\n      .forEach(key => {\n        if (isNaN(parseInt(key)) && key.toLowerCase() !== 'all' && balances) {\n          const chainid = ChainsId[key as keyof typeof ChainsId]\n          const balance = balances[chainid]\n          if (!!balance && balance >= 0.1) {\n            availableBalance.push({\n              chainID: chainid,\n              balance: balance\n            })\n          }\n        }\n      })\n    setAvailableBalances(availableBalance)\n  }, [balances])\n\n  return (\n    <Card>\n      <CardHeader>\n        {t('dashboardPage.portfolioValue') + ' in All Chains'}\n        {/* <HeaderDropdowns>\n                  <ChainDropdown selectChain={selectChain} handleSelectChain={handleSelectChain}></ChainDropdown>\n                </HeaderDropdowns> */}\n      </CardHeader>\n      <CardBody>\n        {/* <TradingViewChart /> */}\n        {account ? (\n          isLoading ? (\n            <Loader\n              size=\"10%\"\n              stroke={theme.yellow3}\n              style={{\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                display: 'block'\n              }}\n            />\n          ) : availableBalances.length > 0 ? (\n            <Scrollbars style={{ height: 100 }}>\n              {availableBalances.map((chain, index) => (\n                <PortfolioToken key={index} height={35}>\n                  ${' '}\n                  {chain.balance.toLocaleString(undefined, {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2\n                  })}\n                  <img\n                    width={'24px'}\n                    src={CHAINS[chain.chainID].logo}\n                    alt={'Chain logo'}\n                    style={{ marginLeft: '12px' }}\n                  />\n                </PortfolioToken>\n              ))}\n            </Scrollbars>\n          ) : (\n            <Box height={100}>\n              <Text color=\"text1\" fontSize={50}>\n                $ 0\n              </Text>\n            </Box>\n          )\n        ) : (\n          <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n            <Text color=\"text1\" fontSize={24} fontWeight={500}>\n              {`${t('swapPage.connectWalletViewPortFolio')}`}\n            </Text>\n          </Box>\n        )}\n        <PortfolioInfo>\n          <img width={'24px'} src={Info2} alt=\"i\" />{' '}\n          <Text color=\"text8\">Includes coins, pools and other holdings in your current wallet</Text>\n        </PortfolioInfo>\n      </CardBody>\n    </Card>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}