{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Pool/AllPoolList/PoolCard/index.tsx\";\nimport React, { useState } from 'react';\nimport { Panel, Divider, ActionButon, InnerWrapper, DetailButton, StatWrapper, OptionsWrapper, OptionButton } from './styleds';\nimport Stat from 'src/components/Stat';\nimport { Text, Box, DoubleCurrencyLogo } from '@pangolindex/components';\nimport { useTranslation } from 'react-i18next';\nimport numeral from 'numeral';\nimport { unwrappedToken } from 'src/utils/wrappedCurrency';\nimport { usePair } from 'src/data/Reserves'; // import { useGetPoolDollerWorth } from 'src/state/stake/hooks'\n\nimport { useTokens } from 'src/hooks/Tokens';\nimport RewardTokens from 'src/components/RewardTokens';\nimport { useActiveWeb3React } from 'src/hooks';\nimport { CHAINS } from 'src/constants/chains';\nimport { useTokenBalance } from 'src/state/wallet/hooks';\nimport ClaimDrawer from '../../ClaimDrawer';\nimport FarmDrawer from '../../FarmDrawer';\nimport AddLiquidityDrawer from '../../AddLiquidityDrawer';\nimport { useChainId } from 'src/hooks';\n\nconst PoolCard = _ref => {\n  var _ref2, _ref3, _ref4;\n\n  let {\n    stakingInfo,\n    onClickViewDetail,\n    version\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const [isClaimDrawerVisible, setShowClaimDrawer] = useState(false);\n  const [isFarmDrawerVisible, setShowFarmDrawer] = useState(false);\n  const [isAddLiquidityDrawerVisible, setShowAddLiquidityDrawer] = useState(false);\n  const {\n    account\n  } = useActiveWeb3React();\n  const chainId = useChainId();\n  const token0 = stakingInfo.tokens[0];\n  const token1 = stakingInfo.tokens[1];\n  const currency0 = unwrappedToken(token0, chainId);\n  const currency1 = unwrappedToken(token1, chainId);\n  const [, stakingTokenPair] = usePair(token0, token1);\n  const rewardTokens = useTokens(stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.rewardTokensAddress);\n  const isStaking = Boolean(stakingInfo.stakedAmount.greaterThan('0'));\n  const yourStackedInUsd = CHAINS[chainId].is_mainnet ? stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.totalStakedInUsd.multiply(stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.stakedAmount).divide(stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.totalStakedAmount) : undefined; // const { userPgl } = useGetPoolDollerWorth(stakingTokenPair)\n\n  const userPgl = useTokenBalance(account !== null && account !== void 0 ? account : undefined, stakingTokenPair === null || stakingTokenPair === void 0 ? void 0 : stakingTokenPair.liquidityToken);\n  const isLiquidity = Boolean(userPgl === null || userPgl === void 0 ? void 0 : userPgl.greaterThan('0'));\n  const isSuperFarm = ((_ref2 = (stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.rewardTokensAddress) || []) === null || _ref2 === void 0 ? void 0 : _ref2.length) > 0;\n  return /*#__PURE__*/React.createElement(Panel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"text1\",\n    fontSize: 24,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, currency0.symbol, \"-\", currency1.symbol), isSuperFarm && /*#__PURE__*/React.createElement(OptionsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(OptionButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, \"Super farm\"))), /*#__PURE__*/React.createElement(DoubleCurrencyLogo, {\n    size: 48,\n    currency0: currency0,\n    currency1: currency1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(StatWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, isStaking ? /*#__PURE__*/React.createElement(Stat, {\n    title: 'Your TVL',\n    stat: numeral((_ref3 = yourStackedInUsd) === null || _ref3 === void 0 ? void 0 : _ref3.toFixed(2)).format('$0.00a'),\n    titlePosition: \"top\",\n    titleFontSize: 16,\n    statFontSize: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(Stat, {\n    title: 'TVL',\n    stat: numeral((_ref4 = stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.totalStakedInUsd) === null || _ref4 === void 0 ? void 0 : _ref4.toFixed(2)).format('$0.00a'),\n    titlePosition: \"top\",\n    titleFontSize: 16,\n    statFontSize: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Stat, {\n    title: `APR`,\n    stat: (stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.combinedApr) ? `${stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.combinedApr}%` : '-',\n    titlePosition: \"top\",\n    titleFontSize: 16,\n    statFontSize: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"text1\",\n    fontSize: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, t('earn.rewardsIn')), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    mt: \"5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RewardTokens, {\n    rewardTokens: rewardTokens,\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(InnerWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DetailButton, {\n    variant: \"plain\",\n    onClick: () => onClickViewDetail(),\n    color: \"text1\",\n    height: \"45px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, t('pool.seeDetails'))), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, isStaking && Boolean(stakingInfo.earnedAmount.greaterThan('0')) ? /*#__PURE__*/React.createElement(ActionButon, {\n    variant: \"plain\",\n    onClick: () => setShowClaimDrawer(true),\n    backgroundColor: \"bg2\",\n    color: \"text1\",\n    height: \"45px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, t('earnPage.claim')) : isLiquidity ? /*#__PURE__*/React.createElement(ActionButon, {\n    variant: \"plain\",\n    onClick: () => setShowFarmDrawer(true),\n    backgroundColor: \"bg2\",\n    color: \"text1\",\n    height: \"45px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, t('header.farm')) : /*#__PURE__*/React.createElement(ActionButon, {\n    variant: \"plain\",\n    onClick: () => setShowAddLiquidityDrawer(true),\n    backgroundColor: \"bg2\",\n    color: \"text1\",\n    height: \"45px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, t('pool.addLiquidity')))), isClaimDrawerVisible && /*#__PURE__*/React.createElement(ClaimDrawer, {\n    isOpen: isClaimDrawerVisible,\n    onClose: () => {\n      setShowClaimDrawer(false);\n    },\n    stakingInfo: stakingInfo,\n    version: version,\n    backgroundColor: \"color5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }), isFarmDrawerVisible && /*#__PURE__*/React.createElement(FarmDrawer, {\n    isOpen: isFarmDrawerVisible,\n    onClose: () => {\n      setShowFarmDrawer(false);\n    },\n    clickedLpTokens: stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.tokens,\n    version: version,\n    backgroundColor: \"color5\",\n    combinedApr: stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.combinedApr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }), isAddLiquidityDrawerVisible && /*#__PURE__*/React.createElement(AddLiquidityDrawer, {\n    isOpen: isAddLiquidityDrawerVisible,\n    onClose: () => {\n      setShowAddLiquidityDrawer(false);\n    },\n    clickedLpTokens: stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.tokens,\n    backgroundColor: \"color5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default PoolCard;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Pool/AllPoolList/PoolCard/index.tsx"],"names":["React","useState","Panel","Divider","ActionButon","InnerWrapper","DetailButton","StatWrapper","OptionsWrapper","OptionButton","Stat","Text","Box","DoubleCurrencyLogo","useTranslation","numeral","unwrappedToken","usePair","useTokens","RewardTokens","useActiveWeb3React","CHAINS","useTokenBalance","ClaimDrawer","FarmDrawer","AddLiquidityDrawer","useChainId","PoolCard","stakingInfo","onClickViewDetail","version","t","isClaimDrawerVisible","setShowClaimDrawer","isFarmDrawerVisible","setShowFarmDrawer","isAddLiquidityDrawerVisible","setShowAddLiquidityDrawer","account","chainId","token0","tokens","token1","currency0","currency1","stakingTokenPair","rewardTokens","rewardTokensAddress","isStaking","Boolean","stakedAmount","greaterThan","yourStackedInUsd","is_mainnet","totalStakedInUsd","multiply","divide","totalStakedAmount","undefined","userPgl","liquidityToken","isLiquidity","isSuperFarm","length","symbol","toFixed","format","combinedApr","earnedAmount"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Fraction } from '@pangolindex/sdk'\nimport {\n  Panel,\n  Divider,\n  ActionButon,\n  InnerWrapper,\n  DetailButton,\n  StatWrapper,\n  OptionsWrapper,\n  OptionButton\n} from './styleds'\nimport Stat from 'src/components/Stat'\nimport { Text, Box, DoubleCurrencyLogo } from '@pangolindex/components'\nimport { useTranslation } from 'react-i18next'\nimport numeral from 'numeral'\nimport { unwrappedToken } from 'src/utils/wrappedCurrency'\nimport { StakingInfo } from 'src/state/stake/hooks'\nimport { usePair } from 'src/data/Reserves'\n// import { useGetPoolDollerWorth } from 'src/state/stake/hooks'\nimport { useTokens } from 'src/hooks/Tokens'\nimport RewardTokens from 'src/components/RewardTokens'\nimport { useActiveWeb3React } from 'src/hooks'\nimport { CHAINS } from 'src/constants/chains'\nimport { useTokenBalance } from 'src/state/wallet/hooks'\nimport ClaimDrawer from '../../ClaimDrawer'\nimport FarmDrawer from '../../FarmDrawer'\nimport AddLiquidityDrawer from '../../AddLiquidityDrawer'\nimport { useChainId } from 'src/hooks'\n\nexport interface PoolCardProps {\n  stakingInfo: StakingInfo\n  onClickViewDetail: () => void\n  version: number\n}\n\nconst PoolCard = ({ stakingInfo, onClickViewDetail, version }: PoolCardProps) => {\n  const { t } = useTranslation()\n  const [isClaimDrawerVisible, setShowClaimDrawer] = useState(false)\n\n  const [isFarmDrawerVisible, setShowFarmDrawer] = useState(false)\n  const [isAddLiquidityDrawerVisible, setShowAddLiquidityDrawer] = useState(false)\n\n  const { account } = useActiveWeb3React()\n  const chainId = useChainId()\n\n  const token0 = stakingInfo.tokens[0]\n  const token1 = stakingInfo.tokens[1]\n\n  const currency0 = unwrappedToken(token0, chainId)\n  const currency1 = unwrappedToken(token1, chainId)\n\n  const [, stakingTokenPair] = usePair(token0, token1)\n\n  const rewardTokens = useTokens(stakingInfo?.rewardTokensAddress)\n\n  const isStaking = Boolean(stakingInfo.stakedAmount.greaterThan('0'))\n\n  const yourStackedInUsd = CHAINS[chainId].is_mainnet\n    ? stakingInfo?.totalStakedInUsd.multiply(stakingInfo?.stakedAmount).divide(stakingInfo?.totalStakedAmount)\n    : undefined\n\n  // const { userPgl } = useGetPoolDollerWorth(stakingTokenPair)\n  const userPgl = useTokenBalance(account ?? undefined, stakingTokenPair?.liquidityToken)\n\n  const isLiquidity = Boolean(userPgl?.greaterThan('0'))\n\n  const isSuperFarm = (stakingInfo?.rewardTokensAddress || [])?.length > 0\n  return (\n    <Panel>\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n        <Box>\n          <Text color=\"text1\" fontSize={24} fontWeight={500}>\n            {currency0.symbol}-{currency1.symbol}\n          </Text>\n\n          {isSuperFarm && (\n            <OptionsWrapper>\n              <OptionButton>Super farm</OptionButton>\n            </OptionsWrapper>\n          )}\n        </Box>\n\n        <DoubleCurrencyLogo size={48} currency0={currency0} currency1={currency1} />\n      </Box>\n      <Divider />\n\n      <StatWrapper>\n        {isStaking ? (\n          <Stat\n            title={'Your TVL'}\n            stat={numeral((yourStackedInUsd as Fraction)?.toFixed(2)).format('$0.00a')}\n            titlePosition=\"top\"\n            titleFontSize={16}\n            statFontSize={24}\n          />\n        ) : (\n          <Stat\n            title={'TVL'}\n            stat={numeral((stakingInfo?.totalStakedInUsd as Fraction)?.toFixed(2)).format('$0.00a')}\n            titlePosition=\"top\"\n            titleFontSize={16}\n            statFontSize={24}\n          />\n        )}\n\n        <Stat\n          title={`APR`}\n          stat={stakingInfo?.combinedApr ? `${stakingInfo?.combinedApr}%` : '-'}\n          titlePosition=\"top\"\n          titleFontSize={16}\n          statFontSize={24}\n        />\n\n        <Box display=\"inline-block\">\n          <Text color=\"text1\" fontSize={16}>\n            {t('earn.rewardsIn')}\n          </Text>\n\n          <Box display=\"flex\" alignItems=\"center\" mt=\"5px\">\n            <RewardTokens rewardTokens={rewardTokens} size={24} />\n          </Box>\n        </Box>\n      </StatWrapper>\n\n      <InnerWrapper>\n        <Box>\n          <DetailButton variant=\"plain\" onClick={() => onClickViewDetail()} color=\"text1\" height=\"45px\">\n            {t('pool.seeDetails')}\n          </DetailButton>\n        </Box>\n        <Box>\n          {isStaking && Boolean(stakingInfo.earnedAmount.greaterThan('0')) ? (\n            <ActionButon\n              variant=\"plain\"\n              onClick={() => setShowClaimDrawer(true)}\n              backgroundColor=\"bg2\"\n              color=\"text1\"\n              height=\"45px\"\n            >\n              {t('earnPage.claim')}\n            </ActionButon>\n          ) : isLiquidity ? (\n            <ActionButon\n              variant=\"plain\"\n              onClick={() => setShowFarmDrawer(true)}\n              backgroundColor=\"bg2\"\n              color=\"text1\"\n              height=\"45px\"\n            >\n              {t('header.farm')}\n            </ActionButon>\n          ) : (\n            <ActionButon\n              variant=\"plain\"\n              onClick={() => setShowAddLiquidityDrawer(true)}\n              backgroundColor=\"bg2\"\n              color=\"text1\"\n              height=\"45px\"\n            >\n              {t('pool.addLiquidity')}\n            </ActionButon>\n          )}\n        </Box>\n      </InnerWrapper>\n      {isClaimDrawerVisible && (\n        <ClaimDrawer\n          isOpen={isClaimDrawerVisible}\n          onClose={() => {\n            setShowClaimDrawer(false)\n          }}\n          stakingInfo={stakingInfo}\n          version={version}\n          backgroundColor=\"color5\"\n        />\n      )}\n\n      {isFarmDrawerVisible && (\n        <FarmDrawer\n          isOpen={isFarmDrawerVisible}\n          onClose={() => {\n            setShowFarmDrawer(false)\n          }}\n          clickedLpTokens={stakingInfo?.tokens}\n          version={version}\n          backgroundColor=\"color5\"\n          combinedApr={stakingInfo?.combinedApr}\n        />\n      )}\n\n      {isAddLiquidityDrawerVisible && (\n        <AddLiquidityDrawer\n          isOpen={isAddLiquidityDrawerVisible}\n          onClose={() => {\n            setShowAddLiquidityDrawer(false)\n          }}\n          clickedLpTokens={stakingInfo?.tokens}\n          backgroundColor=\"color5\"\n        />\n      )}\n    </Panel>\n  )\n}\n\nexport default PoolCard\n"]},"metadata":{},"sourceType":"module"}