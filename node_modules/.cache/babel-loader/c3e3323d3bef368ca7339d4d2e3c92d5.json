{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Swap/WatchList/CurrencyPopover/CurrencyRow.tsx\";\nimport React, { useCallback } from 'react';\nimport { Text, Box, CurrencyLogo, Button } from '@pangolindex/components';\nimport { RowWrapper } from './styled';\nimport useUSDCPrice from 'src/utils/useUSDCPrice';\nimport { useIsSelectedCurrency } from 'src/state/watchlists/hooks';\nimport { unwrappedToken } from 'src/utils/wrappedCurrency';\nimport { useChainId } from 'src/hooks';\n\nconst WatchlistCurrencyRow = _ref => {\n  let {\n    currency,\n    onSelect,\n    style\n  } = _ref;\n  const usdcPrice = useUSDCPrice(currency);\n  const isSelected = useIsSelectedCurrency(currency === null || currency === void 0 ? void 0 : currency.address);\n  const chainId = useChainId();\n  const handleSelect = useCallback(() => {\n    onSelect(currency === null || currency === void 0 ? void 0 : currency.address);\n  }, [onSelect, currency]);\n  const token = unwrappedToken(currency, chainId);\n  return /*#__PURE__*/React.createElement(RowWrapper, {\n    disabled: isSelected,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CurrencyLogo, {\n    size: 24,\n    currency: token,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    color: \"text1\",\n    fontSize: 20,\n    fontWeight: 500,\n    marginLeft: '6px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, token === null || token === void 0 ? void 0 : token.symbol)), /*#__PURE__*/React.createElement(Box, {\n    ml: '10px',\n    textAlign: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"text1\",\n    fontSize: 16,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"$\", usdcPrice ? usdcPrice === null || usdcPrice === void 0 ? void 0 : usdcPrice.toSignificant(4, {\n    groupSeparator: ','\n  }) : '-')), /*#__PURE__*/React.createElement(Box, {\n    ml: '10px',\n    textAlign: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    backgroundColor: \"bg9\",\n    color: \"text6\",\n    padding: '0px',\n    onClick: handleSelect,\n    height: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Add\")));\n};\n\nexport default WatchlistCurrencyRow;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Swap/WatchList/CurrencyPopover/CurrencyRow.tsx"],"names":["React","useCallback","Text","Box","CurrencyLogo","Button","RowWrapper","useUSDCPrice","useIsSelectedCurrency","unwrappedToken","useChainId","WatchlistCurrencyRow","currency","onSelect","style","usdcPrice","isSelected","address","chainId","handleSelect","token","symbol","toSignificant","groupSeparator"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,YAApB,EAAkCC,MAAlC,QAAgD,yBAAhD;AAEA,SAASC,UAAT,QAA2B,UAA3B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,qBAAT,QAAsC,4BAAtC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,UAAT,QAA2B,WAA3B;;AAQA,MAAMC,oBAAqC,GAAG,QAAmC;AAAA,MAAlC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA;AAAtB,GAAkC;AAC/E,QAAMC,SAAS,GAAGR,YAAY,CAACK,QAAD,CAA9B;AACA,QAAMI,UAAU,GAAGR,qBAAqB,CAACI,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEK,OAAX,CAAxC;AAEA,QAAMC,OAAO,GAAGR,UAAU,EAA1B;AAEA,QAAMS,YAAY,GAAGlB,WAAW,CAAC,MAAM;AACrCY,IAAAA,QAAQ,CAACD,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEK,OAAX,CAAR;AACD,GAF+B,EAE7B,CAACJ,QAAD,EAAWD,QAAX,CAF6B,CAAhC;AAIA,QAAMQ,KAAK,GAAGX,cAAc,CAACG,QAAD,EAAWM,OAAX,CAA5B;AAEA,sBACE,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAEF,UAAtB;AAAkC,IAAA,KAAK,EAAEF,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,UAAU,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAE,EAApB;AAAwB,IAAA,QAAQ,EAAEM,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,OAAZ;AAAoB,IAAA,QAAQ,EAAE,EAA9B;AAAkC,IAAA,UAAU,EAAE,GAA9C;AAAmD,IAAA,UAAU,EAAE,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KADH,aACGA,KADH,uBACGA,KAAK,CAAEC,MADV,CAFF,CADF,eAQE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,MAAT;AAAiB,IAAA,SAAS,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,OAAZ;AAAoB,IAAA,QAAQ,EAAE,EAA9B;AAAkC,IAAA,UAAU,EAAE,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACIN,SAAS,GAAGA,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEO,aAAX,CAAyB,CAAzB,EAA4B;AAAEC,IAAAA,cAAc,EAAE;AAAlB,GAA5B,CAAH,GAA0D,GADvE,CADF,CARF,eAaE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,MAAT;AAAiB,IAAA,SAAS,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,eAAe,EAAC,KAFlB;AAGE,IAAA,KAAK,EAAC,OAHR;AAIE,IAAA,OAAO,EAAE,KAJX;AAKE,IAAA,OAAO,EAAEJ,YALX;AAME,IAAA,MAAM,EAAC,MANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CAbF,CADF;AA4BD,CAxCD;;AA0CA,eAAeR,oBAAf","sourcesContent":["import React, { useCallback } from 'react'\nimport { Text, Box, CurrencyLogo, Button } from '@pangolindex/components'\nimport { Token } from '@pangolindex/sdk'\nimport { RowWrapper } from './styled'\nimport useUSDCPrice from 'src/utils/useUSDCPrice'\nimport { useIsSelectedCurrency } from 'src/state/watchlists/hooks'\nimport { unwrappedToken } from 'src/utils/wrappedCurrency'\nimport { useChainId } from 'src/hooks'\n\ntype Props = {\n  currency: Token\n  onSelect: (address: string) => void\n  style: any\n}\n\nconst WatchlistCurrencyRow: React.FC<Props> = ({ currency, onSelect, style }) => {\n  const usdcPrice = useUSDCPrice(currency)\n  const isSelected = useIsSelectedCurrency(currency?.address)\n\n  const chainId = useChainId()\n\n  const handleSelect = useCallback(() => {\n    onSelect(currency?.address)\n  }, [onSelect, currency])\n\n  const token = unwrappedToken(currency, chainId)\n\n  return (\n    <RowWrapper disabled={isSelected} style={style}>\n      <Box display=\"flex\" alignItems=\"center\">\n        <CurrencyLogo size={24} currency={token} />\n        <Text color=\"text1\" fontSize={20} fontWeight={500} marginLeft={'6px'}>\n          {token?.symbol}\n        </Text>\n      </Box>\n\n      <Box ml={'10px'} textAlign=\"right\">\n        <Text color=\"text1\" fontSize={16} fontWeight={500}>\n          ${usdcPrice ? usdcPrice?.toSignificant(4, { groupSeparator: ',' }) : '-'}\n        </Text>\n      </Box>\n      <Box ml={'10px'} textAlign=\"right\">\n        <Button\n          variant=\"secondary\"\n          backgroundColor=\"bg9\"\n          color=\"text6\"\n          padding={'0px'}\n          onClick={handleSelect}\n          height=\"24px\"\n        >\n          Add\n        </Button>\n      </Box>\n    </RowWrapper>\n  )\n}\n\nexport default WatchlistCurrencyRow\n"]},"metadata":{},"sourceType":"module"}