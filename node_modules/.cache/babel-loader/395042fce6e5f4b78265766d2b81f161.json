{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Stake/DetailModal/StakeWidget/index.tsx\";\nimport React from 'react';\nimport { ZERO_ADDRESS } from 'src/constants';\nimport { Root, Buttons, MaxButton, Balance, StakeWrapper, GridContainer } from './styled';\nimport { BETA_MENU_LINK } from 'src/constants';\nimport { Box, Button, Text, TextInput, CurrencyLogo } from '@pangolindex/components';\nimport { ApprovalState } from 'src/hooks/useApproveCallback';\nimport { useDerivedStakingProcess } from 'src/state/stake/hooks';\nimport { useTranslation } from 'react-i18next';\nimport TransactionCompleted from 'src/components/Beta/TransactionCompleted';\nimport Stat from 'src/components/Stat';\nimport Loader from 'src/components/Beta/Loader';\nimport Percentage from 'src/components/Beta/Percentage';\n\nconst StakeWidget = _ref => {\n  let {\n    stakingInfo,\n    onClose,\n    isRewardStake\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const {\n    stakeToken,\n    attempting,\n    parsedAmount,\n    hash,\n    userPngUnstaked,\n    stepIndex,\n    dollerWorth,\n    hypotheticalRewardRatePerWeek,\n    signatureData,\n    error,\n    approval,\n    account,\n    png,\n    onUserInput,\n    onAttemptToApprove,\n    wrappedOnDismiss,\n    handleMax,\n    onStake,\n    setStepIndex,\n    onChangePercentage\n  } = useDerivedStakingProcess(stakingInfo);\n  const isDisabled = !(userPngUnstaked === null || userPngUnstaked === void 0 ? void 0 : userPngUnstaked.greaterThan('0'));\n  return /*#__PURE__*/React.createElement(Root, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, !attempting && !hash && /*#__PURE__*/React.createElement(React.Fragment, null, isRewardStake ? /*#__PURE__*/React.createElement(Box, {\n    textAlign: \"center\",\n    mt: 20,\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: \"26px\",\n    fontWeight: 500,\n    color: \"text1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, (parsedAmount === null || parsedAmount === void 0 ? void 0 : parsedAmount.toSignificant(6)) || '0'), /*#__PURE__*/React.createElement(Box, {\n    ml: 10,\n    mt: \"8px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CurrencyLogo, {\n    currency: png,\n    size: 24,\n    imageSize: 48,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Text, {\n    fontSize: \"14px\",\n    color: \"text2\",\n    textAlign: \"center\",\n    mt: \"15px\",\n    mb: \"15px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \"Stake your rewards\")) : /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mb: \"5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"color4\",\n    fontSize: 20,\n    fontWeight: 500,\n    mb: \"5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Stake\"), /*#__PURE__*/React.createElement(Text, {\n    color: \"color9\",\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Stake your PNG token to share platform fees\")), /*#__PURE__*/React.createElement(TextInput, {\n    value: (parsedAmount === null || parsedAmount === void 0 ? void 0 : parsedAmount.toExact()) || '0',\n    addonAfter: /*#__PURE__*/React.createElement(Box, {\n      display: 'flex',\n      alignItems: 'center',\n      height: '100%',\n      justifyContent: 'center',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(MaxButton, {\n      onClick: () => handleMax(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, \"PNG\")),\n    onChange: value => {\n      onUserInput(value);\n    },\n    label: `Enter PNG`,\n    fontSize: 24,\n    isNumeric: true,\n    placeholder: \"0.00\",\n    addonLabel: account && /*#__PURE__*/React.createElement(Balance, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, !!userPngUnstaked ? t('currencyInputPanel.balance') + (userPngUnstaked === null || userPngUnstaked === void 0 ? void 0 : userPngUnstaked.toSignificant(6)) : ' -'),\n    disabled: isDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Percentage, {\n    onChangePercentage: value => {\n      setStepIndex(value);\n      onChangePercentage(value * 25);\n    },\n    currentValue: stepIndex,\n    variant: \"step\",\n    isDisabled: isDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(StakeWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Stat, {\n    title: `${t('migratePage.dollarWorth')}`,\n    stat: `${dollerWorth ? `$${dollerWorth === null || dollerWorth === void 0 ? void 0 : dollerWorth.toFixed(4)}` : '-'}`,\n    titlePosition: \"top\",\n    titleFontSize: 14,\n    statFontSize: 18,\n    titleColor: \"text2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Stat, {\n    title: `${t('earn.weeklyRewards')}`,\n    stat: hypotheticalRewardRatePerWeek ? `${hypotheticalRewardRatePerWeek.toSignificant(4)}\n      ` : '-',\n    titlePosition: \"top\",\n    titleFontSize: 14,\n    statFontSize: 18,\n    titleColor: \"text2\",\n    currency: stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.rewardToken,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }))))), /*#__PURE__*/React.createElement(Buttons, {\n    isStaked: userPngUnstaked === null || userPngUnstaked === void 0 ? void 0 : userPngUnstaked.greaterThan('0'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, (userPngUnstaked === null || userPngUnstaked === void 0 ? void 0 : userPngUnstaked.greaterThan('0')) ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    padding: \"15px 18px\",\n    variant: approval === ApprovalState.APPROVED || signatureData !== null ? 'confirm' : 'primary',\n    isDisabled: approval !== ApprovalState.NOT_APPROVED || signatureData !== null,\n    onClick: onAttemptToApprove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, t('earn.approve')), /*#__PURE__*/React.createElement(Button, {\n    padding: \"15px 18px\",\n    variant: 'primary',\n    isDisabled: !!error || signatureData === null && approval !== ApprovalState.APPROVED,\n    onClick: onStake,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, error !== null && error !== void 0 ? error : t('earn.deposit'))) : /*#__PURE__*/React.createElement(Button, {\n    padding: \"15px 18px\",\n    variant: \"primary\",\n    as: \"a\",\n    href: `/#${BETA_MENU_LINK.swap}?inputCurrency=${ZERO_ADDRESS}&outputCurrency=${png.address}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, t('header.buy', {\n    symbol: stakeToken\n  })))), attempting && !hash && /*#__PURE__*/React.createElement(Loader, {\n    size: 100,\n    label: isRewardStake ? 'Reward Staking' : 'Staking',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 31\n    }\n  }), hash && /*#__PURE__*/React.createElement(TransactionCompleted, {\n    onClose: () => {\n      wrappedOnDismiss();\n      onClose && onClose();\n    },\n    submitText: isRewardStake ? 'Your rewards have been staked.' : 'Staked',\n    showCloseIcon: isRewardStake ? false : true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default StakeWidget;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Stake/DetailModal/StakeWidget/index.tsx"],"names":["React","ZERO_ADDRESS","Root","Buttons","MaxButton","Balance","StakeWrapper","GridContainer","BETA_MENU_LINK","Box","Button","Text","TextInput","CurrencyLogo","ApprovalState","useDerivedStakingProcess","useTranslation","TransactionCompleted","Stat","Loader","Percentage","StakeWidget","stakingInfo","onClose","isRewardStake","t","stakeToken","attempting","parsedAmount","hash","userPngUnstaked","stepIndex","dollerWorth","hypotheticalRewardRatePerWeek","signatureData","error","approval","account","png","onUserInput","onAttemptToApprove","wrappedOnDismiss","handleMax","onStake","setStepIndex","onChangePercentage","isDisabled","greaterThan","toSignificant","toExact","value","toFixed","rewardToken","APPROVED","NOT_APPROVED","swap","address","symbol"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { ZERO_ADDRESS } from 'src/constants'\nimport { Root, Buttons, MaxButton, Balance, StakeWrapper, GridContainer } from './styled'\nimport { BETA_MENU_LINK } from 'src/constants'\nimport { Box, Button, Text, TextInput, CurrencyLogo } from '@pangolindex/components'\nimport { ApprovalState } from 'src/hooks/useApproveCallback'\nimport { SingleSideStakingInfo, useDerivedStakingProcess } from 'src/state/stake/hooks'\nimport { useTranslation } from 'react-i18next'\nimport TransactionCompleted from 'src/components/Beta/TransactionCompleted'\nimport Stat from 'src/components/Stat'\nimport Loader from 'src/components/Beta/Loader'\nimport Percentage from 'src/components/Beta/Percentage'\n\ntype Props = {\n  stakingInfo: SingleSideStakingInfo\n  onClose?: () => void\n  isRewardStake?: boolean\n}\n\nconst StakeWidget: React.FC<Props> = ({ stakingInfo, onClose, isRewardStake }) => {\n  const { t } = useTranslation()\n\n  const {\n    stakeToken,\n    attempting,\n    parsedAmount,\n    hash,\n    userPngUnstaked,\n    stepIndex,\n    dollerWorth,\n    hypotheticalRewardRatePerWeek,\n    signatureData,\n    error,\n    approval,\n    account,\n    png,\n    onUserInput,\n    onAttemptToApprove,\n    wrappedOnDismiss,\n    handleMax,\n    onStake,\n    setStepIndex,\n    onChangePercentage\n  } = useDerivedStakingProcess(stakingInfo)\n\n  const isDisabled = !userPngUnstaked?.greaterThan('0')\n\n  return (\n    <Root>\n      {!attempting && !hash && (\n        <>\n          {isRewardStake ? (\n            <Box textAlign=\"center\" mt={20} flex={1}>\n              <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n                <Text fontSize=\"26px\" fontWeight={500} color=\"text1\">\n                  {parsedAmount?.toSignificant(6) || '0'}\n                </Text>\n                <Box ml={10} mt=\"8px\">\n                  <CurrencyLogo currency={png} size={24} imageSize={48} />\n                </Box>\n              </Box>\n\n              <Text fontSize=\"14px\" color=\"text2\" textAlign=\"center\" mt=\"15px\" mb=\"15px\">\n                Stake your rewards\n              </Text>\n            </Box>\n          ) : (\n            <Box>\n              <Box mb=\"5px\">\n                <Text color=\"color4\" fontSize={20} fontWeight={500} mb=\"5px\">\n                  Stake\n                </Text>\n\n                {/* show already staked amount */}\n                <Text color=\"color9\" fontSize={14}>\n                  Stake your PNG token to share platform fees\n                </Text>\n              </Box>\n              <TextInput\n                value={parsedAmount?.toExact() || '0'}\n                addonAfter={\n                  <Box display={'flex'} alignItems={'center'} height={'100%'} justifyContent={'center'}>\n                    <MaxButton onClick={() => handleMax()}>PNG</MaxButton>\n                  </Box>\n                }\n                onChange={(value: any) => {\n                  onUserInput(value as any)\n                }}\n                label={`Enter PNG`}\n                fontSize={24}\n                isNumeric={true}\n                placeholder=\"0.00\"\n                addonLabel={\n                  account && (\n                    <Balance>\n                      {!!userPngUnstaked ? t('currencyInputPanel.balance') + userPngUnstaked?.toSignificant(6) : ' -'}\n                    </Balance>\n                  )\n                }\n                disabled={isDisabled}\n              />\n\n              <Box>\n                <Percentage\n                  onChangePercentage={value => {\n                    setStepIndex(value)\n                    onChangePercentage(value * 25)\n                  }}\n                  currentValue={stepIndex}\n                  variant=\"step\"\n                  isDisabled={isDisabled}\n                />\n              </Box>\n\n              <StakeWrapper>\n                <GridContainer>\n                  <Box>\n                    <Stat\n                      title={`${t('migratePage.dollarWorth')}`}\n                      stat={`${dollerWorth ? `$${dollerWorth?.toFixed(4)}` : '-'}`}\n                      titlePosition=\"top\"\n                      titleFontSize={14}\n                      statFontSize={18}\n                      titleColor=\"text2\"\n                    />\n                  </Box>\n\n                  <Box>\n                    <Stat\n                      title={`${t('earn.weeklyRewards')}`}\n                      stat={\n                        hypotheticalRewardRatePerWeek\n                          ? `${hypotheticalRewardRatePerWeek.toSignificant(4)}\n      `\n                          : '-'\n                      }\n                      titlePosition=\"top\"\n                      titleFontSize={14}\n                      statFontSize={18}\n                      titleColor=\"text2\"\n                      currency={stakingInfo?.rewardToken}\n                    />\n                  </Box>\n                </GridContainer>\n              </StakeWrapper>\n            </Box>\n          )}\n\n          <Buttons isStaked={userPngUnstaked?.greaterThan('0')}>\n            {/* show staked or get png button */}\n            {userPngUnstaked?.greaterThan('0') ? (\n              <>\n                <Button\n                  padding=\"15px 18px\"\n                  variant={approval === ApprovalState.APPROVED || signatureData !== null ? 'confirm' : 'primary'}\n                  isDisabled={approval !== ApprovalState.NOT_APPROVED || signatureData !== null}\n                  onClick={onAttemptToApprove}\n                >\n                  {t('earn.approve')}\n                </Button>\n                <Button\n                  padding=\"15px 18px\"\n                  variant={'primary'}\n                  isDisabled={!!error || (signatureData === null && approval !== ApprovalState.APPROVED)}\n                  onClick={onStake}\n                >\n                  {error ?? t('earn.deposit')}\n                </Button>\n              </>\n            ) : (\n              <Button\n                padding=\"15px 18px\"\n                variant=\"primary\"\n                as=\"a\"\n                href={`/#${BETA_MENU_LINK.swap}?inputCurrency=${ZERO_ADDRESS}&outputCurrency=${png.address}`}\n              >\n                {t('header.buy', { symbol: stakeToken })}\n              </Button>\n            )}\n          </Buttons>\n        </>\n      )}\n      {attempting && !hash && <Loader size={100} label={isRewardStake ? 'Reward Staking' : 'Staking'} />}\n      {hash && (\n        <TransactionCompleted\n          onClose={() => {\n            wrappedOnDismiss()\n            onClose && onClose()\n          }}\n          submitText={isRewardStake ? 'Your rewards have been staked.' : 'Staked'}\n          showCloseIcon={isRewardStake ? false : true}\n        />\n      )}\n    </Root>\n  )\n}\n\nexport default StakeWidget\n"]},"metadata":{},"sourceType":"module"}