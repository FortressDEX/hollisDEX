{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Earn/Earn.tsx\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { AutoColumn } from '../../components/Column';\nimport { ChevronDown, ChevronUp } from 'react-feather';\nimport styled from 'styled-components';\nimport { DOUBLE_SIDE_STAKING_REWARDS_INFO } from '../../state/stake/doubleSideConfig';\nimport { TYPE, ExternalLink } from '../../theme';\nimport DoubleSidePoolCard from '../../components/earn/DoubleSidePoolCard';\nimport { NavLink } from 'react-router-dom';\nimport { AutoRow, RowBetween } from '../../components/Row';\nimport { CardSection, DataCard, CardNoise, CardBGImage } from '../../components/earn/styled';\nimport Loader from '../../components/Loader';\nimport { useChainId } from '../../hooks';\nimport { useTranslation } from 'react-i18next';\nimport { SearchInput } from '../../components/SearchModal/styleds';\nimport useDebounce from '../../hooks/useDebounce';\nimport { BIG_INT_ZERO, PANGOLIN_API_BASE_URL } from '../../constants';\nimport Toggle from '../../components/Toggle';\nconst PageWrapper = styled(AutoColumn)`\n  max-width: 640px;\n  width: 100%;\n`;\nconst TopSection = styled(AutoColumn)`\n  max-width: 720px;\n  width: 100%;\n`;\nconst FlexDiv = styled.div`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n`;\nconst PoolSection = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  column-gap: 10px;\n  row-gap: 15px;\n  width: 100%;\n  justify-self: center;\n`;\nconst DataRow = styled(RowBetween)`\n  ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.mediaWidth.upToSmall`\n   flex-direction: column;\n `;\n}};\n`;\nconst SortSection = styled.div`\n  display: flex;\n`;\nconst SortField = styled.div`\n  margin: 0px 5px 0px 5px;\n  font-weight: 400;\n  font-size: 14px;\n  cursor: pointer;\n  display: flex;\n  line-height: 20px;\n`;\nconst SortFieldContainer = styled.div`\n  display: flex;\n  ${_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.mediaWidth.upToSmall`\n   display: none;\n `;\n}};\n`;\nconst Actions = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  ${_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.mediaWidth.upToSmall`\n   flex-direction: column;\n `;\n}};\n`;\nconst SuperFarmToggle = styled.div`\n  display: flex;\n  align-items: center;\n\n  .title {\n    margin-right: 10px;\n  }\n`;\nvar SortingType;\n\n(function (SortingType) {\n  SortingType[\"totalStakedInUsd\"] = \"totalStakedInUsd\";\n  SortingType[\"totalApr\"] = \"totalApr\";\n})(SortingType || (SortingType = {}));\n\nconst Earn = _ref4 => {\n  var _DOUBLE_SIDE_STAKING_, _DOUBLE_SIDE_STAKING_2;\n\n  let {\n    version,\n    stakingInfos,\n    poolMap\n  } = _ref4;\n  const chainId = useChainId();\n  const {\n    t\n  } = useTranslation();\n  const [poolCardsLoading, setPoolCardsLoading] = useState(false);\n  const [poolCards, setPoolCards] = useState();\n  const [filteredPoolCards, setFilteredPoolCards] = useState();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [sortBy, setSortBy] = useState({\n    field: '',\n    desc: true\n  });\n  const debouncedSearchQuery = useDebounce(searchQuery, 250);\n  const [showSuperFarm, setShowSuperFarm] = useState(true);\n  const [stakingInfoData, setStakingInfoData] = useState(stakingInfos);\n  const handleSearch = useCallback(event => {\n    setSearchQuery(event.target.value.trim().toUpperCase());\n  }, []);\n  useEffect(() => {\n    const filtered = poolCards === null || poolCards === void 0 ? void 0 : poolCards.filter(card => card.props.stakingInfo.tokens[0].symbol.toUpperCase().includes(debouncedSearchQuery) || card.props.stakingInfo.tokens[1].symbol.toUpperCase().includes(debouncedSearchQuery));\n    setFilteredPoolCards(filtered); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [poolCards, debouncedSearchQuery]);\n  useEffect(() => {\n    console.log('loading farms...');\n    const sortedFarms = stakingInfoData.sort(function (info_a, info_b) {\n      if (sortBy.field === SortingType.totalStakedInUsd) {\n        if (sortBy.desc) {\n          var _info_a$totalStakedIn, _info_b$totalStakedIn;\n\n          return ((_info_a$totalStakedIn = info_a.totalStakedInUsd) === null || _info_a$totalStakedIn === void 0 ? void 0 : _info_a$totalStakedIn.greaterThan((_info_b$totalStakedIn = info_b.totalStakedInUsd) !== null && _info_b$totalStakedIn !== void 0 ? _info_b$totalStakedIn : BIG_INT_ZERO)) ? -1 : 1;\n        } else {\n          var _info_a$totalStakedIn2, _info_b$totalStakedIn2;\n\n          return ((_info_a$totalStakedIn2 = info_a.totalStakedInUsd) === null || _info_a$totalStakedIn2 === void 0 ? void 0 : _info_a$totalStakedIn2.lessThan((_info_b$totalStakedIn2 = info_b.totalStakedInUsd) !== null && _info_b$totalStakedIn2 !== void 0 ? _info_b$totalStakedIn2 : BIG_INT_ZERO)) ? -1 : 1;\n        }\n      }\n\n      if (sortBy.field === SortingType.totalApr) {\n        if (sortBy.desc) {\n          return info_a.stakingApr + info_a.swapFeeApr > info_b.stakingApr + info_b.swapFeeApr ? -1 : 1;\n        } else {\n          return info_a.stakingApr + info_a.swapFeeApr < info_b.stakingApr + info_b.swapFeeApr ? -1 : 1;\n        }\n      }\n\n      return 0;\n    });\n    let finalFarms = sortedFarms;\n\n    if (showSuperFarm) {\n      // if super farms toggled on then keep all super farms on top\n      const nonSuperFarms = sortedFarms.filter(item => {\n        var _item$rewardTokensAdd;\n\n        return !((_item$rewardTokensAdd = item.rewardTokensAddress) === null || _item$rewardTokensAdd === void 0 ? void 0 : _item$rewardTokensAdd.length) && !item.stakedAmount.greaterThan(BIG_INT_ZERO);\n      });\n      const stakedFarms = sortedFarms.filter(item => item.stakedAmount.greaterThan(BIG_INT_ZERO));\n      const superFarms = sortedFarms.filter(item => {\n        var _item$rewardTokensAdd2;\n\n        return ((item === null || item === void 0 ? void 0 : (_item$rewardTokensAdd2 = item.rewardTokensAddress) === null || _item$rewardTokensAdd2 === void 0 ? void 0 : _item$rewardTokensAdd2.length) || 0) > 0 && !item.stakedAmount.greaterThan(BIG_INT_ZERO);\n      });\n      finalFarms = [...stakedFarms, ...superFarms, ...nonSuperFarms];\n    }\n\n    const poolCards = finalFarms.map((stakingInfo, index) => {\n      return /*#__PURE__*/React.createElement(DoubleSidePoolCard, {\n        swapFeeApr: stakingInfo.swapFeeApr,\n        stakingApr: stakingInfo.stakingApr,\n        key: index,\n        stakingInfo: stakingInfo,\n        version: version,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }\n      });\n    });\n    setPoolCards(poolCards); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sortBy === null || sortBy === void 0 ? void 0 : sortBy.field, sortBy === null || sortBy === void 0 ? void 0 : sortBy.desc, showSuperFarm, stakingInfoData]);\n  useEffect(() => {\n    setPoolCardsLoading(true);\n\n    if ((stakingInfos === null || stakingInfos === void 0 ? void 0 : stakingInfos.length) > 0) {\n      Promise.all(stakingInfos.filter(function (info) {\n        // Only include pools that are live or require a migration\n        return !info.isPeriodFinished || info.stakedAmount.greaterThan(BIG_INT_ZERO);\n      }).sort(function (info_a, info_b) {\n        var _info_a$totalStakedIn3, _info_b$totalStakedIn3;\n\n        // only first has ended\n        if (info_a.isPeriodFinished && !info_b.isPeriodFinished) return 1; // only second has ended\n\n        if (!info_a.isPeriodFinished && info_b.isPeriodFinished) return -1; // greater stake in avax comes first\n\n        return ((_info_a$totalStakedIn3 = info_a.totalStakedInUsd) === null || _info_a$totalStakedIn3 === void 0 ? void 0 : _info_a$totalStakedIn3.greaterThan((_info_b$totalStakedIn3 = info_b.totalStakedInUsd) !== null && _info_b$totalStakedIn3 !== void 0 ? _info_b$totalStakedIn3 : BIG_INT_ZERO)) ? -1 : 1;\n      }).sort(function (info_a, info_b) {\n        // only the first is being staked, so we should bring the first up\n        if (info_a.stakedAmount.greaterThan(BIG_INT_ZERO) && !info_b.stakedAmount.greaterThan(BIG_INT_ZERO)) return -1; // only the second is being staked, so we should bring the first down\n\n        if (!info_a.stakedAmount.greaterThan(BIG_INT_ZERO) && info_b.stakedAmount.greaterThan(BIG_INT_ZERO)) return 1;\n        return 0;\n      }) // TODO: update here api call without staking reward address\n      .map(stakingInfo => {\n        if (poolMap) {\n          return fetch(`${PANGOLIN_API_BASE_URL}/pangolin/apr2/${poolMap[stakingInfo.totalStakedAmount.token.address]}`).then(res => res.json()).then(res => ({\n            swapFeeApr: Number(res.swapFeeApr),\n            stakingApr: Number(res.stakingApr),\n            combinedApr: Number(res.combinedApr),\n            ...stakingInfo\n          }));\n        } else {\n          return fetch(`${PANGOLIN_API_BASE_URL}/pangolin/apr/${stakingInfo.stakingRewardAddress}`).then(res => res.json()).then(res => ({\n            swapFeeApr: Number(res.swapFeeApr),\n            stakingApr: Number(res.stakingApr),\n            combinedApr: Number(res.combinedApr),\n            ...stakingInfo\n          }));\n        }\n      })).then(updatedStakingInfos => {\n        const poolCards = updatedStakingInfos.map((stakingInfo, index) => {\n          return /*#__PURE__*/React.createElement(DoubleSidePoolCard // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          , {\n            swapFeeApr: stakingInfo.swapFeeApr // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            ,\n            stakingApr: stakingInfo.stakingApr,\n            key: index,\n            stakingInfo: stakingInfo,\n            version: version,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 13\n            }\n          });\n        });\n        setStakingInfoData(updatedStakingInfos);\n        setPoolCards(poolCards);\n        setPoolCardsLoading(false);\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [stakingInfos === null || stakingInfos === void 0 ? void 0 : stakingInfos.length, version]);\n  const stakingRewardsExist = Boolean(typeof chainId === 'number' && ((_DOUBLE_SIDE_STAKING_ = (_DOUBLE_SIDE_STAKING_2 = DOUBLE_SIDE_STAKING_REWARDS_INFO[chainId]) === null || _DOUBLE_SIDE_STAKING_2 === void 0 ? void 0 : _DOUBLE_SIDE_STAKING_2.length) !== null && _DOUBLE_SIDE_STAKING_ !== void 0 ? _DOUBLE_SIDE_STAKING_ : 0) > 0);\n  /* eslint-disable @typescript-eslint/ban-types */\n\n  const getSortField = (label, field, sortBy, setSortBy) => {\n    return /*#__PURE__*/React.createElement(SortField, {\n      onClick: () => {\n        const desc = (sortBy === null || sortBy === void 0 ? void 0 : sortBy.field) === field ? !(sortBy === null || sortBy === void 0 ? void 0 : sortBy.desc) : true;\n        setSortBy({\n          field,\n          desc\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 7\n      }\n    }, label, (sortBy === null || sortBy === void 0 ? void 0 : sortBy.field) === field && ((sortBy === null || sortBy === void 0 ? void 0 : sortBy.desc) ? /*#__PURE__*/React.createElement(ChevronDown, {\n      size: \"16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(ChevronUp, {\n      size: \"16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 81\n      }\n    })));\n  };\n\n  const toggleSuperFarm = () => {\n    setShowSuperFarm(prev => !prev);\n  };\n\n  return /*#__PURE__*/React.createElement(PageWrapper, {\n    gap: \"lg\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TopSection, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DataCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBGImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardNoise, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 17\n    }\n  }, t('earnPage.pangolinLiquidityMining'))), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 17\n    }\n  }, t('earnPage.depositPangolinLiquidity'))), ' ', /*#__PURE__*/React.createElement(AutoRow, {\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ExternalLink, {\n    style: {\n      color: 'white',\n      textDecoration: 'underline'\n    },\n    href: \"https://pangolin.exchange/litepaper\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 19\n    }\n  }, t('earnPage.readMoreAboutPng'))), /*#__PURE__*/React.createElement(FlexDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ExternalLink, {\n    style: {\n      color: 'white',\n      textDecoration: 'underline',\n      marginRight: 10\n    },\n    href: \"https://app.nexusmutual.io/cover/buy/get-quote?address=0xefa94DE7a4656D787667C749f7E1223D71E9FD88\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 21\n    }\n  }, t('earnPage.getCoverNexusMutual'))), /*#__PURE__*/React.createElement(ExternalLink, {\n    style: {\n      color: 'white',\n      textDecoration: 'underline'\n    },\n    href: \"https://app.insurace.io/Insurance/BuyCovers?referrer=565928487188065888397039055593264600345483712698\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 21\n    }\n  }, t('earnPage.getInsuranceCoverage'))))))), /*#__PURE__*/React.createElement(CardBGImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardNoise, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 11\n    }\n  })), version === '0' && /*#__PURE__*/React.createElement(DataCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardNoise, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 19\n    }\n  }, t('earnPage.importantUpdate'))), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 19\n    }\n  }, t('earnPage.pangolinGovernanceProposalResult'))), version !== '0' && /*#__PURE__*/React.createElement(NavLink, {\n    style: {\n      color: 'white',\n      textDecoration: 'underline'\n    },\n    to: \"/png/0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 21\n    }\n  }, t('earnPage.oldPngPools'))))))), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"lg\",\n    style: {\n      width: '100%',\n      maxWidth: '720px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DataRow, {\n    style: {\n      alignItems: 'baseline'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.mediumHeader, {\n    style: {\n      marginTop: '0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 11\n    }\n  }, t('earnPage.participatingPools'))), /*#__PURE__*/React.createElement(PoolSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 9\n    }\n  }, stakingRewardsExist && (stakingInfos === null || stakingInfos === void 0 ? void 0 : stakingInfos.length) === 0 || poolCardsLoading ? /*#__PURE__*/React.createElement(Loader, {\n    style: {\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 13\n    }\n  }) : (!stakingRewardsExist || (poolCards === null || poolCards === void 0 ? void 0 : poolCards.length) === 0) && !poolCardsLoading ? t('earnPage.noActiveRewards') : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SearchInput, {\n    type: \"text\",\n    id: \"token-search-input\",\n    placeholder: t('searchModal.tokenName'),\n    value: searchQuery,\n    onChange: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SortSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 17\n    }\n  }, \"Sort by :\", ' ', /*#__PURE__*/React.createElement(SortFieldContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 19\n    }\n  }, getSortField('Liquidity', SortingType.totalStakedInUsd, sortBy, setSortBy), \" |\", ' '), getSortField('APR', SortingType.totalApr, sortBy, setSortBy)), /*#__PURE__*/React.createElement(SuperFarmToggle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 19\n    }\n  }, \"Super Farms\"), /*#__PURE__*/React.createElement(Toggle, {\n    id: \"toggle-expert-mode-button\",\n    isActive: showSuperFarm,\n    toggle: toggleSuperFarm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 19\n    }\n  }))), filteredPoolCards))));\n};\n\nexport default Earn;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Earn/Earn.tsx"],"names":["React","useCallback","useEffect","useState","AutoColumn","ChevronDown","ChevronUp","styled","DOUBLE_SIDE_STAKING_REWARDS_INFO","TYPE","ExternalLink","DoubleSidePoolCard","NavLink","AutoRow","RowBetween","CardSection","DataCard","CardNoise","CardBGImage","Loader","useChainId","useTranslation","SearchInput","useDebounce","BIG_INT_ZERO","PANGOLIN_API_BASE_URL","Toggle","PageWrapper","TopSection","FlexDiv","div","PoolSection","DataRow","theme","mediaWidth","upToSmall","SortSection","SortField","SortFieldContainer","Actions","SuperFarmToggle","SortingType","Earn","version","stakingInfos","poolMap","chainId","t","poolCardsLoading","setPoolCardsLoading","poolCards","setPoolCards","filteredPoolCards","setFilteredPoolCards","searchQuery","setSearchQuery","sortBy","setSortBy","field","desc","debouncedSearchQuery","showSuperFarm","setShowSuperFarm","stakingInfoData","setStakingInfoData","handleSearch","event","target","value","trim","toUpperCase","filtered","filter","card","props","stakingInfo","tokens","symbol","includes","console","log","sortedFarms","sort","info_a","info_b","totalStakedInUsd","greaterThan","lessThan","totalApr","stakingApr","swapFeeApr","finalFarms","nonSuperFarms","item","rewardTokensAddress","length","stakedAmount","stakedFarms","superFarms","map","index","Promise","all","info","isPeriodFinished","fetch","totalStakedAmount","token","address","then","res","json","Number","combinedApr","stakingRewardAddress","updatedStakingInfos","stakingRewardsExist","Boolean","getSortField","label","toggleSuperFarm","prev","color","textDecoration","marginRight","width","maxWidth","alignItems","marginTop","margin"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\nimport { AutoColumn } from '../../components/Column'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport styled from 'styled-components'\nimport { DoubleSideStakingInfo } from '../../state/stake/hooks'\nimport { DOUBLE_SIDE_STAKING_REWARDS_INFO } from '../../state/stake/doubleSideConfig'\nimport { TYPE, ExternalLink } from '../../theme'\nimport DoubleSidePoolCard from '../../components/earn/DoubleSidePoolCard'\nimport { NavLink } from 'react-router-dom'\nimport { AutoRow, RowBetween } from '../../components/Row'\nimport { CardSection, DataCard, CardNoise, CardBGImage } from '../../components/earn/styled'\nimport Loader from '../../components/Loader'\nimport { useChainId } from '../../hooks'\nimport { useTranslation } from 'react-i18next'\nimport { SearchInput } from '../../components/SearchModal/styleds'\nimport useDebounce from '../../hooks/useDebounce'\nimport { BIG_INT_ZERO, PANGOLIN_API_BASE_URL } from '../../constants'\nimport Toggle from '../../components/Toggle'\n\nconst PageWrapper = styled(AutoColumn)`\n  max-width: 640px;\n  width: 100%;\n`\n\nconst TopSection = styled(AutoColumn)`\n  max-width: 720px;\n  width: 100%;\n`\n\nconst FlexDiv = styled.div`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n`\n\nconst PoolSection = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  column-gap: 10px;\n  row-gap: 15px;\n  width: 100%;\n  justify-self: center;\n`\n\nconst DataRow = styled(RowBetween)`\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n   flex-direction: column;\n `};\n`\n\nconst SortSection = styled.div`\n  display: flex;\n`\nconst SortField = styled.div`\n  margin: 0px 5px 0px 5px;\n  font-weight: 400;\n  font-size: 14px;\n  cursor: pointer;\n  display: flex;\n  line-height: 20px;\n`\n\nconst SortFieldContainer = styled.div`\n  display: flex;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n   display: none;\n `};\n`\n\nconst Actions = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n   flex-direction: column;\n `};\n`\n\nconst SuperFarmToggle = styled.div`\n  display: flex;\n  align-items: center;\n\n  .title {\n    margin-right: 10px;\n  }\n`\n\nenum SortingType {\n  totalStakedInUsd = 'totalStakedInUsd',\n  totalApr = 'totalApr'\n}\n\ntype ExtendedDoubleSideStakingInfo = DoubleSideStakingInfo & { stakingApr: number; swapFeeApr: number }\n\nexport interface EarnProps {\n  version: string\n  stakingInfos: Array<DoubleSideStakingInfo>\n  poolMap?: { [key: string]: number }\n}\n\nconst Earn: React.FC<EarnProps> = ({ version, stakingInfos, poolMap }) => {\n  const chainId = useChainId()\n  const { t } = useTranslation()\n\n  const [poolCardsLoading, setPoolCardsLoading] = useState(false)\n  const [poolCards, setPoolCards] = useState<any[]>()\n  const [filteredPoolCards, setFilteredPoolCards] = useState<any[]>()\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const [sortBy, setSortBy] = useState<any>({ field: '', desc: true })\n  const debouncedSearchQuery = useDebounce(searchQuery, 250)\n  const [showSuperFarm, setShowSuperFarm] = useState(true)\n  const [stakingInfoData, setStakingInfoData] = useState(stakingInfos as ExtendedDoubleSideStakingInfo[])\n\n  const handleSearch = useCallback(event => {\n    setSearchQuery(event.target.value.trim().toUpperCase())\n  }, [])\n\n  useEffect(() => {\n    const filtered = poolCards?.filter(\n      card =>\n        card.props.stakingInfo.tokens[0].symbol.toUpperCase().includes(debouncedSearchQuery) ||\n        card.props.stakingInfo.tokens[1].symbol.toUpperCase().includes(debouncedSearchQuery)\n    )\n    setFilteredPoolCards(filtered)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [poolCards, debouncedSearchQuery])\n\n  useEffect(() => {\n    console.log('loading farms...')\n    const sortedFarms = stakingInfoData.sort(function(info_a, info_b) {\n      if (sortBy.field === SortingType.totalStakedInUsd) {\n        if (sortBy.desc) {\n          return info_a.totalStakedInUsd?.greaterThan(info_b.totalStakedInUsd ?? BIG_INT_ZERO) ? -1 : 1\n        } else {\n          return info_a.totalStakedInUsd?.lessThan(info_b.totalStakedInUsd ?? BIG_INT_ZERO) ? -1 : 1\n        }\n      }\n\n      if (sortBy.field === SortingType.totalApr) {\n        if (sortBy.desc) {\n          return info_a.stakingApr + info_a.swapFeeApr > info_b.stakingApr + info_b.swapFeeApr ? -1 : 1\n        } else {\n          return info_a.stakingApr + info_a.swapFeeApr < info_b.stakingApr + info_b.swapFeeApr ? -1 : 1\n        }\n      }\n      return 0\n    })\n    let finalFarms = sortedFarms\n    if (showSuperFarm) {\n      // if super farms toggled on then keep all super farms on top\n      const nonSuperFarms = sortedFarms.filter(\n        item => !item.rewardTokensAddress?.length && !item.stakedAmount.greaterThan(BIG_INT_ZERO)\n      )\n      const stakedFarms = sortedFarms.filter(item => item.stakedAmount.greaterThan(BIG_INT_ZERO))\n      const superFarms = sortedFarms.filter(\n        item => (item?.rewardTokensAddress?.length || 0) > 0 && !item.stakedAmount.greaterThan(BIG_INT_ZERO)\n      )\n      finalFarms = [...stakedFarms, ...superFarms, ...nonSuperFarms]\n    }\n    const poolCards = finalFarms.map((stakingInfo, index) => {\n      return (\n        <DoubleSidePoolCard\n          swapFeeApr={stakingInfo.swapFeeApr}\n          stakingApr={stakingInfo.stakingApr}\n          key={index}\n          stakingInfo={stakingInfo}\n          version={version}\n        />\n      )\n    })\n    setPoolCards(poolCards)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sortBy?.field, sortBy?.desc, showSuperFarm, stakingInfoData])\n\n  useEffect(() => {\n    setPoolCardsLoading(true)\n    if (stakingInfos?.length > 0) {\n      Promise.all(\n        stakingInfos\n          .filter(function(info) {\n            // Only include pools that are live or require a migration\n            return !info.isPeriodFinished || info.stakedAmount.greaterThan(BIG_INT_ZERO)\n          })\n          .sort(function(info_a, info_b) {\n            // only first has ended\n            if (info_a.isPeriodFinished && !info_b.isPeriodFinished) return 1\n            // only second has ended\n            if (!info_a.isPeriodFinished && info_b.isPeriodFinished) return -1\n            // greater stake in avax comes first\n            return info_a.totalStakedInUsd?.greaterThan(info_b.totalStakedInUsd ?? BIG_INT_ZERO) ? -1 : 1\n          })\n          .sort(function(info_a, info_b) {\n            // only the first is being staked, so we should bring the first up\n            if (info_a.stakedAmount.greaterThan(BIG_INT_ZERO) && !info_b.stakedAmount.greaterThan(BIG_INT_ZERO))\n              return -1\n            // only the second is being staked, so we should bring the first down\n            if (!info_a.stakedAmount.greaterThan(BIG_INT_ZERO) && info_b.stakedAmount.greaterThan(BIG_INT_ZERO))\n              return 1\n            return 0\n          })\n          // TODO: update here api call without staking reward address\n          .map(stakingInfo => {\n            if (poolMap) {\n              return fetch(\n                `${PANGOLIN_API_BASE_URL}/pangolin/apr2/${poolMap[stakingInfo.totalStakedAmount.token.address]}`\n              )\n                .then(res => res.json())\n                .then(res => ({\n                  swapFeeApr: Number(res.swapFeeApr),\n                  stakingApr: Number(res.stakingApr),\n                  combinedApr: Number(res.combinedApr),\n                  ...stakingInfo\n                }))\n            } else {\n              return fetch(`${PANGOLIN_API_BASE_URL}/pangolin/apr/${stakingInfo.stakingRewardAddress}`)\n                .then(res => res.json())\n                .then(res => ({\n                  swapFeeApr: Number(res.swapFeeApr),\n                  stakingApr: Number(res.stakingApr),\n                  combinedApr: Number(res.combinedApr),\n                  ...stakingInfo\n                }))\n            }\n          })\n      ).then(updatedStakingInfos => {\n        const poolCards = updatedStakingInfos.map((stakingInfo, index) => {\n          return (\n            <DoubleSidePoolCard\n              // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n              // @ts-ignore\n              swapFeeApr={stakingInfo.swapFeeApr}\n              // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n              // @ts-ignore\n              stakingApr={stakingInfo.stakingApr}\n              key={index}\n              stakingInfo={stakingInfo}\n              version={version}\n            />\n          )\n        })\n        setStakingInfoData(updatedStakingInfos)\n        setPoolCards(poolCards)\n        setPoolCardsLoading(false)\n      })\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [stakingInfos?.length, version])\n\n  const stakingRewardsExist = Boolean(\n    typeof chainId === 'number' && (DOUBLE_SIDE_STAKING_REWARDS_INFO[chainId]?.length ?? 0) > 0\n  )\n  /* eslint-disable @typescript-eslint/ban-types */\n  const getSortField = (label: string, field: string, sortBy: any, setSortBy: Function) => {\n    return (\n      <SortField\n        onClick={() => {\n          const desc = sortBy?.field === field ? !sortBy?.desc : true\n          setSortBy({ field, desc })\n        }}\n      >\n        {label}\n        {sortBy?.field === field && (sortBy?.desc ? <ChevronDown size=\"16\" /> : <ChevronUp size=\"16\" />)}\n      </SortField>\n    )\n  }\n\n  const toggleSuperFarm = () => {\n    setShowSuperFarm(prev => !prev)\n  }\n\n  return (\n    <PageWrapper gap=\"lg\" justify=\"center\">\n      <TopSection gap=\"md\">\n        <DataCard>\n          <CardBGImage />\n          <CardNoise />\n          <CardSection>\n            <AutoColumn gap=\"md\">\n              <RowBetween>\n                <TYPE.white fontWeight={600}>{t('earnPage.pangolinLiquidityMining')}</TYPE.white>\n              </RowBetween>\n              <RowBetween>\n                <TYPE.white fontSize={14}>{t('earnPage.depositPangolinLiquidity')}</TYPE.white>\n              </RowBetween>{' '}\n              <AutoRow justify=\"space-between\">\n                <ExternalLink\n                  style={{ color: 'white', textDecoration: 'underline' }}\n                  href=\"https://pangolin.exchange/litepaper\"\n                  target=\"_blank\"\n                >\n                  <TYPE.white fontSize={14}>{t('earnPage.readMoreAboutPng')}</TYPE.white>\n                </ExternalLink>\n                <FlexDiv>\n                  <ExternalLink\n                    style={{ color: 'white', textDecoration: 'underline', marginRight: 10 }}\n                    href=\"https://app.nexusmutual.io/cover/buy/get-quote?address=0xefa94DE7a4656D787667C749f7E1223D71E9FD88\"\n                    target=\"_blank\"\n                  >\n                    <TYPE.white fontSize={14}>{t('earnPage.getCoverNexusMutual')}</TYPE.white>\n                  </ExternalLink>\n                  <ExternalLink\n                    style={{ color: 'white', textDecoration: 'underline' }}\n                    href=\"https://app.insurace.io/Insurance/BuyCovers?referrer=565928487188065888397039055593264600345483712698\"\n                    target=\"_blank\"\n                  >\n                    <TYPE.white fontSize={14}>{t('earnPage.getInsuranceCoverage')}</TYPE.white>\n                  </ExternalLink>\n                </FlexDiv>\n              </AutoRow>\n            </AutoColumn>\n          </CardSection>\n          <CardBGImage />\n          <CardNoise />\n        </DataCard>\n        {version === '0' && (\n          <DataCard>\n            <CardNoise />\n            <CardSection>\n              <AutoColumn gap=\"md\">\n                <RowBetween>\n                  <TYPE.white fontWeight={600}>{t('earnPage.importantUpdate')}</TYPE.white>\n                </RowBetween>\n                <RowBetween>\n                  <TYPE.white fontSize={14}>{t('earnPage.pangolinGovernanceProposalResult')}</TYPE.white>\n                </RowBetween>\n                {version !== '0' && (\n                  <NavLink style={{ color: 'white', textDecoration: 'underline' }} to=\"/png/0\">\n                    <TYPE.white fontSize={14}>{t('earnPage.oldPngPools')}</TYPE.white>\n                  </NavLink>\n                )}\n              </AutoColumn>\n            </CardSection>\n          </DataCard>\n        )}\n      </TopSection>\n\n      <AutoColumn gap=\"lg\" style={{ width: '100%', maxWidth: '720px' }}>\n        <DataRow style={{ alignItems: 'baseline' }}>\n          <TYPE.mediumHeader style={{ marginTop: '0.5rem' }}>{t('earnPage.participatingPools')}</TYPE.mediumHeader>\n        </DataRow>\n\n        <PoolSection>\n          {(stakingRewardsExist && stakingInfos?.length === 0) || poolCardsLoading ? (\n            <Loader style={{ margin: 'auto' }} />\n          ) : (!stakingRewardsExist || poolCards?.length === 0) && !poolCardsLoading ? (\n            t('earnPage.noActiveRewards')\n          ) : (\n            <>\n              <SearchInput\n                type=\"text\"\n                id=\"token-search-input\"\n                placeholder={t('searchModal.tokenName')}\n                value={searchQuery}\n                onChange={handleSearch}\n              />\n              <Actions>\n                <SortSection>\n                  Sort by :{' '}\n                  <SortFieldContainer>\n                    {getSortField('Liquidity', SortingType.totalStakedInUsd, sortBy, setSortBy)} |{' '}\n                  </SortFieldContainer>\n                  {getSortField('APR', SortingType.totalApr, sortBy, setSortBy)}\n                </SortSection>\n                <SuperFarmToggle>\n                  <span className=\"title\">Super Farms</span>\n                  <Toggle id=\"toggle-expert-mode-button\" isActive={showSuperFarm} toggle={toggleSuperFarm} />\n                </SuperFarmToggle>\n              </Actions>\n\n              {filteredPoolCards}\n            </>\n          )}\n        </PoolSection>\n      </AutoColumn>\n    </PageWrapper>\n  )\n}\n\nexport default Earn\n"]},"metadata":{},"sourceType":"module"}