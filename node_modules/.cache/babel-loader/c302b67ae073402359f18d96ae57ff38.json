{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/Beta/DropdownMenu/index.tsx\";\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport { useOnClickOutside } from 'src/hooks/useOnClickOutside';\nimport { ChevronDown } from 'react-feather';\nimport { StyledMenu, StyledMenuButton, NarrowMenuFlyout, MenuLink } from './styleds';\n\nconst DropdownMenu = _ref => {\n  let {\n    value,\n    onSelect,\n    title,\n    options,\n    height\n  } = _ref;\n  const node = useRef();\n  const [open, setOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState('');\n  const handleClose = useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n  useOnClickOutside(node, open ? handleClose : undefined);\n  useEffect(() => {\n    if (value !== '') {\n      const matchOption = (options || []).find(t => t.value === value);\n      setSelectedOption((matchOption === null || matchOption === void 0 ? void 0 : matchOption.label) || '');\n    }\n  }, [value, options]);\n  return /*#__PURE__*/React.createElement(StyledMenu, {\n    ref: node,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledMenuButton, {\n    onClick: () => setOpen(!open),\n    height: height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, selectedOption ? selectedOption : title, \" \", /*#__PURE__*/React.createElement(ChevronDown, {\n    size: \"16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 51\n    }\n  })), open && /*#__PURE__*/React.createElement(NarrowMenuFlyout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, (options || []).map((option, i) => /*#__PURE__*/React.createElement(MenuLink, {\n    key: i,\n    onClick: () => onSelect(option.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, option.label))));\n};\n\nexport default DropdownMenu;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/Beta/DropdownMenu/index.tsx"],"names":["React","useState","useRef","useCallback","useEffect","useOnClickOutside","ChevronDown","StyledMenu","StyledMenuButton","NarrowMenuFlyout","MenuLink","DropdownMenu","value","onSelect","title","options","height","node","open","setOpen","selectedOption","setSelectedOption","handleClose","undefined","matchOption","find","t","label","map","option","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,WAAlC,EAA+CC,SAA/C,QAAgE,OAAhE;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,UAAT,EAAqBC,gBAArB,EAAuCC,gBAAvC,EAAyDC,QAAzD,QAAyE,WAAzE;;AAUA,MAAMC,YAA6B,GAAG,QAAiD;AAAA,MAAhD;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA,OAA1B;AAAmCC,IAAAA;AAAnC,GAAgD;AACrF,QAAMC,IAAI,GAAGf,MAAM,EAAnB;AAEA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAU,KAAV,CAAhC;AACA,QAAM,CAACmB,cAAD,EAAiBC,iBAAjB,IAAsCpB,QAAQ,CAAS,EAAT,CAApD;AAEA,QAAMqB,WAAW,GAAGnB,WAAW,CAAC,MAAM;AACpCgB,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAF8B,EAE5B,CAACA,OAAD,CAF4B,CAA/B;AAIAd,EAAAA,iBAAiB,CAACY,IAAD,EAAOC,IAAI,GAAGI,WAAH,GAAiBC,SAA5B,CAAjB;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,KAAK,KAAK,EAAd,EAAkB;AAChB,YAAMY,WAAW,GAAG,CAACT,OAAO,IAAI,EAAZ,EAAgBU,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACd,KAAF,KAAYA,KAAtC,CAApB;AAEAS,MAAAA,iBAAiB,CAAC,CAAAG,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEG,KAAb,KAAsB,EAAvB,CAAjB;AACD;AACF,GANQ,EAMN,CAACf,KAAD,EAAQG,OAAR,CANM,CAAT;AAQA,sBACE,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE,MAAME,OAAO,CAAC,CAACD,IAAF,CAAxC;AAAiD,IAAA,MAAM,EAAEF,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,cAAc,GAAGA,cAAH,GAAoBN,KADrC,oBAC4C,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD5C,CADF,EAKGI,IAAI,iBACH,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACH,OAAO,IAAI,EAAZ,EAAgBa,GAAhB,CAAoB,CAACC,MAAD,EAASC,CAAT,kBACnB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,CAAf;AAAkB,IAAA,OAAO,EAAE,MAAMjB,QAAQ,CAACgB,MAAM,CAACjB,KAAR,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGiB,MAAM,CAACF,KADV,CADD,CADH,CANJ,CADF;AAiBD,CArCD;;AAuCA,eAAehB,YAAf","sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from 'react'\nimport { useOnClickOutside } from 'src/hooks/useOnClickOutside'\nimport { ChevronDown } from 'react-feather'\nimport { StyledMenu, StyledMenuButton, NarrowMenuFlyout, MenuLink } from './styleds'\n\ntype Props = {\n  value: string\n  onSelect: (value: string) => void\n  title?: string\n  options: Array<{ label: string; value: any }>\n  height?: string\n}\n\nconst DropdownMenu: React.FC<Props> = ({ value, onSelect, title, options, height }) => {\n  const node = useRef<HTMLDivElement>()\n\n  const [open, setOpen] = useState<boolean>(false)\n  const [selectedOption, setSelectedOption] = useState<string>('')\n\n  const handleClose = useCallback(() => {\n    setOpen(false)\n  }, [setOpen])\n\n  useOnClickOutside(node, open ? handleClose : undefined)\n\n  useEffect(() => {\n    if (value !== '') {\n      const matchOption = (options || []).find(t => t.value === value)\n\n      setSelectedOption(matchOption?.label || '')\n    }\n  }, [value, options])\n\n  return (\n    <StyledMenu ref={node as any}>\n      <StyledMenuButton onClick={() => setOpen(!open)} height={height}>\n        {selectedOption ? selectedOption : title} <ChevronDown size=\"16\" />\n      </StyledMenuButton>\n\n      {open && (\n        <NarrowMenuFlyout>\n          {(options || []).map((option, i) => (\n            <MenuLink key={i} onClick={() => onSelect(option.value)}>\n              {option.label}\n            </MenuLink>\n          ))}\n        </NarrowMenuFlyout>\n      )}\n    </StyledMenu>\n  )\n}\n\nexport default DropdownMenu\n"]},"metadata":{},"sourceType":"module"}