{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/MigrationModal/Unstake/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Wrapper } from './styleds';\nimport { Box, Button } from '@pangolindex/components';\nimport { JSBI } from '@pangolindex/sdk';\nimport PoolInfo from '../PoolInfo';\nimport { tryParseAmount } from '../../../state/swap/hooks';\nimport { useStakingContract } from '../../../hooks/useContract';\nimport { useTransactionAdder } from '../../../state/transactions/hooks';\nimport { useTranslation } from 'react-i18next';\nimport { useActiveWeb3React } from '../../../hooks';\nimport { RowBetween } from '../../Row';\nimport { useChainId } from 'src/hooks';\n\nconst Unstake = _ref => {\n  var _Object$values, _Object$values$choose, _Object$values2, _Object$values2$choos;\n\n  let {\n    allChoosePool,\n    goNext,\n    goBack,\n    choosePoolIndex\n  } = _ref;\n  const {\n    account\n  } = useActiveWeb3React();\n  const chainId = useChainId();\n  const {\n    t\n  } = useTranslation();\n  const [attempting, setAttempting] = useState(false);\n  const [isValidAmount, setIsValidAmount] = useState(false);\n  const pair = (_Object$values = Object.values(allChoosePool)) === null || _Object$values === void 0 ? void 0 : (_Object$values$choose = _Object$values[choosePoolIndex]) === null || _Object$values$choose === void 0 ? void 0 : _Object$values$choose.pair;\n  const stakingInfo = (_Object$values2 = Object.values(allChoosePool)) === null || _Object$values2 === void 0 ? void 0 : (_Object$values2$choos = _Object$values2[choosePoolIndex]) === null || _Object$values2$choos === void 0 ? void 0 : _Object$values2$choos.staking;\n  const [unStakingAmount, setUnstakingAmount] = useState('');\n  const [stepIndex, setStepIndex] = useState(4);\n  useEffect(() => {\n    var _stakingInfo$stakedAm;\n\n    setUnstakingAmount(stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm === void 0 ? void 0 : _stakingInfo$stakedAm.toExact());\n    setStepIndex(4);\n    setAttempting(false); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [choosePoolIndex, stakingInfo]);\n  useEffect(() => {\n    var _stakingInfo$stakedAm2;\n\n    const stakingToken = stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm2 = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm2 === void 0 ? void 0 : _stakingInfo$stakedAm2.token;\n    const parsedInput = tryParseAmount(chainId, unStakingAmount, stakingToken);\n\n    if (parsedInput && (stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.stakedAmount) && JSBI.lessThanOrEqual(parsedInput.raw, stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.stakedAmount.raw) && JSBI.greaterThan(parsedInput.raw, JSBI.BigInt(0))) {\n      setIsValidAmount(true);\n    } else {\n      setIsValidAmount(false);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [unStakingAmount]);\n\n  const onChangeAmount = value => {\n    var _stakingInfo$stakedAm3;\n\n    if (value === (stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm3 = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm3 === void 0 ? void 0 : _stakingInfo$stakedAm3.toExact())) {\n      setStepIndex(4);\n    } else {\n      setStepIndex(0);\n    }\n\n    setUnstakingAmount(value);\n  };\n\n  const onChangeDot = value => {\n    setStepIndex(value);\n\n    if (value === 4) {\n      var _stakingInfo$stakedAm4;\n\n      setUnstakingAmount(stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm4 = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm4 === void 0 ? void 0 : _stakingInfo$stakedAm4.toExact());\n    } else {\n      const newAmount = stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.stakedAmount.multiply(JSBI.BigInt(value * 25)).divide(JSBI.BigInt(100));\n      setUnstakingAmount(newAmount === null || newAmount === void 0 ? void 0 : newAmount.toSignificant(6));\n    }\n  };\n\n  const onMax = () => {\n    var _stakingInfo$stakedAm5;\n\n    setStepIndex(4);\n    setUnstakingAmount(stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm5 = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm5 === void 0 ? void 0 : _stakingInfo$stakedAm5.toExact());\n  }; // monitor call to help UI loading state\n\n\n  const addTransaction = useTransactionAdder();\n  const stakingContract = useStakingContract(stakingInfo.stakingRewardAddress);\n\n  async function onWithdraw() {\n    var _stakingInfo$stakedAm6;\n\n    if (stakingContract && (stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm6 = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm6 === void 0 ? void 0 : _stakingInfo$stakedAm6.greaterThan('0'))) {\n      setAttempting(true);\n      await stakingContract.exit().then(response => {\n        addTransaction(response, {\n          summary: t('earn.withdrawDepositedLiquidity')\n        });\n        goNext();\n      }).catch(error => console.log(error)).finally(() => setAttempting(false));\n    }\n  }\n\n  let error;\n\n  if (!account) {\n    error = t('earn.connectWallet');\n  }\n\n  if (!(stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.stakedAmount)) {\n    var _error;\n\n    error = (_error = error) !== null && _error !== void 0 ? _error : t('earn.enterAmount');\n  }\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PoolInfo, {\n    pair: pair,\n    type: \"unstake\",\n    stakingInfo: stakingInfo,\n    stepIndex: stepIndex,\n    onChangeDot: onChangeDot,\n    amount: unStakingAmount,\n    onChangeAmount: onChangeAmount,\n    onMax: onMax,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, choosePoolIndex === 0 && /*#__PURE__*/React.createElement(Box, {\n    mr: \"5px\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline\",\n    onClick: goBack,\n    isDisabled: !!error || attempting,\n    loading: attempting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, t('migratePage.back'))), /*#__PURE__*/React.createElement(Box, {\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: onWithdraw,\n    loading: attempting,\n    isDisabled: !!error || attempting || !isValidAmount,\n    loadingText: t('migratePage.loading'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, t('migratePage.unstake'))))));\n};\n\nexport default Unstake;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/MigrationModal/Unstake/index.tsx"],"names":["React","useState","useEffect","Wrapper","Box","Button","JSBI","PoolInfo","tryParseAmount","useStakingContract","useTransactionAdder","useTranslation","useActiveWeb3React","RowBetween","useChainId","Unstake","allChoosePool","goNext","goBack","choosePoolIndex","account","chainId","t","attempting","setAttempting","isValidAmount","setIsValidAmount","pair","Object","values","stakingInfo","staking","unStakingAmount","setUnstakingAmount","stepIndex","setStepIndex","stakedAmount","toExact","stakingToken","token","parsedInput","lessThanOrEqual","raw","greaterThan","BigInt","onChangeAmount","value","onChangeDot","newAmount","multiply","divide","toSignificant","onMax","addTransaction","stakingContract","stakingRewardAddress","onWithdraw","exit","then","response","summary","catch","error","console","log","finally"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Wrapper } from './styleds'\nimport { Box, Button } from '@pangolindex/components'\nimport { Pair, JSBI, TokenAmount } from '@pangolindex/sdk'\nimport PoolInfo from '../PoolInfo'\nimport { StakingInfo } from '../../../state/stake/hooks'\nimport { tryParseAmount } from '../../../state/swap/hooks'\nimport { useStakingContract } from '../../../hooks/useContract'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { useTransactionAdder } from '../../../state/transactions/hooks'\nimport { useTranslation } from 'react-i18next'\nimport { useActiveWeb3React } from '../../../hooks'\nimport { RowBetween } from '../../Row'\nimport { useChainId } from 'src/hooks'\n\nexport interface UnstakeProps {\n  allChoosePool: { [address: string]: { pair: Pair; staking: StakingInfo } }\n  goNext: () => void\n  goBack: () => void\n  choosePoolIndex: number\n}\n\nconst Unstake = ({ allChoosePool, goNext, goBack, choosePoolIndex }: UnstakeProps) => {\n  const { account } = useActiveWeb3React()\n  const chainId = useChainId()\n  const { t } = useTranslation()\n  const [attempting, setAttempting] = useState(false as boolean)\n  const [isValidAmount, setIsValidAmount] = useState(false as boolean)\n\n  const pair = Object.values(allChoosePool)?.[choosePoolIndex]?.pair\n  const stakingInfo = Object.values(allChoosePool)?.[choosePoolIndex]?.staking\n\n  const [unStakingAmount, setUnstakingAmount] = useState('')\n  const [stepIndex, setStepIndex] = useState(4)\n\n  useEffect(() => {\n    setUnstakingAmount(stakingInfo?.stakedAmount?.toExact())\n    setStepIndex(4)\n    setAttempting(false)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [choosePoolIndex, stakingInfo])\n\n  useEffect(() => {\n    const stakingToken = stakingInfo?.stakedAmount?.token\n    const parsedInput = tryParseAmount(chainId, unStakingAmount, stakingToken) as TokenAmount\n\n    if (\n      parsedInput &&\n      stakingInfo?.stakedAmount &&\n      JSBI.lessThanOrEqual(parsedInput.raw, stakingInfo?.stakedAmount.raw) &&\n      JSBI.greaterThan(parsedInput.raw, JSBI.BigInt(0))\n    ) {\n      setIsValidAmount(true)\n    } else {\n      setIsValidAmount(false)\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [unStakingAmount])\n\n  const onChangeAmount = (value: string) => {\n    if (value === stakingInfo?.stakedAmount?.toExact()) {\n      setStepIndex(4)\n    } else {\n      setStepIndex(0)\n    }\n    setUnstakingAmount(value)\n  }\n\n  const onChangeDot = (value: number) => {\n    setStepIndex(value)\n    if (value === 4) {\n      setUnstakingAmount(stakingInfo?.stakedAmount?.toExact())\n    } else {\n      const newAmount = stakingInfo?.stakedAmount\n        .multiply(JSBI.BigInt(value * 25))\n        .divide(JSBI.BigInt(100)) as TokenAmount\n      setUnstakingAmount(newAmount?.toSignificant(6))\n    }\n  }\n\n  const onMax = () => {\n    setStepIndex(4)\n    setUnstakingAmount(stakingInfo?.stakedAmount?.toExact())\n  }\n\n  // monitor call to help UI loading state\n  const addTransaction = useTransactionAdder()\n  const stakingContract = useStakingContract(stakingInfo.stakingRewardAddress)\n\n  async function onWithdraw() {\n    if (stakingContract && stakingInfo?.stakedAmount?.greaterThan('0')) {\n      setAttempting(true)\n      await stakingContract\n        .exit()\n        .then((response: TransactionResponse) => {\n          addTransaction(response, {\n            summary: t('earn.withdrawDepositedLiquidity')\n          })\n          goNext()\n        })\n        .catch((error: any) => console.log(error))\n        .finally(() => setAttempting(false))\n    }\n  }\n\n  let error: string | undefined\n  if (!account) {\n    error = t('earn.connectWallet')\n  }\n  if (!stakingInfo?.stakedAmount) {\n    error = error ?? t('earn.enterAmount')\n  }\n\n  return (\n    <Wrapper>\n      <PoolInfo\n        pair={pair}\n        type=\"unstake\"\n        stakingInfo={stakingInfo}\n        stepIndex={stepIndex}\n        onChangeDot={onChangeDot}\n        amount={unStakingAmount}\n        onChangeAmount={onChangeAmount}\n        onMax={onMax}\n      />\n\n      <Box mt={10}>\n        <RowBetween>\n          {choosePoolIndex === 0 && (\n            <Box mr=\"5px\" width=\"100%\">\n              <Button variant=\"outline\" onClick={goBack} isDisabled={!!error || attempting} loading={attempting}>\n                {t('migratePage.back')}\n              </Button>\n            </Box>\n          )}\n\n          <Box width=\"100%\">\n            <Button\n              variant=\"primary\"\n              onClick={onWithdraw}\n              loading={attempting}\n              isDisabled={!!error || attempting || !isValidAmount}\n              loadingText={t('migratePage.loading')}\n            >\n              {t('migratePage.unstake')}\n            </Button>\n          </Box>\n        </RowBetween>\n      </Box>\n    </Wrapper>\n  )\n}\nexport default Unstake\n"]},"metadata":{},"sourceType":"module"}