{"ast":null,"code":"import { CurrencyAmount, CAVAX, JSBI } from '@pangolindex/sdk';\nimport { MIN_ETH } from '../constants';\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(chainId, currencyAmount) {\n  if (!currencyAmount) return undefined;\n\n  if (chainId && currencyAmount.currency === CAVAX[chainId]) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_ETH)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_ETH), chainId);\n    } else {\n      return CurrencyAmount.ether(JSBI.BigInt(0), chainId);\n    }\n  }\n\n  return currencyAmount;\n}\nexport function galetoMaxAmountSpend(chainId, currencyAmount) {\n  if (!currencyAmount) return undefined;\n\n  if (chainId && currencyAmount.currency === CAVAX[chainId]) {\n    if (JSBI.greaterThan(currencyAmount.numerator, MIN_ETH)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.numerator, MIN_ETH), chainId);\n    } else {\n      return CurrencyAmount.ether(JSBI.BigInt(0), chainId);\n    }\n  }\n\n  return currencyAmount;\n}","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/utils/maxAmountSpend.ts"],"names":["CurrencyAmount","CAVAX","JSBI","MIN_ETH","maxAmountSpend","chainId","currencyAmount","undefined","currency","greaterThan","raw","ether","subtract","BigInt","galetoMaxAmountSpend","numerator"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,KAAzB,EAAgCC,IAAhC,QAAqD,kBAArD;AACA,SAASC,OAAT,QAAwB,cAAxB;;AAGA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAT,CAAwBC,OAAxB,EAA0CC,cAA1C,EAAuG;AAC5G,MAAI,CAACA,cAAL,EAAqB,OAAOC,SAAP;;AACrB,MAAIF,OAAO,IAAIC,cAAc,CAACE,QAAf,KAA4BP,KAAK,CAACI,OAAD,CAAhD,EAA2D;AACzD,QAAIH,IAAI,CAACO,WAAL,CAAiBH,cAAc,CAACI,GAAhC,EAAqCP,OAArC,CAAJ,EAAmD;AACjD,aAAOH,cAAc,CAACW,KAAf,CAAqBT,IAAI,CAACU,QAAL,CAAcN,cAAc,CAACI,GAA7B,EAAkCP,OAAlC,CAArB,EAAiEE,OAAjE,CAAP;AACD,KAFD,MAEO;AACL,aAAOL,cAAc,CAACW,KAAf,CAAqBT,IAAI,CAACW,MAAL,CAAY,CAAZ,CAArB,EAAqCR,OAArC,CAAP;AACD;AACF;;AACD,SAAOC,cAAP;AACD;AAED,OAAO,SAASQ,oBAAT,CAA8BT,OAA9B,EAAgDC,cAAhD,EAA+G;AACpH,MAAI,CAACA,cAAL,EAAqB,OAAOC,SAAP;;AACrB,MAAIF,OAAO,IAAIC,cAAc,CAACE,QAAf,KAA4BP,KAAK,CAACI,OAAD,CAAhD,EAA2D;AACzD,QAAIH,IAAI,CAACO,WAAL,CAAiBH,cAAc,CAACS,SAAhC,EAA2CZ,OAA3C,CAAJ,EAAyD;AACvD,aAAOH,cAAc,CAACW,KAAf,CAAqBT,IAAI,CAACU,QAAL,CAAcN,cAAc,CAACS,SAA7B,EAAwCZ,OAAxC,CAArB,EAAuEE,OAAvE,CAAP;AACD,KAFD,MAEO;AACL,aAAOL,cAAc,CAACW,KAAf,CAAqBT,IAAI,CAACW,MAAL,CAAY,CAAZ,CAArB,EAAqCR,OAArC,CAAP;AACD;AACF;;AACD,SAAOC,cAAP;AACD","sourcesContent":["import { CurrencyAmount, CAVAX, JSBI, ChainId } from '@pangolindex/sdk'\nimport { MIN_ETH } from '../constants'\nimport { CurrencyAmount as UniCurrencyAmount, Currency } from '@uniswap/sdk-core'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(chainId: ChainId, currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (chainId && currencyAmount.currency === CAVAX[chainId]) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_ETH)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_ETH), chainId)\n    } else {\n      return CurrencyAmount.ether(JSBI.BigInt(0), chainId)\n    }\n  }\n  return currencyAmount\n}\n\nexport function galetoMaxAmountSpend(chainId: ChainId, currencyAmount?: UniCurrencyAmount<Currency>): any | undefined {\n  if (!currencyAmount) return undefined\n  if (chainId && currencyAmount.currency === CAVAX[chainId]) {\n    if (JSBI.greaterThan(currencyAmount.numerator, MIN_ETH)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.numerator, MIN_ETH), chainId)\n    } else {\n      return CurrencyAmount.ether(JSBI.BigInt(0), chainId)\n    }\n  }\n  return currencyAmount\n}\n"]},"metadata":{},"sourceType":"module"}