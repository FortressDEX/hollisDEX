{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/layout/Header/index.tsx\";\nimport { ChainId } from '@pangolindex/sdk';\nimport { Button, Box, Text } from '@pangolindex/components';\nimport React, { useContext, useState, useRef } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useETHBalances, useAggregatePngBalance } from '../../state/wallet/hooks';\nimport { CardNoise } from '../../components/earn/styled';\nimport { CountUp } from 'use-count-up';\nimport Web3Status from '../../components/Web3Status';\nimport Modal from '../../components/Modal';\nimport PngBalanceContent from './PngBalanceContent';\nimport usePrevious from '../../hooks/usePrevious';\nimport LanguageSelection from '../../components/LanguageSelection';\nimport { ApplicationModal } from '../../state/application/actions';\nimport { useModalOpen, useToggleModal } from '../../state/application/hooks';\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside';\nimport { useDarkModeManager } from '../../state/user/hooks';\nimport NightMode from \"../../assets/svg/nightMode.svg\";\nimport LightMode from \"../../assets/svg/lightMode.svg\";\nimport { HeaderFrame, HeaderControls, HeaderElement, HeaderElementWrap, AccountElement, PNGAmount, PNGWrapper, NetworkCard, BalanceText, ThemeMode, MobileHeader, FooterMobileControls, MobileLogoWrapper, LegacyButtonWrapper } from './styled';\nimport { useTranslation } from 'react-i18next';\nimport MobileFooter from '../MobileFooter';\nimport { Logo } from '../../components/Icons';\nimport { Hidden } from 'src/theme';\nimport { useChainId } from 'src/hooks';\nimport NetworkSelection from './NetworkSelection';\nconst NETWORK_LABELS = {\n  [ChainId.FUJI]: 'Fuji',\n  [ChainId.AVALANCHE]: 'Avalanche',\n  [ChainId.WAGMI]: 'Wagmi'\n};\nconst NETWORK_CURRENCY = {\n  [ChainId.FUJI]: 'AVAX',\n  [ChainId.AVALANCHE]: 'AVAX',\n  [ChainId.WAGMI]: 'WGM'\n};\nexport default function Header() {\n  var _useETHBalances, _aggregateBalance$toF, _usePrevious;\n\n  const {\n    account\n  } = useActiveWeb3React();\n  const chainId = useChainId();\n  const {\n    t\n  } = useTranslation();\n  const theme = useContext(ThemeContext);\n  const userEthBalance = (_useETHBalances = useETHBalances(chainId, account ? [account] : [])) === null || _useETHBalances === void 0 ? void 0 : _useETHBalances[account !== null && account !== void 0 ? account : ''];\n  const aggregateBalance = useAggregatePngBalance();\n  const [showPngBalanceModal, setShowPngBalanceModal] = useState(false);\n  const [openNetworkSelection, setOpenNetworkSelection] = useState(false);\n  const countUpValue = (_aggregateBalance$toF = aggregateBalance === null || aggregateBalance === void 0 ? void 0 : aggregateBalance.toFixed(0)) !== null && _aggregateBalance$toF !== void 0 ? _aggregateBalance$toF : '0';\n  const countUpValuePrevious = (_usePrevious = usePrevious(countUpValue)) !== null && _usePrevious !== void 0 ? _usePrevious : '0';\n  const node = useRef();\n  const open = useModalOpen(ApplicationModal.FARM);\n  const toggle = useToggleModal(ApplicationModal.FARM);\n  useOnClickOutside(node, open ? toggle : undefined);\n  const [isDark, toggleDarkMode] = useDarkModeManager();\n\n  const closeNetworkSelection = () => {\n    setOpenNetworkSelection(false);\n  };\n\n  return /*#__PURE__*/React.createElement(HeaderFrame, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: showPngBalanceModal,\n    onDismiss: () => setShowPngBalanceModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PngBalanceContent, {\n    setShowPngBalanceModal: setShowPngBalanceModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(MobileHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MobileLogoWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    height: 30,\n    width: 140,\n    fillColor: theme.color6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Web3Status, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ThemeMode, {\n    onClick: () => toggleDarkMode(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, isDark ? /*#__PURE__*/React.createElement(\"img\", {\n    width: '16px',\n    src: LightMode,\n    alt: 'Setting',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    width: '16px',\n    src: NightMode,\n    alt: 'NightMode',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(FooterMobileControls, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MobileFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(HeaderControls, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HeaderElement, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LegacyButtonWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    height: 36,\n    padding: \"4px 6px\",\n    href: \"/\",\n    as: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      whiteSpace: 'nowrap',\n      color: '#000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, t('header.returnToLegacySite')))), /*#__PURE__*/React.createElement(Hidden, {\n    upToSmall: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NetworkSelection, {\n    open: openNetworkSelection,\n    closeModal: closeNetworkSelection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), chainId && NETWORK_LABELS[chainId] && /*#__PURE__*/React.createElement(NetworkCard, {\n    title: NETWORK_LABELS[chainId],\n    onClick: () => setOpenNetworkSelection(!openNetworkSelection),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, NETWORK_LABELS[chainId])), aggregateBalance && /*#__PURE__*/React.createElement(PNGWrapper, {\n    onClick: () => setShowPngBalanceModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PNGAmount, {\n    active: !!account,\n    style: {\n      pointerEvents: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, account && /*#__PURE__*/React.createElement(Hidden, {\n    upToSmall: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"black\",\n    style: {\n      paddingRight: '.4rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CountUp, {\n    key: countUpValue,\n    isCounting: true,\n    start: parseFloat(countUpValuePrevious),\n    end: parseFloat(countUpValue),\n    thousandsSeparator: ',',\n    duration: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 23\n    }\n  }))), \"PNG\"), /*#__PURE__*/React.createElement(CardNoise, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(AccountElement, {\n    active: !!account,\n    style: {\n      pointerEvents: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, account && userEthBalance ? /*#__PURE__*/React.createElement(BalanceText, {\n    style: {\n      flexShrink: 0\n    },\n    pl: \"0.75rem\",\n    pr: \"0.5rem\",\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, userEthBalance === null || userEthBalance === void 0 ? void 0 : userEthBalance.toSignificant(4), \" \", NETWORK_CURRENCY[chainId]) : null, /*#__PURE__*/React.createElement(Web3Status, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(HeaderElementWrap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LanguageSelection, {\n    isBeta: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ThemeMode, {\n    onClick: () => toggleDarkMode(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, isDark ? /*#__PURE__*/React.createElement(\"img\", {\n    width: '16px',\n    src: LightMode,\n    alt: 'Setting',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    width: '16px',\n    src: NightMode,\n    alt: 'NightMode',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/layout/Header/index.tsx"],"names":["ChainId","Button","Box","Text","React","useContext","useState","useRef","ThemeContext","useActiveWeb3React","useETHBalances","useAggregatePngBalance","CardNoise","CountUp","Web3Status","Modal","PngBalanceContent","usePrevious","LanguageSelection","ApplicationModal","useModalOpen","useToggleModal","useOnClickOutside","useDarkModeManager","HeaderFrame","HeaderControls","HeaderElement","HeaderElementWrap","AccountElement","PNGAmount","PNGWrapper","NetworkCard","BalanceText","ThemeMode","MobileHeader","FooterMobileControls","MobileLogoWrapper","LegacyButtonWrapper","useTranslation","MobileFooter","Logo","Hidden","useChainId","NetworkSelection","NETWORK_LABELS","FUJI","AVALANCHE","WAGMI","NETWORK_CURRENCY","Header","account","chainId","t","theme","userEthBalance","aggregateBalance","showPngBalanceModal","setShowPngBalanceModal","openNetworkSelection","setOpenNetworkSelection","countUpValue","toFixed","countUpValuePrevious","node","open","FARM","toggle","undefined","isDark","toggleDarkMode","closeNetworkSelection","color6","LightMode","NightMode","whiteSpace","color","pointerEvents","paddingRight","parseFloat","flexShrink","toSignificant"],"mappings":"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","sourcesContent":["import { ChainId, TokenAmount } from '@pangolindex/sdk'\nimport { Button, Box, Text } from '@pangolindex/components'\nimport React, { useContext, useState, useRef } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useETHBalances, useAggregatePngBalance } from '../../state/wallet/hooks'\nimport { CardNoise } from '../../components/earn/styled'\nimport { CountUp } from 'use-count-up'\nimport Web3Status from '../../components/Web3Status'\nimport Modal from '../../components/Modal'\nimport PngBalanceContent from './PngBalanceContent'\nimport usePrevious from '../../hooks/usePrevious'\nimport LanguageSelection from '../../components/LanguageSelection'\nimport { ApplicationModal } from '../../state/application/actions'\nimport { useModalOpen, useToggleModal } from '../../state/application/hooks'\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\nimport { useDarkModeManager } from '../../state/user/hooks'\nimport NightMode from '../../assets/svg/nightMode.svg'\nimport LightMode from '../../assets/svg/lightMode.svg'\nimport {\n  HeaderFrame,\n  HeaderControls,\n  HeaderElement,\n  HeaderElementWrap,\n  AccountElement,\n  PNGAmount,\n  PNGWrapper,\n  NetworkCard,\n  BalanceText,\n  ThemeMode,\n  MobileHeader,\n  FooterMobileControls,\n  MobileLogoWrapper,\n  LegacyButtonWrapper\n} from './styled'\nimport { useTranslation } from 'react-i18next'\nimport MobileFooter from '../MobileFooter'\nimport { Logo } from '../../components/Icons'\nimport { Hidden } from 'src/theme'\nimport { useChainId } from 'src/hooks'\nimport NetworkSelection from './NetworkSelection'\n\nconst NETWORK_LABELS: { [chainId in ChainId]?: string } = {\n  [ChainId.FUJI]: 'Fuji',\n  [ChainId.AVALANCHE]: 'Avalanche',\n  [ChainId.WAGMI]: 'Wagmi'\n}\n\nconst NETWORK_CURRENCY: { [chainId in ChainId]?: string } = {\n  [ChainId.FUJI]: 'AVAX',\n  [ChainId.AVALANCHE]: 'AVAX',\n  [ChainId.WAGMI]: 'WGM'\n}\n\nexport default function Header() {\n  const { account } = useActiveWeb3React()\n  const chainId = useChainId()\n  const { t } = useTranslation()\n  const theme = useContext(ThemeContext)\n  const userEthBalance = useETHBalances(chainId, account ? [account] : [])?.[account ?? '']\n\n  const aggregateBalance: TokenAmount | undefined = useAggregatePngBalance()\n\n  const [showPngBalanceModal, setShowPngBalanceModal] = useState(false)\n  const [openNetworkSelection, setOpenNetworkSelection] = useState(false)\n\n  const countUpValue = aggregateBalance?.toFixed(0) ?? '0'\n  const countUpValuePrevious = usePrevious(countUpValue) ?? '0'\n  const node = useRef<HTMLDivElement>()\n  const open = useModalOpen(ApplicationModal.FARM)\n  const toggle = useToggleModal(ApplicationModal.FARM)\n  useOnClickOutside(node, open ? toggle : undefined)\n\n  const [isDark, toggleDarkMode] = useDarkModeManager()\n\n  const closeNetworkSelection = () => {\n    setOpenNetworkSelection(false)\n  }\n\n  return (\n    <HeaderFrame>\n      <Modal isOpen={showPngBalanceModal} onDismiss={() => setShowPngBalanceModal(false)}>\n        <PngBalanceContent setShowPngBalanceModal={setShowPngBalanceModal} />\n      </Modal>\n\n      <MobileHeader>\n        <MobileLogoWrapper>\n          <Logo height={30} width={140} fillColor={theme.color6} />\n        </MobileLogoWrapper>\n\n        <Box display=\"flex\" alignItems=\"center\">\n          <Web3Status />\n\n          <ThemeMode onClick={() => toggleDarkMode()}>\n            {isDark ? (\n              <img width={'16px'} src={LightMode} alt={'Setting'} />\n            ) : (\n              <img width={'16px'} src={NightMode} alt={'NightMode'} />\n            )}\n          </ThemeMode>\n        </Box>\n      </MobileHeader>\n\n      <FooterMobileControls>\n        <MobileFooter />\n      </FooterMobileControls>\n\n      <HeaderControls>\n        <HeaderElement>\n          <LegacyButtonWrapper>\n            <Button variant=\"primary\" height={36} padding=\"4px 6px\" href=\"/\" as=\"a\">\n              <span style={{ whiteSpace: 'nowrap', color: '#000' }}>{t('header.returnToLegacySite')}</span>\n            </Button>\n          </LegacyButtonWrapper>\n          <Hidden upToSmall={true}>\n            <NetworkSelection open={openNetworkSelection} closeModal={closeNetworkSelection} />\n            {chainId && NETWORK_LABELS[chainId] && (\n              <NetworkCard\n                title={NETWORK_LABELS[chainId]}\n                onClick={() => setOpenNetworkSelection(!openNetworkSelection)}\n              >\n                {NETWORK_LABELS[chainId]}\n              </NetworkCard>\n            )}\n          </Hidden>\n          {aggregateBalance && (\n            <PNGWrapper onClick={() => setShowPngBalanceModal(true)}>\n              <PNGAmount active={!!account} style={{ pointerEvents: 'auto' }}>\n                {account && (\n                  <Hidden upToSmall>\n                    <Text\n                      color=\"black\"\n                      style={{\n                        paddingRight: '.4rem'\n                      }}\n                    >\n                      <CountUp\n                        key={countUpValue}\n                        isCounting\n                        start={parseFloat(countUpValuePrevious)}\n                        end={parseFloat(countUpValue)}\n                        thousandsSeparator={','}\n                        duration={1}\n                      />\n                    </Text>\n                  </Hidden>\n                )}\n                PNG\n              </PNGAmount>\n              <CardNoise />\n            </PNGWrapper>\n          )}\n          <AccountElement active={!!account} style={{ pointerEvents: 'auto' }}>\n            {account && userEthBalance ? (\n              <BalanceText style={{ flexShrink: 0 }} pl=\"0.75rem\" pr=\"0.5rem\" fontWeight={500}>\n                {userEthBalance?.toSignificant(4)} {NETWORK_CURRENCY[chainId]}\n              </BalanceText>\n            ) : null}\n            <Web3Status />\n          </AccountElement>\n        </HeaderElement>\n        <HeaderElementWrap>\n          <LanguageSelection isBeta={true} />\n          <ThemeMode onClick={() => toggleDarkMode()}>\n            {isDark ? (\n              <img width={'16px'} src={LightMode} alt={'Setting'} />\n            ) : (\n              <img width={'16px'} src={NightMode} alt={'NightMode'} />\n            )}\n          </ThemeMode>\n        </HeaderElementWrap>\n      </HeaderControls>\n    </HeaderFrame>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}