{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Pool/RemoveLiquidity/index.tsx\";\nimport React, { useState, useCallback, useMemo, useEffect } from 'react';\nimport useTransactionDeadline from 'src/hooks/useTransactionDeadline';\nimport { RemoveWrapper, InputText, ContentBox } from './styleds';\nimport { Box, Text, Button } from '@pangolindex/components';\nimport ReactGA from 'react-ga';\nimport { useActiveWeb3React, useChainId } from 'src/hooks';\nimport { Percent, CAVAX } from '@pangolindex/sdk';\nimport { useApproveCallback, ApprovalState } from 'src/hooks/useApproveCallback';\nimport { splitSignature } from 'ethers/lib/utils';\nimport { useTransactionAdder } from 'src/state/transactions/hooks';\nimport { useTranslation } from 'react-i18next';\nimport { RowBetween } from 'src/components/Row';\nimport { ROUTER_ADDRESS } from 'src/constants';\nimport { useWalletModalToggle } from 'src/state/application/hooks';\nimport { useBurnActionHandlers } from 'src/state/burn/hooks';\nimport { useDerivedBurnInfo, useBurnState } from 'src/state/burn/hooks';\nimport { wrappedCurrency } from 'src/utils/wrappedCurrency';\nimport { useUserSlippageTolerance } from 'src/state/user/hooks';\nimport { Field } from 'src/state/burn/actions';\nimport { BigNumber } from 'ethers';\nimport { usePairContract } from 'src/hooks/useContract';\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from 'src/utils';\nimport Stat from 'src/components/Stat';\nimport Percentage from 'src/components/Beta/Percentage';\nimport TransactionCompleted from 'src/components/Beta/TransactionCompleted';\nimport Loader from 'src/components/Beta/Loader';\n\nconst RemoveLiquidity = _ref => {\n  var _parsedAmounts$Field$, _parsedAmounts$Field$2, _parsedAmounts$Field$3, _parsedAmounts$Field$4, _parsedAmounts$Field$5, _parsedAmounts$Field$6, _pair$liquidityToken, _parsedAmounts$Field$9;\n\n  let {\n    currencyA,\n    currencyB\n  } = _ref;\n  const {\n    account,\n    library\n  } = useActiveWeb3React();\n  const chainId = useChainId();\n  const [tokenA, tokenB] = useMemo(() => [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)], [currencyA, currencyB, chainId]); // toggle wallet when disconnected\n\n  const toggleWalletModal = useWalletModalToggle();\n  const {\n    independentField,\n    typedValue\n  } = useBurnState();\n  const {\n    pair,\n    parsedAmounts,\n    error,\n    userLiquidity\n  } = useDerivedBurnInfo(currencyA !== null && currencyA !== void 0 ? currencyA : undefined, currencyB !== null && currencyB !== void 0 ? currencyB : undefined);\n  const {\n    onUserInput: _onUserInput\n  } = useBurnActionHandlers();\n  const isValid = !error; // state for pending and submitted txn views\n\n  const [attempting, setAttempting] = useState(false);\n  const [hash, setHash] = useState();\n  const deadline = useTransactionDeadline();\n  const [allowedSlippage] = useUserSlippageTolerance();\n  const formattedAmounts = {\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0') ? '0' : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100')) ? '<1' : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\n    [Field.LIQUIDITY]: independentField === Field.LIQUIDITY ? typedValue : (_parsedAmounts$Field$ = (_parsedAmounts$Field$2 = parsedAmounts[Field.LIQUIDITY]) === null || _parsedAmounts$Field$2 === void 0 ? void 0 : _parsedAmounts$Field$2.toSignificant(6)) !== null && _parsedAmounts$Field$ !== void 0 ? _parsedAmounts$Field$ : '',\n    [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? typedValue : (_parsedAmounts$Field$3 = (_parsedAmounts$Field$4 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$4 === void 0 ? void 0 : _parsedAmounts$Field$4.toSignificant(6)) !== null && _parsedAmounts$Field$3 !== void 0 ? _parsedAmounts$Field$3 : '',\n    [Field.CURRENCY_B]: independentField === Field.CURRENCY_B ? typedValue : (_parsedAmounts$Field$5 = (_parsedAmounts$Field$6 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$6 === void 0 ? void 0 : _parsedAmounts$Field$6.toSignificant(6)) !== null && _parsedAmounts$Field$5 !== void 0 ? _parsedAmounts$Field$5 : ''\n  }; // pair contract\n\n  const pairContract = usePairContract(pair === null || pair === void 0 ? void 0 : (_pair$liquidityToken = pair.liquidityToken) === null || _pair$liquidityToken === void 0 ? void 0 : _pair$liquidityToken.address); // allowance handling\n\n  const [signatureData, setSignatureData] = useState(null);\n  const [approval, approveCallback] = useApproveCallback(chainId, parsedAmounts[Field.LIQUIDITY], ROUTER_ADDRESS[chainId]);\n  const {\n    t\n  } = useTranslation();\n  const [stepIndex, setStepIndex] = useState(4);\n  useEffect(() => {\n    _onUserInput(Field.LIQUIDITY_PERCENT, `100`);\n  }, [_onUserInput]);\n\n  async function onAttemptToApprove() {\n    if (!pairContract || !pair || !library || !deadline || !chainId || !account) throw new Error(t('earn.missingDependencies'));\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY];\n    if (!liquidityAmount) throw new Error(t('earn.missingLiquidityAmount')); // try to gather a signature for permission\n\n    const nonce = await pairContract.nonces(account);\n    const EIP712Domain = [{\n      name: 'name',\n      type: 'string'\n    }, {\n      name: 'version',\n      type: 'string'\n    }, {\n      name: 'chainId',\n      type: 'uint256'\n    }, {\n      name: 'verifyingContract',\n      type: 'address'\n    }];\n    const domain = {\n      name: 'Pangolin Liquidity',\n      version: '1',\n      chainId: chainId,\n      verifyingContract: pair.liquidityToken.address\n    };\n    const Permit = [{\n      name: 'owner',\n      type: 'address'\n    }, {\n      name: 'spender',\n      type: 'address'\n    }, {\n      name: 'value',\n      type: 'uint256'\n    }, {\n      name: 'nonce',\n      type: 'uint256'\n    }, {\n      name: 'deadline',\n      type: 'uint256'\n    }];\n    const message = {\n      owner: account,\n      spender: ROUTER_ADDRESS[chainId],\n      value: liquidityAmount.raw.toString(),\n      nonce: nonce.toHexString(),\n      deadline: deadline.toNumber()\n    };\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain,\n        Permit\n      },\n      domain,\n      primaryType: 'Permit',\n      message\n    });\n    library.send('eth_signTypedData_v4', [account, data]).then(splitSignature).then(signature => {\n      setSignatureData({\n        v: signature.v,\n        r: signature.r,\n        s: signature.s,\n        deadline: deadline.toNumber()\n      });\n    }).catch(error => {\n      // for all errors other than 4001 (EIP-1193 user rejected request), fall back to manual approve\n      if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n        approveCallback();\n      }\n    });\n  }\n\n  const onChangePercentage = value => {\n    _onUserInput(Field.LIQUIDITY_PERCENT, `${value}`);\n  }; // wrapped onUserInput to clear signatures\n\n\n  const onUserInput = useCallback(typedValue => {\n    setSignatureData(null);\n\n    _onUserInput(Field.LIQUIDITY, typedValue);\n  }, [_onUserInput]); // tx sending\n\n  const addTransaction = useTransactionAdder();\n\n  async function onRemove() {\n    if (!chainId || !library || !account || !deadline) throw new Error('missing dependencies');\n    const {\n      [Field.CURRENCY_A]: currencyAmountA,\n      [Field.CURRENCY_B]: currencyAmountB\n    } = parsedAmounts;\n\n    if (!currencyAmountA || !currencyAmountB) {\n      // TODO: Translate using i18n\n      throw new Error('missing currency amounts');\n    }\n\n    const router = getRouterContract(chainId, library, account);\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(currencyAmountA, allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(currencyAmountB, allowedSlippage)[0]\n    }; // TODO: Translate using i18n\n\n    if (!currencyA || !currencyB) throw new Error('missing tokens');\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY];\n    if (!liquidityAmount) throw new Error('missing liquidity amount');\n    const currencyBIsAVAX = currencyB === CAVAX[chainId];\n    const oneCurrencyIsAVAX = currencyA === CAVAX[chainId] || currencyBIsAVAX; // TODO: Translate using i18n\n\n    if (!tokenA || !tokenB) throw new Error('could not wrap');\n    let methodNames, args; // we have approval, use normal remove liquidity\n\n    if (approval === ApprovalState.APPROVED) {\n      // removeLiquidityAVAX\n      if (oneCurrencyIsAVAX) {\n        methodNames = ['removeLiquidityAVAX', 'removeLiquidityAVAXSupportingFeeOnTransferTokens'];\n        args = [currencyBIsAVAX ? tokenA.address : tokenB.address, liquidityAmount.raw.toString(), amountsMin[currencyBIsAVAX ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), amountsMin[currencyBIsAVAX ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), account, deadline.toHexString()];\n      } // removeLiquidity\n      else {\n        methodNames = ['removeLiquidity'];\n        args = [tokenA.address, tokenB.address, liquidityAmount.raw.toString(), amountsMin[Field.CURRENCY_A].toString(), amountsMin[Field.CURRENCY_B].toString(), account, deadline.toHexString()];\n      }\n    } // we have a signature, use permit versions of remove liquidity\n    else if (signatureData !== null) {\n      // removeLiquidityAVAXWithPermit\n      if (oneCurrencyIsAVAX) {\n        methodNames = ['removeLiquidityAVAXWithPermit', 'removeLiquidityAVAXWithPermitSupportingFeeOnTransferTokens'];\n        args = [currencyBIsAVAX ? tokenA.address : tokenB.address, liquidityAmount.raw.toString(), amountsMin[currencyBIsAVAX ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), amountsMin[currencyBIsAVAX ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), account, signatureData.deadline, false, signatureData.v, signatureData.r, signatureData.s];\n      } // removeLiquidityAVAXWithPermit\n      else {\n        methodNames = ['removeLiquidityWithPermit'];\n        args = [tokenA.address, tokenB.address, liquidityAmount.raw.toString(), amountsMin[Field.CURRENCY_A].toString(), amountsMin[Field.CURRENCY_B].toString(), account, signatureData.deadline, false, signatureData.v, signatureData.r, signatureData.s];\n      }\n    } else {\n      // TODO: Translate using i18n\n      throw new Error('Attempting to confirm without approval or a signature. Please contact support.');\n    }\n\n    const safeGasEstimates = await Promise.all(methodNames.map(methodName => router.estimateGas[methodName](...args).then(calculateGasMargin).catch(error => {\n      console.error(`estimateGas failed`, methodName, args, error);\n      return undefined;\n    })));\n    const indexOfSuccessfulEstimation = safeGasEstimates.findIndex(safeGasEstimate => BigNumber.isBigNumber(safeGasEstimate)); // all estimations failed...\n\n    if (indexOfSuccessfulEstimation === -1) {\n      console.error('This transaction would fail. Please contact support.');\n    } else {\n      const methodName = methodNames[indexOfSuccessfulEstimation];\n      const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation];\n      setAttempting(true);\n      await router[methodName](...args, {\n        gasLimit: safeGasEstimate\n      }).then(response => {\n        var _parsedAmounts$Field$7, _parsedAmounts$Field$8;\n\n        // TODO: Translate using i18n\n        addTransaction(response, {\n          summary: t('removeLiquidity.remove') + ' ' + ((_parsedAmounts$Field$7 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$7 === void 0 ? void 0 : _parsedAmounts$Field$7.toSignificant(3)) + ' ' + (currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol) + ' and ' + ((_parsedAmounts$Field$8 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$8 === void 0 ? void 0 : _parsedAmounts$Field$8.toSignificant(3)) + ' ' + (currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol)\n        });\n        setHash(response.hash);\n        ReactGA.event({\n          category: 'Liquidity',\n          action: 'Remove',\n          label: [currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol, currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol].join('/')\n        });\n      }).catch(error => {\n        setAttempting(false); // we only care if the error is something _other_ than the user rejected the tx\n\n        if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n          console.error(error);\n        }\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(RemoveWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 5\n    }\n  }, !attempting && !hash && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    value: ((_parsedAmounts$Field$9 = parsedAmounts[Field.LIQUIDITY]) === null || _parsedAmounts$Field$9 === void 0 ? void 0 : _parsedAmounts$Field$9.toExact()) || '',\n    addonAfter: /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      color: \"text4\",\n      fontSize: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 23\n      }\n    }, \"PGL\")),\n    onChange: value => {\n      onUserInput(value);\n    },\n    fontSize: 24,\n    isNumeric: true,\n    placeholder: \"0.00\",\n    addonLabel: account && /*#__PURE__*/React.createElement(Text, {\n      color: \"text2\",\n      fontWeight: 500,\n      fontSize: 14,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 23\n      }\n    }, !!userLiquidity ? t('currencyInputPanel.balance') + (userLiquidity === null || userLiquidity === void 0 ? void 0 : userLiquidity.toSignificant(6)) : ' -'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    ml: \"5px\",\n    mt: \"25px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Percentage, {\n    onChangePercentage: value => {\n      setStepIndex(value);\n      onChangePercentage(value * 25);\n    },\n    currentValue: stepIndex,\n    variant: \"box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ContentBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Stat, {\n    title: tokenA === null || tokenA === void 0 ? void 0 : tokenA.symbol,\n    stat: `${formattedAmounts[Field.CURRENCY_A] || '-'}`,\n    titlePosition: \"top\",\n    titleFontSize: 14,\n    statFontSize: 16,\n    titleColor: \"text4\",\n    statAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Stat, {\n    title: tokenB === null || tokenB === void 0 ? void 0 : tokenB.symbol,\n    stat: `${formattedAmounts[Field.CURRENCY_B] || '-'}`,\n    titlePosition: \"top\",\n    titleFontSize: 14,\n    statFontSize: 16,\n    titleColor: \"text4\",\n    statAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Box, {\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 11\n    }\n  }, !account ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: () => {\n      toggleWalletModal();\n    },\n    height: \"46px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 15\n    }\n  }, t('earn.deposit')) : /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mr: \"5px\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: approval === ApprovalState.APPROVED || signatureData !== null ? 'confirm' : 'primary',\n    onClick: onAttemptToApprove,\n    isDisabled: approval !== ApprovalState.NOT_APPROVED || signatureData !== null,\n    loading: attempting && !hash,\n    loadingText: t('removeLiquidity.approving'),\n    height: \"46px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 19\n    }\n  }, approval === ApprovalState.PENDING ? t('removeLiquidity.approving') : approval === ApprovalState.APPROVED || signatureData !== null ? t('removeLiquidity.approved') : t('removeLiquidity.approve'))), /*#__PURE__*/React.createElement(Box, {\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    isDisabled: !isValid || signatureData === null && approval !== ApprovalState.APPROVED,\n    onClick: () => {\n      onRemove();\n    },\n    loading: attempting && !hash,\n    loadingText: t('migratePage.loading'),\n    height: \"46px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 19\n    }\n  }, error || t('removeLiquidity.remove')))))), attempting && !hash && /*#__PURE__*/React.createElement(Loader, {\n    size: 100,\n    label: `Removing Liquidity...`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 31\n    }\n  }), attempting && hash && /*#__PURE__*/React.createElement(TransactionCompleted, {\n    submitText: `Removed Liquidity`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 30\n    }\n  }));\n};\n\nexport default RemoveLiquidity;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Pool/RemoveLiquidity/index.tsx"],"names":["React","useState","useCallback","useMemo","useEffect","useTransactionDeadline","RemoveWrapper","InputText","ContentBox","Box","Text","Button","ReactGA","useActiveWeb3React","useChainId","Percent","CAVAX","useApproveCallback","ApprovalState","splitSignature","useTransactionAdder","useTranslation","RowBetween","ROUTER_ADDRESS","useWalletModalToggle","useBurnActionHandlers","useDerivedBurnInfo","useBurnState","wrappedCurrency","useUserSlippageTolerance","Field","BigNumber","usePairContract","calculateGasMargin","calculateSlippageAmount","getRouterContract","Stat","Percentage","TransactionCompleted","Loader","RemoveLiquidity","currencyA","currencyB","account","library","chainId","tokenA","tokenB","toggleWalletModal","independentField","typedValue","pair","parsedAmounts","error","userLiquidity","undefined","onUserInput","_onUserInput","isValid","attempting","setAttempting","hash","setHash","deadline","allowedSlippage","formattedAmounts","LIQUIDITY_PERCENT","equalTo","lessThan","toFixed","LIQUIDITY","toSignificant","CURRENCY_A","CURRENCY_B","pairContract","liquidityToken","address","signatureData","setSignatureData","approval","approveCallback","t","stepIndex","setStepIndex","onAttemptToApprove","Error","liquidityAmount","nonce","nonces","EIP712Domain","name","type","domain","version","verifyingContract","Permit","message","owner","spender","value","raw","toString","toHexString","toNumber","data","JSON","stringify","types","primaryType","send","then","signature","v","r","s","catch","code","onChangePercentage","addTransaction","onRemove","currencyAmountA","currencyAmountB","router","amountsMin","currencyBIsAVAX","oneCurrencyIsAVAX","methodNames","args","APPROVED","safeGasEstimates","Promise","all","map","methodName","estimateGas","console","indexOfSuccessfulEstimation","findIndex","safeGasEstimate","isBigNumber","gasLimit","response","summary","symbol","event","category","action","label","join","toExact","NOT_APPROVED","PENDING"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useMemo, useEffect } from 'react'\nimport useTransactionDeadline from 'src/hooks/useTransactionDeadline'\nimport { RemoveWrapper, InputText, ContentBox } from './styleds'\nimport { Box, Text, Button } from '@pangolindex/components'\nimport ReactGA from 'react-ga'\nimport { useActiveWeb3React, useChainId } from 'src/hooks'\nimport { Currency, Percent, CAVAX } from '@pangolindex/sdk'\nimport { useApproveCallback, ApprovalState } from 'src/hooks/useApproveCallback'\nimport { splitSignature } from 'ethers/lib/utils'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { useTransactionAdder } from 'src/state/transactions/hooks'\nimport { useTranslation } from 'react-i18next'\nimport { RowBetween } from 'src/components/Row'\nimport { ROUTER_ADDRESS } from 'src/constants'\nimport { useWalletModalToggle } from 'src/state/application/hooks'\nimport { useBurnActionHandlers } from 'src/state/burn/hooks'\nimport { useDerivedBurnInfo, useBurnState } from 'src/state/burn/hooks'\nimport { wrappedCurrency } from 'src/utils/wrappedCurrency'\nimport { useUserSlippageTolerance } from 'src/state/user/hooks'\nimport { Field } from 'src/state/burn/actions'\nimport { BigNumber, Contract } from 'ethers'\nimport { usePairContract } from 'src/hooks/useContract'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from 'src/utils'\nimport Stat from 'src/components/Stat'\nimport Percentage from 'src/components/Beta/Percentage'\nimport TransactionCompleted from 'src/components/Beta/TransactionCompleted'\nimport Loader from 'src/components/Beta/Loader'\n\ninterface RemoveLiquidityProps {\n  currencyA: Currency\n  currencyB: Currency\n}\n\nconst RemoveLiquidity = ({ currencyA, currencyB }: RemoveLiquidityProps) => {\n  const { account, library } = useActiveWeb3React()\n  const chainId = useChainId()\n\n  const [tokenA, tokenB] = useMemo(() => [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)], [\n    currencyA,\n    currencyB,\n    chainId\n  ])\n\n  // toggle wallet when disconnected\n  const toggleWalletModal = useWalletModalToggle()\n\n  const { independentField, typedValue } = useBurnState()\n  const { pair, parsedAmounts, error, userLiquidity } = useDerivedBurnInfo(\n    currencyA ?? undefined,\n    currencyB ?? undefined\n  )\n  const { onUserInput: _onUserInput } = useBurnActionHandlers()\n  const isValid = !error\n\n  // state for pending and submitted txn views\n  const [attempting, setAttempting] = useState<boolean>(false)\n  const [hash, setHash] = useState<string | undefined>()\n  const deadline = useTransactionDeadline()\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const formattedAmounts = {\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0')\n      ? '0'\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100'))\n      ? '<1'\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\n    [Field.LIQUIDITY]:\n      independentField === Field.LIQUIDITY ? typedValue : parsedAmounts[Field.LIQUIDITY]?.toSignificant(6) ?? '',\n    [Field.CURRENCY_A]:\n      independentField === Field.CURRENCY_A ? typedValue : parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    [Field.CURRENCY_B]:\n      independentField === Field.CURRENCY_B ? typedValue : parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? ''\n  }\n\n  // pair contract\n  const pairContract: Contract | null = usePairContract(pair?.liquidityToken?.address)\n\n  // allowance handling\n  const [signatureData, setSignatureData] = useState<{ v: number; r: string; s: string; deadline: number } | null>(null)\n  const [approval, approveCallback] = useApproveCallback(\n    chainId,\n    parsedAmounts[Field.LIQUIDITY],\n    ROUTER_ADDRESS[chainId]\n  )\n\n  const { t } = useTranslation()\n  const [stepIndex, setStepIndex] = useState(4)\n\n  useEffect(() => {\n    _onUserInput(Field.LIQUIDITY_PERCENT, `100`)\n  }, [_onUserInput])\n\n  async function onAttemptToApprove() {\n    if (!pairContract || !pair || !library || !deadline || !chainId || !account)\n      throw new Error(t('earn.missingDependencies'))\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\n    if (!liquidityAmount) throw new Error(t('earn.missingLiquidityAmount'))\n\n    // try to gather a signature for permission\n    const nonce = await pairContract.nonces(account)\n\n    const EIP712Domain = [\n      { name: 'name', type: 'string' },\n      { name: 'version', type: 'string' },\n      { name: 'chainId', type: 'uint256' },\n      { name: 'verifyingContract', type: 'address' }\n    ]\n    const domain = {\n      name: 'Pangolin Liquidity',\n      version: '1',\n      chainId: chainId,\n      verifyingContract: pair.liquidityToken.address\n    }\n    const Permit = [\n      { name: 'owner', type: 'address' },\n      { name: 'spender', type: 'address' },\n      { name: 'value', type: 'uint256' },\n      { name: 'nonce', type: 'uint256' },\n      { name: 'deadline', type: 'uint256' }\n    ]\n    const message = {\n      owner: account,\n      spender: ROUTER_ADDRESS[chainId],\n      value: liquidityAmount.raw.toString(),\n      nonce: nonce.toHexString(),\n      deadline: deadline.toNumber()\n    }\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain,\n        Permit\n      },\n      domain,\n      primaryType: 'Permit',\n      message\n    })\n\n    library\n      .send('eth_signTypedData_v4', [account, data])\n      .then(splitSignature)\n      .then(signature => {\n        setSignatureData({\n          v: signature.v,\n          r: signature.r,\n          s: signature.s,\n          deadline: deadline.toNumber()\n        })\n      })\n      .catch(error => {\n        // for all errors other than 4001 (EIP-1193 user rejected request), fall back to manual approve\n        if (error?.code !== 4001) {\n          approveCallback()\n        }\n      })\n  }\n\n  const onChangePercentage = (value: number) => {\n    _onUserInput(Field.LIQUIDITY_PERCENT, `${value}`)\n  }\n\n  // wrapped onUserInput to clear signatures\n  const onUserInput = useCallback(\n    (typedValue: string) => {\n      setSignatureData(null)\n      _onUserInput(Field.LIQUIDITY, typedValue)\n    },\n    [_onUserInput]\n  )\n\n  // tx sending\n  const addTransaction = useTransactionAdder()\n  async function onRemove() {\n    if (!chainId || !library || !account || !deadline) throw new Error('missing dependencies')\n    const { [Field.CURRENCY_A]: currencyAmountA, [Field.CURRENCY_B]: currencyAmountB } = parsedAmounts\n    if (!currencyAmountA || !currencyAmountB) {\n      // TODO: Translate using i18n\n      throw new Error('missing currency amounts')\n    }\n    const router = getRouterContract(chainId, library, account)\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(currencyAmountA, allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(currencyAmountB, allowedSlippage)[0]\n    }\n\n    // TODO: Translate using i18n\n    if (!currencyA || !currencyB) throw new Error('missing tokens')\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\n\n    const currencyBIsAVAX = currencyB === CAVAX[chainId]\n    const oneCurrencyIsAVAX = currencyA === CAVAX[chainId] || currencyBIsAVAX\n\n    // TODO: Translate using i18n\n    if (!tokenA || !tokenB) throw new Error('could not wrap')\n\n    let methodNames: string[], args: Array<string | string[] | number | boolean>\n    // we have approval, use normal remove liquidity\n    if (approval === ApprovalState.APPROVED) {\n      // removeLiquidityAVAX\n      if (oneCurrencyIsAVAX) {\n        methodNames = ['removeLiquidityAVAX', 'removeLiquidityAVAXSupportingFeeOnTransferTokens']\n        args = [\n          currencyBIsAVAX ? tokenA.address : tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[currencyBIsAVAX ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n          amountsMin[currencyBIsAVAX ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n          account,\n          deadline.toHexString()\n        ]\n      }\n      // removeLiquidity\n      else {\n        methodNames = ['removeLiquidity']\n        args = [\n          tokenA.address,\n          tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account,\n          deadline.toHexString()\n        ]\n      }\n    }\n    // we have a signature, use permit versions of remove liquidity\n    else if (signatureData !== null) {\n      // removeLiquidityAVAXWithPermit\n      if (oneCurrencyIsAVAX) {\n        methodNames = ['removeLiquidityAVAXWithPermit', 'removeLiquidityAVAXWithPermitSupportingFeeOnTransferTokens']\n        args = [\n          currencyBIsAVAX ? tokenA.address : tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[currencyBIsAVAX ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n          amountsMin[currencyBIsAVAX ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n          account,\n          signatureData.deadline,\n          false,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s\n        ]\n      }\n      // removeLiquidityAVAXWithPermit\n      else {\n        methodNames = ['removeLiquidityWithPermit']\n        args = [\n          tokenA.address,\n          tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account,\n          signatureData.deadline,\n          false,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s\n        ]\n      }\n    } else {\n      // TODO: Translate using i18n\n      throw new Error('Attempting to confirm without approval or a signature. Please contact support.')\n    }\n\n    const safeGasEstimates: (BigNumber | undefined)[] = await Promise.all(\n      methodNames.map(methodName =>\n        router.estimateGas[methodName](...args)\n          .then(calculateGasMargin)\n          .catch(error => {\n            console.error(`estimateGas failed`, methodName, args, error)\n            return undefined\n          })\n      )\n    )\n\n    const indexOfSuccessfulEstimation = safeGasEstimates.findIndex(safeGasEstimate =>\n      BigNumber.isBigNumber(safeGasEstimate)\n    )\n\n    // all estimations failed...\n    if (indexOfSuccessfulEstimation === -1) {\n      console.error('This transaction would fail. Please contact support.')\n    } else {\n      const methodName = methodNames[indexOfSuccessfulEstimation]\n      const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation]\n\n      setAttempting(true)\n      await router[methodName](...args, {\n        gasLimit: safeGasEstimate\n      })\n        .then((response: TransactionResponse) => {\n          // TODO: Translate using i18n\n          addTransaction(response, {\n            summary:\n              t('removeLiquidity.remove') +\n              ' ' +\n              parsedAmounts[Field.CURRENCY_A]?.toSignificant(3) +\n              ' ' +\n              currencyA?.symbol +\n              ' and ' +\n              parsedAmounts[Field.CURRENCY_B]?.toSignificant(3) +\n              ' ' +\n              currencyB?.symbol\n          })\n\n          setHash(response.hash)\n\n          ReactGA.event({\n            category: 'Liquidity',\n            action: 'Remove',\n            label: [currencyA?.symbol, currencyB?.symbol].join('/')\n          })\n        })\n        .catch((error: any) => {\n          setAttempting(false)\n          // we only care if the error is something _other_ than the user rejected the tx\n          if (error?.code !== 4001) {\n            console.error(error)\n          }\n        })\n    }\n  }\n\n  return (\n    <RemoveWrapper>\n      {!attempting && !hash && (\n        <>\n          <Box flex={1}>\n            <Box>\n              <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n                <InputText\n                  value={parsedAmounts[Field.LIQUIDITY]?.toExact() || ''}\n                  addonAfter={\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <Text color=\"text4\" fontSize={24}>\n                        PGL\n                      </Text>\n                    </Box>\n                  }\n                  onChange={(value: any) => {\n                    onUserInput(value as any)\n                  }}\n                  fontSize={24}\n                  isNumeric={true}\n                  placeholder=\"0.00\"\n                  addonLabel={\n                    account && (\n                      <Text color=\"text2\" fontWeight={500} fontSize={14}>\n                        {!!userLiquidity ? t('currencyInputPanel.balance') + userLiquidity?.toSignificant(6) : ' -'}\n                      </Text>\n                    )\n                  }\n                />\n\n                <Box ml=\"5px\" mt=\"25px\">\n                  <Percentage\n                    onChangePercentage={value => {\n                      setStepIndex(value)\n                      onChangePercentage(value * 25)\n                    }}\n                    currentValue={stepIndex}\n                    variant=\"box\"\n                  />\n                </Box>\n              </Box>\n            </Box>\n\n            <Box>\n              <ContentBox>\n                <Stat\n                  title={tokenA?.symbol}\n                  stat={`${formattedAmounts[Field.CURRENCY_A] || '-'}`}\n                  titlePosition=\"top\"\n                  titleFontSize={14}\n                  statFontSize={16}\n                  titleColor=\"text4\"\n                  statAlign=\"center\"\n                />\n\n                <Stat\n                  title={tokenB?.symbol}\n                  stat={`${formattedAmounts[Field.CURRENCY_B] || '-'}`}\n                  titlePosition=\"top\"\n                  titleFontSize={14}\n                  statFontSize={16}\n                  titleColor=\"text4\"\n                  statAlign=\"center\"\n                />\n              </ContentBox>\n            </Box>\n          </Box>\n          <Box mt={10}>\n            {!account ? (\n              <Button\n                variant=\"primary\"\n                onClick={() => {\n                  toggleWalletModal()\n                }}\n                height=\"46px\"\n              >\n                {t('earn.deposit')}\n              </Button>\n            ) : (\n              <RowBetween>\n                <Box mr=\"5px\" width=\"100%\">\n                  <Button\n                    variant={approval === ApprovalState.APPROVED || signatureData !== null ? 'confirm' : 'primary'}\n                    onClick={onAttemptToApprove}\n                    isDisabled={approval !== ApprovalState.NOT_APPROVED || signatureData !== null}\n                    loading={attempting && !hash}\n                    loadingText={t('removeLiquidity.approving')}\n                    height=\"46px\"\n                  >\n                    {approval === ApprovalState.PENDING\n                      ? t('removeLiquidity.approving')\n                      : approval === ApprovalState.APPROVED || signatureData !== null\n                      ? t('removeLiquidity.approved')\n                      : t('removeLiquidity.approve')}\n                  </Button>\n                </Box>\n\n                <Box width=\"100%\">\n                  <Button\n                    variant=\"primary\"\n                    isDisabled={!isValid || (signatureData === null && approval !== ApprovalState.APPROVED)}\n                    onClick={() => {\n                      onRemove()\n                    }}\n                    loading={attempting && !hash}\n                    loadingText={t('migratePage.loading')}\n                    height=\"46px\"\n                  >\n                    {error || t('removeLiquidity.remove')}\n                  </Button>\n                </Box>\n              </RowBetween>\n            )}\n          </Box>\n        </>\n      )}\n\n      {attempting && !hash && <Loader size={100} label={`Removing Liquidity...`} />}\n      {attempting && hash && <TransactionCompleted submitText={`Removed Liquidity`} />}\n    </RemoveWrapper>\n  )\n}\nexport default RemoveLiquidity\n"]},"metadata":{},"sourceType":"module"}