{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Stake/DetailModal/Details/index.tsx\";\nimport React from 'react';\nimport { DetailsContainer } from './styled';\nimport { Box } from '@pangolindex/components';\nimport CoinDescription from 'src/components/Beta/CoinDescription';\nimport StatDetails from '../StatDetail';\n\nconst Details = _ref => {\n  var _stakingInfo$stakedAm, _stakingInfo$rewardTo, _stakingInfo$totalSta, _stakingInfo$totalSta2, _stakingInfo$stakedAm2, _stakingInfo$totalSta3;\n\n  let {\n    stakingInfo\n  } = _ref;\n  const amountInPNG = stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.totalStakedInPng;\n  const isStaking = stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm === void 0 ? void 0 : _stakingInfo$stakedAm.greaterThan('0');\n  const bothCurrencySame = stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$rewardTo = stakingInfo.rewardToken) === null || _stakingInfo$rewardTo === void 0 ? void 0 : _stakingInfo$rewardTo.equals(stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$totalSta = stakingInfo.totalStakedAmount) === null || _stakingInfo$totalSta === void 0 ? void 0 : _stakingInfo$totalSta.token);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DetailsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    pb: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StatDetails, {\n    title: \"Total Staked\",\n    amountInPNG: amountInPNG,\n    currency0: stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$totalSta2 = stakingInfo.totalStakedAmount) === null || _stakingInfo$totalSta2 === void 0 ? void 0 : _stakingInfo$totalSta2.token,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  })), isStaking && /*#__PURE__*/React.createElement(Box, {\n    pb: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StatDetails, {\n    title: \"Your Staked\",\n    amountInPNG: stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.stakedAmount,\n    currency0: stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm2 = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm2 === void 0 ? void 0 : _stakingInfo$stakedAm2.token,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    pb: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CoinDescription, {\n    coin: stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$totalSta3 = stakingInfo.totalStakedAmount) === null || _stakingInfo$totalSta3 === void 0 ? void 0 : _stakingInfo$totalSta3.token,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  })), !bothCurrencySame && /*#__PURE__*/React.createElement(Box, {\n    pb: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CoinDescription, {\n    coin: stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.rewardToken,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Details;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Stake/DetailModal/Details/index.tsx"],"names":["React","DetailsContainer","Box","CoinDescription","StatDetails","Details","stakingInfo","amountInPNG","totalStakedInPng","isStaking","stakedAmount","greaterThan","bothCurrencySame","rewardToken","equals","totalStakedAmount","token"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,gBAAT,QAAiC,UAAjC;AACA,SAASC,GAAT,QAAoB,yBAApB;AACA,OAAOC,eAAP,MAA4B,qCAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAMA,MAAMC,OAAwB,GAAG,QAAqB;AAAA;;AAAA,MAApB;AAAEC,IAAAA;AAAF,GAAoB;AACpD,QAAMC,WAAW,GAAGD,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEE,gBAAjC;AACA,QAAMC,SAAS,GAAGH,WAAH,aAAGA,WAAH,gDAAGA,WAAW,CAAEI,YAAhB,0DAAG,sBAA2BC,WAA3B,CAAuC,GAAvC,CAAlB;AACA,QAAMC,gBAAgB,GAAGN,WAAH,aAAGA,WAAH,gDAAGA,WAAW,CAAEO,WAAhB,0DAAG,sBAA0BC,MAA1B,CAAiCR,WAAjC,aAAiCA,WAAjC,gDAAiCA,WAAW,CAAES,iBAA9C,0DAAiC,sBAAgCC,KAAjE,CAAzB;AAEA,sBACE,uDACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAC,cADR;AAEE,IAAA,WAAW,EAAET,WAFf;AAGE,IAAA,SAAS,EAAED,WAAF,aAAEA,WAAF,iDAAEA,WAAW,CAAES,iBAAf,2DAAE,uBAAgCC,KAH7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAQGP,SAAS,iBACR,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,WAAW,EAAEH,WAAF,aAAEA,WAAF,uBAAEA,WAAW,CAAEI,YAF5B;AAGE,IAAA,SAAS,EAAEJ,WAAF,aAAEA,WAAF,iDAAEA,WAAW,CAAEI,YAAf,2DAAE,uBAA2BM,KAHxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATJ,eAiBE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEV,WAAF,aAAEA,WAAF,iDAAEA,WAAW,CAAES,iBAAf,2DAAE,uBAAgCC,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjBF,EAoBG,CAACJ,gBAAD,iBACC,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEN,WAAF,aAAEA,WAAF,uBAAEA,WAAW,CAAEO,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CArBJ,CADF,CADF;AA8BD,CAnCD;;AAqCA,eAAeR,OAAf","sourcesContent":["import React from 'react'\nimport { SingleSideStakingInfo } from 'src/state/stake/hooks'\nimport { DetailsContainer } from './styled'\nimport { Box } from '@pangolindex/components'\nimport CoinDescription from 'src/components/Beta/CoinDescription'\nimport StatDetails from '../StatDetail'\n\ntype Props = {\n  stakingInfo: SingleSideStakingInfo\n}\n\nconst Details: React.FC<Props> = ({ stakingInfo }) => {\n  const amountInPNG = stakingInfo?.totalStakedInPng\n  const isStaking = stakingInfo?.stakedAmount?.greaterThan('0')\n  const bothCurrencySame = stakingInfo?.rewardToken?.equals(stakingInfo?.totalStakedAmount?.token)\n\n  return (\n    <>\n      <DetailsContainer>\n        <Box pb=\"20px\">\n          <StatDetails\n            title=\"Total Staked\"\n            amountInPNG={amountInPNG}\n            currency0={stakingInfo?.totalStakedAmount?.token}\n          />\n        </Box>\n        {isStaking && (\n          <Box pb=\"20px\">\n            <StatDetails\n              title=\"Your Staked\"\n              amountInPNG={stakingInfo?.stakedAmount}\n              currency0={stakingInfo?.stakedAmount?.token}\n            />\n          </Box>\n        )}\n        <Box pb=\"20px\">\n          <CoinDescription coin={stakingInfo?.totalStakedAmount?.token} />\n        </Box>\n        {!bothCurrencySame && (\n          <Box pb=\"20px\">\n            <CoinDescription coin={stakingInfo?.rewardToken} />\n          </Box>\n        )}\n      </DetailsContainer>\n    </>\n  )\n}\n\nexport default Details\n"]},"metadata":{},"sourceType":"module"}