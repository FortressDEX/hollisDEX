{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Migrate/Migrate.tsx\";\nimport React, { useState, useContext } from 'react';\nimport { PageWrapper, ResponsiveButtonPrimary, ResponsiveButtonOutline, ButtonRow, FirstWrapper, PanelWrapper, InfoWrapper, CircleIcon, ProcessWrapper, ArrowRight, EmptyProposals, StatisticImage } from './styleds';\nimport { useParams } from 'react-router-dom';\nimport { useActiveWeb3React } from '../../hooks';\nimport { Dots } from '../../components/swap/styleds';\nimport { Text, Box } from '@pangolindex/components';\nimport MigrationCard from '../../components/MigrationCard';\nimport { useTranslation } from 'react-i18next';\nimport MigrationModal from '../../components/MigrationModal';\nimport { useMigrationModalToggle } from '../../state/application/hooks';\nimport { useGetMigrationData } from '../../state/migrate/hooks';\nimport MigrationVector from '../../assets/images/migration_vector.png';\nimport Stake from \"../../assets/svg/stake.svg\";\nimport Unstake from \"../../assets/svg/unstake.svg\";\nimport { ThemeContext } from 'styled-components';\nimport { Hidden } from 'src/theme';\n\nconst MigrateUI = () => {\n  var _Object$keys, _Object$values;\n\n  const below1080 = false;\n  const {\n    t\n  } = useTranslation();\n  const params = useParams();\n  const [selectedPool, setSelectedPool] = useState({});\n  const theme = useContext(ThemeContext);\n  const {\n    account\n  } = useActiveWeb3React();\n  const toggleMigrationModal = useMigrationModalToggle();\n  const {\n    allPool,\n    v2IsLoading\n  } = useGetMigrationData(params === null || params === void 0 ? void 0 : params.version);\n  return /*#__PURE__*/React.createElement(PageWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FirstWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    maxWidth: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"text1\",\n    fontSize: 32,\n    mb: 20,\n    fontWeight: \"900\",\n    lineHeight: \"48px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, t('migratePage.moveYourTokensToNewContracts')), /*#__PURE__*/React.createElement(Text, {\n    color: \"text1\",\n    fontSize: 18,\n    mb: 20,\n    lineHeight: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, t('migratePage.moveYourTokensToNewContractsDescription')), /*#__PURE__*/React.createElement(ButtonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveButtonPrimary, {\n    variant: \"primary\",\n    onClick: () => {\n      setSelectedPool(null);\n      toggleMigrationModal();\n    },\n    isDisabled: ((_Object$keys = Object.keys(allPool)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.length) === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, t('migratePage.migrateNow')), /*#__PURE__*/React.createElement(ResponsiveButtonOutline, {\n    variant: \"outline\",\n    color: theme.color4,\n    href: \"https://docs.pangolin.exchange/learn-how-to/migrate-to-v2-farms\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, t('migratePage.learn')))), /*#__PURE__*/React.createElement(Hidden, {\n    upToSmall: true,\n    upToMedium: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    pt: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: MigrationVector,\n    alt: \"Migration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(InfoWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"text1\",\n    fontSize: 32,\n    mb: 10,\n    fontWeight: \"900\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, t('migratePage.migrateWithEase')), /*#__PURE__*/React.createElement(Text, {\n    color: \"text1\",\n    fontSize: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, t('migratePage.migrateWithDescription'))), /*#__PURE__*/React.createElement(ProcessWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CircleIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StatisticImage, {\n    src: Unstake,\n    alt: \"Already Migrate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Text, {\n    color: \"text1\",\n    fontSize: 18,\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, t('migratePage.unstake'))), /*#__PURE__*/React.createElement(ArrowRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CircleIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StatisticImage, {\n    src: Stake,\n    alt: \"Already Migrate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Text, {\n    color: \"text1\",\n    fontSize: 18,\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, t('migratePage.stake'))))), /*#__PURE__*/React.createElement(Box, {\n    mt: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"text1\",\n    fontSize: 24,\n    mb: 10,\n    fontWeight: \"900\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, t('migratePage.startMigratingNow')), /*#__PURE__*/React.createElement(Text, {\n    color: \"text1\",\n    fontSize: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, t('migratePage.startMigratingNowDescription'))), !account ? /*#__PURE__*/React.createElement(Box, {\n    padding: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"text3\",\n    textAlign: \"center\",\n    fontSize: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, t('pool.connectWalletToView'))) : v2IsLoading ? /*#__PURE__*/React.createElement(EmptyProposals, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"text3\",\n    textAlign: \"center\",\n    fontSize: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Dots, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, t('pool.loading')))) : ((_Object$values = Object.values(allPool)) === null || _Object$values === void 0 ? void 0 : _Object$values.length) > 0 ? /*#__PURE__*/React.createElement(PanelWrapper, {\n    style: {\n      marginTop: below1080 ? '0' : '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, Object.values(allPool).map(pool => {\n    var _pool$pair;\n\n    return /*#__PURE__*/React.createElement(MigrationCard, {\n      key: pool === null || pool === void 0 ? void 0 : (_pool$pair = pool.pair) === null || _pool$pair === void 0 ? void 0 : _pool$pair.liquidityToken.address,\n      pair: pool === null || pool === void 0 ? void 0 : pool.pair,\n      stakingData: pool === null || pool === void 0 ? void 0 : pool.staking,\n      onClickMigrate: () => {\n        var _pool$pair2;\n\n        const container = {};\n        container[pool === null || pool === void 0 ? void 0 : (_pool$pair2 = pool.pair) === null || _pool$pair2 === void 0 ? void 0 : _pool$pair2.liquidityToken.address] = pool;\n        setSelectedPool(container);\n        toggleMigrationModal();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    });\n  })) : /*#__PURE__*/React.createElement(EmptyProposals, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"text3\",\n    textAlign: \"center\",\n    fontSize: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, t('pool.noLiquidity')))), /*#__PURE__*/React.createElement(MigrationModal, {\n    selectedPool: selectedPool,\n    version: params === null || params === void 0 ? void 0 : params.version,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default MigrateUI;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Migrate/Migrate.tsx"],"names":["React","useState","useContext","PageWrapper","ResponsiveButtonPrimary","ResponsiveButtonOutline","ButtonRow","FirstWrapper","PanelWrapper","InfoWrapper","CircleIcon","ProcessWrapper","ArrowRight","EmptyProposals","StatisticImage","useParams","useActiveWeb3React","Dots","Text","Box","MigrationCard","useTranslation","MigrationModal","useMigrationModalToggle","useGetMigrationData","MigrationVector","ThemeContext","Hidden","MigrateUI","below1080","t","params","selectedPool","setSelectedPool","theme","account","toggleMigrationModal","allPool","v2IsLoading","version","Object","keys","length","color4","Unstake","Stake","values","marginTop","map","pool","pair","liquidityToken","address","staking","container"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\nimport {\n  PageWrapper,\n  ResponsiveButtonPrimary,\n  ResponsiveButtonOutline,\n  ButtonRow,\n  FirstWrapper,\n  PanelWrapper,\n  InfoWrapper,\n  CircleIcon,\n  ProcessWrapper,\n  ArrowRight,\n  EmptyProposals,\n  StatisticImage\n} from './styleds'\nimport { Pair } from '@pangolindex/sdk'\nimport { useParams } from 'react-router-dom'\nimport { useActiveWeb3React } from '../../hooks'\nimport { Dots } from '../../components/swap/styleds'\nimport { Text, Box } from '@pangolindex/components'\nimport MigrationCard from '../../components/MigrationCard'\nimport { useTranslation } from 'react-i18next'\nimport MigrationModal from '../../components/MigrationModal'\nimport { useMigrationModalToggle } from '../../state/application/hooks'\nimport { useGetMigrationData } from '../../state/migrate/hooks'\nimport { StakingInfo } from '../../state/stake/hooks'\nimport MigrationVector from '../../assets/images/migration_vector.png'\nimport Stake from '../../assets/svg/stake.svg'\nimport Unstake from '../../assets/svg/unstake.svg'\nimport { ThemeContext } from 'styled-components'\nimport { Hidden } from 'src/theme'\n\nconst MigrateUI = () => {\n  const below1080 = false\n  const { t } = useTranslation()\n  const params: any = useParams()\n  const [selectedPool, setSelectedPool] = useState({} as { [address: string]: { pair: Pair; staking: StakingInfo } })\n  const theme = useContext(ThemeContext)\n  const { account } = useActiveWeb3React()\n  const toggleMigrationModal = useMigrationModalToggle()\n\n  const { allPool, v2IsLoading } = useGetMigrationData(params?.version)\n\n  return (\n    <PageWrapper>\n      <FirstWrapper>\n        <Box maxWidth={500}>\n          <Text color=\"text1\" fontSize={32} mb={20} fontWeight=\"900\" lineHeight=\"48px\">\n            {t('migratePage.moveYourTokensToNewContracts')}\n          </Text>\n          <Text color=\"text1\" fontSize={18} mb={20} lineHeight=\"24px\">\n            {t('migratePage.moveYourTokensToNewContractsDescription')}\n          </Text>\n\n          <ButtonRow>\n            <ResponsiveButtonPrimary\n              variant=\"primary\"\n              onClick={() => {\n                setSelectedPool(null as any)\n                toggleMigrationModal()\n              }}\n              isDisabled={Object.keys(allPool)?.length === 0}\n            >\n              {t('migratePage.migrateNow')}\n            </ResponsiveButtonPrimary>\n            <ResponsiveButtonOutline\n              variant=\"outline\"\n              color={theme.color4}\n              href=\"https://docs.pangolin.exchange/learn-how-to/migrate-to-v2-farms\"\n            >\n              {t('migratePage.learn')}\n            </ResponsiveButtonOutline>\n          </ButtonRow>\n        </Box>\n        <Hidden upToSmall={true} upToMedium={true}>\n          <Box pt={40}>\n            <img src={MigrationVector} alt=\"Migration\" />\n          </Box>\n        </Hidden>\n      </FirstWrapper>\n\n      {/*<PanelWrapper style={{ marginTop: below1080 ? '0' : '50px' }}>*/}\n      {/*  <StatCard*/}\n      {/*    icon={<StatisticImage src={AlreadyMigrate} alt=\"Already Migrate\" />}*/}\n      {/*    title={t('migratePage.alreadyMigrate')}*/}\n      {/*    stat={`$250.000`}*/}\n      {/*  />*/}\n\n      {/*  <StatCard*/}\n      {/*    icon={<StatisticImage src={WalletMigrated} alt=\"Wallet Migrated\" />}*/}\n      {/*    title={t('migratePage.walletMigrate')}*/}\n      {/*    stat={`2.435`}*/}\n      {/*  />*/}\n\n      {/*  <StatCard*/}\n      {/*    icon={<StatisticImage src={AlreadyEarned} alt=\"Alread yEarned\" />}*/}\n      {/*    title={t('migratePage.alreadyEarned')}*/}\n      {/*    stat={`$150.000`}*/}\n      {/*  />*/}\n      {/*</PanelWrapper>*/}\n\n      <InfoWrapper>\n        <Box>\n          <Text color=\"text1\" fontSize={32} mb={10} fontWeight=\"900\">\n            {t('migratePage.migrateWithEase')}\n          </Text>\n          <Text color=\"text1\" fontSize={16}>\n            {t('migratePage.migrateWithDescription')}\n          </Text>\n        </Box>\n        <ProcessWrapper>\n          <Box display=\"inline-block\">\n            <CircleIcon>\n              <StatisticImage src={Unstake} alt=\"Already Migrate\" />\n            </CircleIcon>\n            <Text color=\"text1\" fontSize={18} mt={10}>\n              {t('migratePage.unstake')}\n            </Text>\n          </Box>\n\n          <ArrowRight />\n          <Box display=\"inline-block\">\n            <CircleIcon>\n              <StatisticImage src={Stake} alt=\"Already Migrate\" />\n            </CircleIcon>\n            <Text color=\"text1\" fontSize={18} mt={10}>\n              {t('migratePage.stake')}\n            </Text>\n          </Box>\n        </ProcessWrapper>\n      </InfoWrapper>\n\n      <Box mt={50}>\n        <Box textAlign=\"center\">\n          <Text color=\"text1\" fontSize={24} mb={10} fontWeight=\"900\">\n            {t('migratePage.startMigratingNow')}\n          </Text>\n          <Text color=\"text1\" fontSize={16}>\n            {t('migratePage.startMigratingNowDescription')}\n          </Text>\n        </Box>\n\n        {!account ? (\n          <Box padding=\"40px\">\n            <Text color=\"text3\" textAlign=\"center\" fontSize={24}>\n              {t('pool.connectWalletToView')}\n            </Text>\n          </Box>\n        ) : v2IsLoading ? (\n          <EmptyProposals>\n            <Text color=\"text3\" textAlign=\"center\" fontSize={16}>\n              <Dots>{t('pool.loading')}</Dots>\n            </Text>\n          </EmptyProposals>\n        ) : Object.values(allPool)?.length > 0 ? (\n          <PanelWrapper style={{ marginTop: below1080 ? '0' : '50px' }}>\n            {Object.values(allPool).map(pool => (\n              <MigrationCard\n                key={pool?.pair?.liquidityToken.address}\n                pair={pool?.pair}\n                stakingData={pool?.staking}\n                onClickMigrate={() => {\n                  const container = {} as { [address: string]: { pair: Pair; staking: StakingInfo } }\n                  container[pool?.pair?.liquidityToken.address] = pool\n                  setSelectedPool(container)\n                  toggleMigrationModal()\n                }}\n              />\n            ))}\n          </PanelWrapper>\n        ) : (\n          <EmptyProposals>\n            <Text color=\"text3\" textAlign=\"center\" fontSize={24}>\n              {t('pool.noLiquidity')}\n            </Text>\n          </EmptyProposals>\n        )}\n\n        {/* <Box display=\"flex\" justifyContent=\"center\" mt={30}>\n          <ResponsiveButtonPrimary variant=\"primary\" width=\"200px\">\n            {t('migratePage.seeMore')}\n          </ResponsiveButtonPrimary>\n        </Box> */}\n      </Box>\n      <MigrationModal selectedPool={selectedPool} version={params?.version} />\n    </PageWrapper>\n  )\n}\nexport default MigrateUI\n"]},"metadata":{},"sourceType":"module"}