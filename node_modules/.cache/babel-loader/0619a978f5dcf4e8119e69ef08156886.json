{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Pool/EarnWidget/Stake/index.tsx\";\nimport React, { useState, useCallback, useContext, useEffect } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { ChevronDown } from 'react-feather';\nimport useTransactionDeadline from 'src/hooks/useTransactionDeadline';\nimport { StakeWrapper, InputText, ContentBox, DataBox, PoolSelectWrapper, ExtraRewardDataBox, InputWrapper, Buttons, CardContentBox } from './styleds';\nimport { Box, Text, Button, DoubleCurrencyLogo } from '@pangolindex/components';\nimport { useActiveWeb3React } from 'src/hooks';\nimport { TokenAmount, Pair, JSBI } from '@pangolindex/sdk';\nimport { unwrappedToken } from 'src/utils/wrappedCurrency';\nimport { useGetPoolDollerWorth, useMinichefStakingInfos, useMinichefPendingRewards } from 'src/state/stake/hooks';\nimport { usePairContract, useStakingContract } from 'src/hooks/useContract';\nimport { useApproveCallback, ApprovalState } from 'src/hooks/useApproveCallback';\nimport { splitSignature } from 'ethers/lib/utils';\nimport { useDerivedStakeInfo, useMinichefPools } from 'src/state/stake/hooks';\nimport { wrappedCurrencyAmount } from 'src/utils/wrappedCurrency';\nimport { useTransactionAdder } from 'src/state/transactions/hooks';\nimport { useTranslation } from 'react-i18next';\nimport SelectPoolDrawer from './SelectPoolDrawer';\nimport { useTokenBalance } from 'src/state/wallet/hooks';\nimport Percentage from 'src/components/Beta/Percentage';\nimport Stat from 'src/components/Stat';\nimport TransactionCompleted from 'src/components/Beta/TransactionCompleted';\nimport Loader from 'src/components/Beta/Loader';\nimport { useChainId } from 'src/hooks';\n\nconst Stake = _ref => {\n  var _useMinichefStakingIn, _ref2, _stakingInfo$stakedAm, _stakingInfo$rewardRa, _ref3, _stakingInfo$stakedAm2;\n\n  let {\n    pair,\n    version,\n    onComplete,\n    type,\n    combinedApr\n  } = _ref;\n  const {\n    account,\n    library\n  } = useActiveWeb3React();\n  const chainId = useChainId();\n  const [selectedPair, setSelectedPair] = useState(pair);\n  const stakingInfo = (_useMinichefStakingIn = useMinichefStakingInfos(2, selectedPair)) === null || _useMinichefStakingIn === void 0 ? void 0 : _useMinichefStakingIn[0];\n  const theme = useContext(ThemeContext);\n  const userLiquidityUnstaked = useTokenBalance(account !== null && account !== void 0 ? account : undefined, selectedPair === null || selectedPair === void 0 ? void 0 : selectedPair.liquidityToken);\n  const {\n    liquidityInUSD\n  } = useGetPoolDollerWorth(selectedPair);\n  const [isPoolDrawerOpen, setIsPoolDrawerOpen] = useState(false); // track and parse user input\n\n  const [typedValue, setTypedValue] = useState(((_ref2 = userLiquidityUnstaked) === null || _ref2 === void 0 ? void 0 : _ref2.toExact()) || '');\n  const {\n    parsedAmount,\n    error\n  } = useDerivedStakeInfo(typedValue, stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm === void 0 ? void 0 : _stakingInfo$stakedAm.token, userLiquidityUnstaked);\n  const parsedAmountWrapped = wrappedCurrencyAmount(parsedAmount, chainId);\n  let hypotheticalWeeklyRewardRate = new TokenAmount(stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$rewardRa = stakingInfo.rewardRatePerWeek) === null || _stakingInfo$rewardRa === void 0 ? void 0 : _stakingInfo$rewardRa.token, '0');\n\n  if (parsedAmountWrapped === null || parsedAmountWrapped === void 0 ? void 0 : parsedAmountWrapped.greaterThan('0')) {\n    hypotheticalWeeklyRewardRate = stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.getHypotheticalWeeklyRewardRate(stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.stakedAmount.add(parsedAmountWrapped), stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.totalStakedAmount.add(parsedAmountWrapped), stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.totalRewardRatePerSecond);\n  }\n\n  const {\n    rewardTokensAmount\n  } = useMinichefPendingRewards(stakingInfo);\n  const isSuperFarm = ((_ref3 = rewardTokensAmount || []) === null || _ref3 === void 0 ? void 0 : _ref3.length) > 0; // state for pending and submitted txn views\n\n  const addTransaction = useTransactionAdder();\n  const [attempting, setAttempting] = useState(false);\n  const [hash, setHash] = useState(); // pair contract for this token to be staked\n\n  const dummyPair = new Pair(new TokenAmount(stakingInfo.tokens[0], '0'), new TokenAmount(stakingInfo.tokens[1], '0'), chainId);\n  const pairContract = usePairContract(dummyPair.liquidityToken.address); // approval data for stake\n\n  const deadline = useTransactionDeadline();\n  const {\n    t\n  } = useTranslation();\n  const [stepIndex, setStepIndex] = useState(4);\n  const [signatureData, setSignatureData] = useState(null);\n  const [approval, approveCallback] = useApproveCallback(chainId, parsedAmount, stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.stakingRewardAddress);\n  const stakingContract = useStakingContract(stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.stakingRewardAddress);\n  const currency0 = unwrappedToken(selectedPair === null || selectedPair === void 0 ? void 0 : selectedPair.token0, chainId);\n  const currency1 = unwrappedToken(selectedPair === null || selectedPair === void 0 ? void 0 : selectedPair.token1, chainId);\n  const poolMap = useMinichefPools();\n\n  const onChangePercentage = value => {\n    if (!userLiquidityUnstaked) {\n      setTypedValue('0');\n      return;\n    }\n\n    if (value === 100) {\n      setTypedValue(userLiquidityUnstaked.toExact());\n    } else {\n      const newAmount = userLiquidityUnstaked.multiply(JSBI.BigInt(value)).divide(JSBI.BigInt(100));\n      setTypedValue(newAmount.toSignificant(6));\n    }\n  };\n\n  async function onStake() {\n    if (stakingContract && poolMap && parsedAmount && deadline) {\n      setAttempting(true);\n      const method = version < 2 ? 'stake' : 'deposit';\n      const args = version < 2 ? [`0x${parsedAmount.raw.toString(16)}`] : [poolMap[stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.stakedAmount.token.address], `0x${parsedAmount.raw.toString(16)}`, account];\n\n      if (approval === ApprovalState.APPROVED) {\n        stakingContract[method](...args).then(response => {\n          addTransaction(response, {\n            summary: t('earn.depositLiquidity')\n          });\n          setHash(response.hash);\n        }).catch(error => {\n          setAttempting(false); // we only care if the error is something _other_ than the user rejected the tx\n\n          if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n            console.error(error);\n          }\n        });\n      } else if (signatureData) {\n        const permitMethod = version < 2 ? 'stakeWithPermit' : 'depositWithPermit';\n        const permitArgs = version < 2 ? [`0x${parsedAmount.raw.toString(16)}`, signatureData.deadline, signatureData.v, signatureData.r, signatureData.s] : [poolMap[stakingInfo.stakedAmount.token.address], `0x${parsedAmount.raw.toString(16)}`, account, signatureData.deadline, signatureData.v, signatureData.r, signatureData.s];\n        stakingContract[permitMethod](...permitArgs).then(response => {\n          addTransaction(response, {\n            summary: t('earn.depositLiquidity')\n          });\n          setHash(response.hash);\n        }).catch(error => {\n          setAttempting(false); // we only care if the error is something _other_ than the user rejected the tx\n\n          if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n            console.error(error);\n          }\n        });\n      } else {\n        setAttempting(false);\n        throw new Error(t('earn.attemptingToStakeError'));\n      }\n    }\n  } // wrapped onUserInput to clear signatures\n\n\n  const onUserInput = useCallback(typedValue => {\n    setSignatureData(null);\n    setTypedValue(typedValue);\n  }, []); // used for max input button\n  // const maxAmountInput = maxAmountSpend(userLiquidityUnstaked)\n  // const atMaxAmount = Boolean(maxAmountInput && parsedAmount?.equalTo(maxAmountInput))\n  // const handleMax = useCallback(() => {\n  //   maxAmountInput && onUserInput(maxAmountInput.toExact())\n  // }, [maxAmountInput, onUserInput])\n\n  async function onAttemptToApprove() {\n    if (!pairContract || !library || !deadline) throw new Error(t('earn.missingDependencies'));\n    const liquidityAmount = parsedAmount;\n    if (!liquidityAmount) throw new Error(t('earn.missingLiquidityAmount')); // try to gather a signature for permission\n\n    const nonce = await pairContract.nonces(account);\n    const EIP712Domain = [{\n      name: 'name',\n      type: 'string'\n    }, {\n      name: 'version',\n      type: 'string'\n    }, {\n      name: 'chainId',\n      type: 'uint256'\n    }, {\n      name: 'verifyingContract',\n      type: 'address'\n    }];\n    const domain = {\n      name: 'Pangolin Liquidity',\n      version: '1',\n      chainId: chainId,\n      verifyingContract: pairContract.address\n    };\n    const Permit = [{\n      name: 'owner',\n      type: 'address'\n    }, {\n      name: 'spender',\n      type: 'address'\n    }, {\n      name: 'value',\n      type: 'uint256'\n    }, {\n      name: 'nonce',\n      type: 'uint256'\n    }, {\n      name: 'deadline',\n      type: 'uint256'\n    }];\n    const message = {\n      owner: account,\n      spender: stakingInfo.stakingRewardAddress,\n      value: liquidityAmount.raw.toString(),\n      nonce: nonce.toHexString(),\n      deadline: deadline.toNumber()\n    };\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain,\n        Permit\n      },\n      domain,\n      primaryType: 'Permit',\n      message\n    });\n    library.send('eth_signTypedData_v4', [account, data]).then(splitSignature).then(signature => {\n      setSignatureData({\n        v: signature.v,\n        r: signature.r,\n        s: signature.s,\n        deadline: deadline.toNumber()\n      });\n    }).catch(error => {\n      // for all errors other than 4001 (EIP-1193 user rejected request), fall back to manual approve\n      if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n        approveCallback();\n      }\n    });\n  }\n\n  const renderPoolDataRow = (label, value) => {\n    return /*#__PURE__*/React.createElement(DataBox, {\n      key: label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      color: \"text4\",\n      fontSize: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }\n    }, label), /*#__PURE__*/React.createElement(Text, {\n      color: \"text4\",\n      fontSize: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }\n    }, value));\n  };\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (hash) {\n      setTypedValue('');\n    }\n\n    setHash('');\n    setSignatureData(null);\n    setAttempting(false);\n    onComplete && onComplete();\n  }, [setTypedValue, hash, onComplete]);\n  const handleSelectPoolDrawerClose = useCallback(() => {\n    setIsPoolDrawerOpen(false);\n  }, [setIsPoolDrawerOpen]);\n  useEffect(() => {\n    if (userLiquidityUnstaked) {\n      setTypedValue(userLiquidityUnstaked === null || userLiquidityUnstaked === void 0 ? void 0 : userLiquidityUnstaked.toExact());\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [userLiquidityUnstaked === null || userLiquidityUnstaked === void 0 ? void 0 : userLiquidityUnstaked.toExact()]);\n  const onPoolSelect = useCallback(pair => {\n    setSelectedPair(pair);\n  }, [setSelectedPair]); // userLiquidityUnstaked?.toExact() -> liquidityInUSD\n  // typedValue -> ?\n\n  const finalUsd = (userLiquidityUnstaked === null || userLiquidityUnstaked === void 0 ? void 0 : userLiquidityUnstaked.greaterThan('0')) ? Number(typedValue) * liquidityInUSD / Number(userLiquidityUnstaked === null || userLiquidityUnstaked === void 0 ? void 0 : userLiquidityUnstaked.toExact()) : undefined;\n  return /*#__PURE__*/React.createElement(StakeWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 5\n    }\n  }, !attempting && !hash && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 11\n    }\n  }, type === 'detail' && /*#__PURE__*/React.createElement(PoolSelectWrapper, {\n    onClick: () => setIsPoolDrawerOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DoubleCurrencyLogo, {\n    size: 24,\n    currency0: currency0,\n    currency1: currency1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    color: \"text2\",\n    fontSize: 16,\n    fontWeight: 500,\n    lineHeight: \"40px\",\n    marginLeft: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 19\n    }\n  }, currency0 === null || currency0 === void 0 ? void 0 : currency0.symbol, \"/\", currency1 === null || currency1 === void 0 ? void 0 : currency1.symbol)), /*#__PURE__*/React.createElement(ChevronDown, {\n    size: \"16\",\n    color: theme.text1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(InputWrapper, {\n    type: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    value: typedValue,\n    addonAfter: /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      color: \"text4\",\n      fontSize: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 21\n      }\n    }, \"PGL\")),\n    onChange: value => {\n      onUserInput(value);\n    },\n    fontSize: 24,\n    isNumeric: true,\n    placeholder: \"0.00\",\n    addonLabel: account && /*#__PURE__*/React.createElement(Text, {\n      color: \"text2\",\n      fontWeight: 500,\n      fontSize: 14,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 21\n      }\n    }, !!(stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm2 = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm2 === void 0 ? void 0 : _stakingInfo$stakedAm2.token) && userLiquidityUnstaked ? t('currencyInputPanel.balance') + (userLiquidityUnstaked === null || userLiquidityUnstaked === void 0 ? void 0 : userLiquidityUnstaked.toSignificant(6)) : ' -'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    mt: type === 'card' ? '25px' : '0px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Percentage, {\n    onChangePercentage: value => {\n      setStepIndex(value);\n      onChangePercentage(value * 25);\n    },\n    currentValue: stepIndex,\n    variant: type === 'card' ? 'box' : 'step',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 17\n    }\n  }))), type === 'card' && /*#__PURE__*/React.createElement(CardContentBox, {\n    isSuperFarm: isSuperFarm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Stat, {\n    title: t('migratePage.dollarWorth'),\n    stat: `${finalUsd ? `$${Number(finalUsd).toFixed(2)}` : '-'}`,\n    titlePosition: \"top\",\n    titleFontSize: 14,\n    statFontSize: 16,\n    titleColor: \"text4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 17\n    }\n  }), !isSuperFarm && /*#__PURE__*/React.createElement(Stat, {\n    title: t('dashboardPage.earned_weeklyIncome'),\n    stat: `${hypotheticalWeeklyRewardRate.toSignificant(4, {\n      groupSeparator: ','\n    })} PNG`,\n    titlePosition: \"top\",\n    titleFontSize: 14,\n    statFontSize: 16,\n    titleColor: \"text4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Stat, {\n    title: `APR`,\n    stat: combinedApr ? `${combinedApr}%` : '-',\n    titlePosition: \"top\",\n    titleFontSize: 14,\n    statFontSize: 16,\n    titleColor: \"text4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 17\n    }\n  })), type === 'detail' && /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ContentBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 17\n    }\n  }, renderPoolDataRow(t('migratePage.dollarWorth'), `${finalUsd ? `$${Number(finalUsd).toFixed(2)}` : '-'}`), renderPoolDataRow(`${t('dashboardPage.earned_weeklyIncome')}`, `${hypotheticalWeeklyRewardRate.toSignificant(4, {\n    groupSeparator: ','\n  })} PNG`), isSuperFarm && /*#__PURE__*/React.createElement(ExtraRewardDataBox, {\n    key: \"extra-reward\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"text4\",\n    fontSize: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 23\n    }\n  }, t('earn.extraReward')), /*#__PURE__*/React.createElement(Box, {\n    textAlign: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 23\n    }\n  }, rewardTokensAmount === null || rewardTokensAmount === void 0 ? void 0 : rewardTokensAmount.map((reward, index) => {\n    var _stakingInfo$rewardTo, _stakingInfo$getExtra;\n\n    const tokenMultiplier = stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$rewardTo = stakingInfo.rewardTokensMultiplier) === null || _stakingInfo$rewardTo === void 0 ? void 0 : _stakingInfo$rewardTo[index];\n    const extraTokenWeeklyRewardRate = stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$getExtra = stakingInfo.getExtraTokensWeeklyRewardRate) === null || _stakingInfo$getExtra === void 0 ? void 0 : _stakingInfo$getExtra.call(stakingInfo, hypotheticalWeeklyRewardRate, reward === null || reward === void 0 ? void 0 : reward.token, tokenMultiplier);\n\n    if (extraTokenWeeklyRewardRate) {\n      var _reward$token;\n\n      return /*#__PURE__*/React.createElement(Text, {\n        color: \"text4\",\n        fontSize: 16,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 31\n        }\n      }, extraTokenWeeklyRewardRate.toSignificant(4, {\n        groupSeparator: ','\n      }), ' ', reward === null || reward === void 0 ? void 0 : (_reward$token = reward.token) === null || _reward$token === void 0 ? void 0 : _reward$token.symbol);\n    }\n\n    return null;\n  })))))), /*#__PURE__*/React.createElement(Buttons, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: approval === ApprovalState.APPROVED || signatureData !== null ? 'confirm' : 'primary',\n    onClick: onAttemptToApprove,\n    isDisabled: approval !== ApprovalState.NOT_APPROVED || signatureData !== null,\n    loading: attempting && !hash,\n    loadingText: t('migratePage.loading'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 13\n    }\n  }, t('earn.approve')), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    isDisabled: !!error || signatureData === null && approval !== ApprovalState.APPROVED,\n    onClick: () => {\n      onStake();\n    },\n    loading: attempting && !hash,\n    loadingText: t('migratePage.loading'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 13\n    }\n  }, error !== null && error !== void 0 ? error : t('earn.deposit')))), attempting && !hash && /*#__PURE__*/React.createElement(Loader, {\n    size: 100,\n    label: `${t('earn.depositingLiquidity')}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 31\n    }\n  }), attempting && hash && /*#__PURE__*/React.createElement(TransactionCompleted, {\n    submitText: `${t('earn.deposited')}`,\n    isShowButtton: type === 'card' ? false : true,\n    onButtonClick: () => handleDismissConfirmation(),\n    buttonText: \"Close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 9\n    }\n  }), isPoolDrawerOpen && /*#__PURE__*/React.createElement(SelectPoolDrawer, {\n    isOpen: isPoolDrawerOpen,\n    onClose: handleSelectPoolDrawerClose,\n    onPoolSelect: onPoolSelect,\n    selectedPair: selectedPair,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Stake;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Pool/EarnWidget/Stake/index.tsx"],"names":["React","useState","useCallback","useContext","useEffect","ThemeContext","ChevronDown","useTransactionDeadline","StakeWrapper","InputText","ContentBox","DataBox","PoolSelectWrapper","ExtraRewardDataBox","InputWrapper","Buttons","CardContentBox","Box","Text","Button","DoubleCurrencyLogo","useActiveWeb3React","TokenAmount","Pair","JSBI","unwrappedToken","useGetPoolDollerWorth","useMinichefStakingInfos","useMinichefPendingRewards","usePairContract","useStakingContract","useApproveCallback","ApprovalState","splitSignature","useDerivedStakeInfo","useMinichefPools","wrappedCurrencyAmount","useTransactionAdder","useTranslation","SelectPoolDrawer","useTokenBalance","Percentage","Stat","TransactionCompleted","Loader","useChainId","Stake","pair","version","onComplete","type","combinedApr","account","library","chainId","selectedPair","setSelectedPair","stakingInfo","theme","userLiquidityUnstaked","undefined","liquidityToken","liquidityInUSD","isPoolDrawerOpen","setIsPoolDrawerOpen","typedValue","setTypedValue","toExact","parsedAmount","error","stakedAmount","token","parsedAmountWrapped","hypotheticalWeeklyRewardRate","rewardRatePerWeek","greaterThan","getHypotheticalWeeklyRewardRate","add","totalStakedAmount","totalRewardRatePerSecond","rewardTokensAmount","isSuperFarm","length","addTransaction","attempting","setAttempting","hash","setHash","dummyPair","tokens","pairContract","address","deadline","t","stepIndex","setStepIndex","signatureData","setSignatureData","approval","approveCallback","stakingRewardAddress","stakingContract","currency0","token0","currency1","token1","poolMap","onChangePercentage","value","newAmount","multiply","BigInt","divide","toSignificant","onStake","method","args","raw","toString","APPROVED","then","response","summary","catch","code","console","permitMethod","permitArgs","v","r","s","Error","onUserInput","onAttemptToApprove","liquidityAmount","nonce","nonces","EIP712Domain","name","domain","verifyingContract","Permit","message","owner","spender","toHexString","toNumber","data","JSON","stringify","types","primaryType","send","signature","renderPoolDataRow","label","handleDismissConfirmation","handleSelectPoolDrawerClose","onPoolSelect","finalUsd","Number","symbol","text1","toFixed","groupSeparator","map","reward","index","tokenMultiplier","rewardTokensMultiplier","extraTokenWeeklyRewardRate","getExtraTokensWeeklyRewardRate","NOT_APPROVED"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useContext, useEffect } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { ChevronDown } from 'react-feather'\nimport useTransactionDeadline from 'src/hooks/useTransactionDeadline'\nimport {\n  StakeWrapper,\n  InputText,\n  ContentBox,\n  DataBox,\n  PoolSelectWrapper,\n  ExtraRewardDataBox,\n  InputWrapper,\n  Buttons,\n  CardContentBox\n} from './styleds'\nimport { Box, Text, Button, DoubleCurrencyLogo } from '@pangolindex/components'\nimport { useActiveWeb3React } from 'src/hooks'\nimport { TokenAmount, Pair, JSBI, Token } from '@pangolindex/sdk'\nimport { unwrappedToken } from 'src/utils/wrappedCurrency'\nimport { useGetPoolDollerWorth, useMinichefStakingInfos, useMinichefPendingRewards } from 'src/state/stake/hooks'\nimport { usePairContract, useStakingContract } from 'src/hooks/useContract'\nimport { useApproveCallback, ApprovalState } from 'src/hooks/useApproveCallback'\nimport { splitSignature } from 'ethers/lib/utils'\nimport { useDerivedStakeInfo, useMinichefPools } from 'src/state/stake/hooks'\nimport { wrappedCurrencyAmount } from 'src/utils/wrappedCurrency'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { useTransactionAdder } from 'src/state/transactions/hooks'\nimport { useTranslation } from 'react-i18next'\nimport SelectPoolDrawer from './SelectPoolDrawer'\nimport { useTokenBalance } from 'src/state/wallet/hooks'\nimport Percentage from 'src/components/Beta/Percentage'\nimport Stat from 'src/components/Stat'\nimport TransactionCompleted from 'src/components/Beta/TransactionCompleted'\nimport Loader from 'src/components/Beta/Loader'\nimport { useChainId } from 'src/hooks'\n\ninterface StakeProps {\n  pair: Pair | null\n  version: number\n  onComplete?: () => void\n  type: 'card' | 'detail'\n  combinedApr?: number\n}\n\nconst Stake = ({ pair, version, onComplete, type, combinedApr }: StakeProps) => {\n  const { account, library } = useActiveWeb3React()\n  const chainId = useChainId()\n\n  const [selectedPair, setSelectedPair] = useState<Pair | null>(pair)\n\n  const stakingInfo = useMinichefStakingInfos(2, selectedPair)?.[0]\n\n  const theme = useContext(ThemeContext)\n\n  const userLiquidityUnstaked = useTokenBalance(account ?? undefined, selectedPair?.liquidityToken)\n  const { liquidityInUSD } = useGetPoolDollerWorth(selectedPair)\n\n  const [isPoolDrawerOpen, setIsPoolDrawerOpen] = useState(false)\n\n  // track and parse user input\n  const [typedValue, setTypedValue] = useState((userLiquidityUnstaked as TokenAmount)?.toExact() || '')\n  const { parsedAmount, error } = useDerivedStakeInfo(\n    typedValue,\n    stakingInfo?.stakedAmount?.token,\n    userLiquidityUnstaked\n  )\n  const parsedAmountWrapped = wrappedCurrencyAmount(parsedAmount, chainId)\n\n  let hypotheticalWeeklyRewardRate: TokenAmount = new TokenAmount(stakingInfo?.rewardRatePerWeek?.token, '0')\n  if (parsedAmountWrapped?.greaterThan('0')) {\n    hypotheticalWeeklyRewardRate = stakingInfo?.getHypotheticalWeeklyRewardRate(\n      stakingInfo?.stakedAmount.add(parsedAmountWrapped),\n      stakingInfo?.totalStakedAmount.add(parsedAmountWrapped),\n      stakingInfo?.totalRewardRatePerSecond\n    )\n  }\n\n  const { rewardTokensAmount } = useMinichefPendingRewards(stakingInfo)\n\n  const isSuperFarm = (rewardTokensAmount || [])?.length > 0\n\n  // state for pending and submitted txn views\n  const addTransaction = useTransactionAdder()\n  const [attempting, setAttempting] = useState<boolean>(false)\n  const [hash, setHash] = useState<string | undefined>()\n\n  // pair contract for this token to be staked\n  const dummyPair = new Pair(\n    new TokenAmount(stakingInfo.tokens[0], '0'),\n    new TokenAmount(stakingInfo.tokens[1], '0'),\n    chainId\n  )\n  const pairContract = usePairContract(dummyPair.liquidityToken.address)\n\n  // approval data for stake\n  const deadline = useTransactionDeadline()\n  const { t } = useTranslation()\n\n  const [stepIndex, setStepIndex] = useState(4)\n  const [signatureData, setSignatureData] = useState<{ v: number; r: string; s: string; deadline: number } | null>(null)\n  const [approval, approveCallback] = useApproveCallback(chainId, parsedAmount, stakingInfo?.stakingRewardAddress)\n\n  const stakingContract = useStakingContract(stakingInfo?.stakingRewardAddress)\n  const currency0 = unwrappedToken(selectedPair?.token0 as Token, chainId)\n  const currency1 = unwrappedToken(selectedPair?.token1 as Token, chainId)\n  const poolMap = useMinichefPools()\n\n  const onChangePercentage = (value: number) => {\n    if (!userLiquidityUnstaked) {\n      setTypedValue('0')\n      return\n    }\n    if (value === 100) {\n      setTypedValue((userLiquidityUnstaked as TokenAmount).toExact())\n    } else {\n      const newAmount = (userLiquidityUnstaked as TokenAmount)\n        .multiply(JSBI.BigInt(value))\n        .divide(JSBI.BigInt(100)) as TokenAmount\n      setTypedValue(newAmount.toSignificant(6))\n    }\n  }\n\n  async function onStake() {\n    if (stakingContract && poolMap && parsedAmount && deadline) {\n      setAttempting(true)\n      const method = version < 2 ? 'stake' : 'deposit'\n      const args =\n        version < 2\n          ? [`0x${parsedAmount.raw.toString(16)}`]\n          : [poolMap[stakingInfo?.stakedAmount.token.address], `0x${parsedAmount.raw.toString(16)}`, account]\n\n      if (approval === ApprovalState.APPROVED) {\n        stakingContract[method](...args)\n          .then((response: TransactionResponse) => {\n            addTransaction(response, {\n              summary: t('earn.depositLiquidity')\n            })\n            setHash(response.hash)\n          })\n          .catch((error: any) => {\n            setAttempting(false)\n            // we only care if the error is something _other_ than the user rejected the tx\n            if (error?.code !== 4001) {\n              console.error(error)\n            }\n          })\n      } else if (signatureData) {\n        const permitMethod = version < 2 ? 'stakeWithPermit' : 'depositWithPermit'\n        const permitArgs =\n          version < 2\n            ? [\n                `0x${parsedAmount.raw.toString(16)}`,\n                signatureData.deadline,\n                signatureData.v,\n                signatureData.r,\n                signatureData.s\n              ]\n            : [\n                poolMap[stakingInfo.stakedAmount.token.address],\n                `0x${parsedAmount.raw.toString(16)}`,\n                account,\n                signatureData.deadline,\n                signatureData.v,\n                signatureData.r,\n                signatureData.s\n              ]\n\n        stakingContract[permitMethod](...permitArgs)\n          .then((response: TransactionResponse) => {\n            addTransaction(response, {\n              summary: t('earn.depositLiquidity')\n            })\n            setHash(response.hash)\n          })\n          .catch((error: any) => {\n            setAttempting(false)\n            // we only care if the error is something _other_ than the user rejected the tx\n            if (error?.code !== 4001) {\n              console.error(error)\n            }\n          })\n      } else {\n        setAttempting(false)\n        throw new Error(t('earn.attemptingToStakeError'))\n      }\n    }\n  }\n\n  // wrapped onUserInput to clear signatures\n  const onUserInput = useCallback((typedValue: string) => {\n    setSignatureData(null)\n    setTypedValue(typedValue)\n  }, [])\n\n  // used for max input button\n  // const maxAmountInput = maxAmountSpend(userLiquidityUnstaked)\n  // const atMaxAmount = Boolean(maxAmountInput && parsedAmount?.equalTo(maxAmountInput))\n  // const handleMax = useCallback(() => {\n  //   maxAmountInput && onUserInput(maxAmountInput.toExact())\n  // }, [maxAmountInput, onUserInput])\n\n  async function onAttemptToApprove() {\n    if (!pairContract || !library || !deadline) throw new Error(t('earn.missingDependencies'))\n\n    const liquidityAmount = parsedAmount\n    if (!liquidityAmount) throw new Error(t('earn.missingLiquidityAmount'))\n\n    // try to gather a signature for permission\n    const nonce = await pairContract.nonces(account)\n\n    const EIP712Domain = [\n      { name: 'name', type: 'string' },\n      { name: 'version', type: 'string' },\n      { name: 'chainId', type: 'uint256' },\n      { name: 'verifyingContract', type: 'address' }\n    ]\n    const domain = {\n      name: 'Pangolin Liquidity',\n      version: '1',\n      chainId: chainId,\n      verifyingContract: pairContract.address\n    }\n    const Permit = [\n      { name: 'owner', type: 'address' },\n      { name: 'spender', type: 'address' },\n      { name: 'value', type: 'uint256' },\n      { name: 'nonce', type: 'uint256' },\n      { name: 'deadline', type: 'uint256' }\n    ]\n    const message = {\n      owner: account,\n      spender: stakingInfo.stakingRewardAddress,\n      value: liquidityAmount.raw.toString(),\n      nonce: nonce.toHexString(),\n      deadline: deadline.toNumber()\n    }\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain,\n        Permit\n      },\n      domain,\n      primaryType: 'Permit',\n      message\n    })\n\n    library\n      .send('eth_signTypedData_v4', [account, data])\n      .then(splitSignature)\n      .then(signature => {\n        setSignatureData({\n          v: signature.v,\n          r: signature.r,\n          s: signature.s,\n          deadline: deadline.toNumber()\n        })\n      })\n      .catch(error => {\n        // for all errors other than 4001 (EIP-1193 user rejected request), fall back to manual approve\n        if (error?.code !== 4001) {\n          approveCallback()\n        }\n      })\n  }\n\n  const renderPoolDataRow = (label: string, value: string) => {\n    return (\n      <DataBox key={label}>\n        <Text color=\"text4\" fontSize={16}>\n          {label}\n        </Text>\n\n        <Text color=\"text4\" fontSize={16}>\n          {value}\n        </Text>\n      </DataBox>\n    )\n  }\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (hash) {\n      setTypedValue('')\n    }\n    setHash('')\n    setSignatureData(null)\n    setAttempting(false)\n    onComplete && onComplete()\n  }, [setTypedValue, hash, onComplete])\n\n  const handleSelectPoolDrawerClose = useCallback(() => {\n    setIsPoolDrawerOpen(false)\n  }, [setIsPoolDrawerOpen])\n\n  useEffect(() => {\n    if (userLiquidityUnstaked) {\n      setTypedValue(userLiquidityUnstaked?.toExact())\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userLiquidityUnstaked?.toExact()])\n\n  const onPoolSelect = useCallback(\n    pair => {\n      setSelectedPair(pair)\n    },\n    [setSelectedPair]\n  )\n\n  // userLiquidityUnstaked?.toExact() -> liquidityInUSD\n  // typedValue -> ?\n  const finalUsd = userLiquidityUnstaked?.greaterThan('0')\n    ? (Number(typedValue) * liquidityInUSD) / Number(userLiquidityUnstaked?.toExact())\n    : undefined\n\n  return (\n    <StakeWrapper>\n      {!attempting && !hash && (\n        <>\n          <Box flex={1}>\n            {type === 'detail' && (\n              <PoolSelectWrapper onClick={() => setIsPoolDrawerOpen(true)}>\n                <Box display=\"flex\" alignItems=\"center\">\n                  <DoubleCurrencyLogo size={24} currency0={currency0} currency1={currency1} />\n                  <Text color=\"text2\" fontSize={16} fontWeight={500} lineHeight=\"40px\" marginLeft={10}>\n                    {currency0?.symbol}/{currency1?.symbol}\n                  </Text>\n                </Box>\n                <ChevronDown size=\"16\" color={theme.text1} />\n              </PoolSelectWrapper>\n            )}\n\n            <InputWrapper type={type}>\n              <InputText\n                value={typedValue}\n                addonAfter={\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <Text color=\"text4\" fontSize={24}>\n                      PGL\n                    </Text>\n                  </Box>\n                }\n                onChange={(value: any) => {\n                  onUserInput(value as any)\n                }}\n                fontSize={24}\n                isNumeric={true}\n                placeholder=\"0.00\"\n                addonLabel={\n                  account && (\n                    <Text color=\"text2\" fontWeight={500} fontSize={14}>\n                      {!!stakingInfo?.stakedAmount?.token && userLiquidityUnstaked\n                        ? t('currencyInputPanel.balance') + userLiquidityUnstaked?.toSignificant(6)\n                        : ' -'}\n                    </Text>\n                  )\n                }\n              />\n\n              <Box mt={type === 'card' ? '25px' : '0px'}>\n                <Percentage\n                  onChangePercentage={value => {\n                    setStepIndex(value)\n                    onChangePercentage(value * 25)\n                  }}\n                  currentValue={stepIndex}\n                  variant={type === 'card' ? 'box' : 'step'}\n                />\n              </Box>\n            </InputWrapper>\n            {type === 'card' && (\n              <CardContentBox isSuperFarm={isSuperFarm}>\n                <Stat\n                  title={t('migratePage.dollarWorth')}\n                  stat={`${finalUsd ? `$${Number(finalUsd).toFixed(2)}` : '-'}`}\n                  titlePosition=\"top\"\n                  titleFontSize={14}\n                  statFontSize={16}\n                  titleColor=\"text4\"\n                />\n\n                {!isSuperFarm && (\n                  <Stat\n                    title={t('dashboardPage.earned_weeklyIncome')}\n                    stat={`${hypotheticalWeeklyRewardRate.toSignificant(4, { groupSeparator: ',' })} PNG`}\n                    titlePosition=\"top\"\n                    titleFontSize={14}\n                    statFontSize={16}\n                    titleColor=\"text4\"\n                  />\n                )}\n\n                <Stat\n                  title={`APR`}\n                  stat={combinedApr ? `${combinedApr}%` : '-'}\n                  titlePosition=\"top\"\n                  titleFontSize={14}\n                  statFontSize={16}\n                  titleColor=\"text4\"\n                />\n              </CardContentBox>\n            )}\n\n            {type === 'detail' && (\n              <Box>\n                <ContentBox>\n                  {renderPoolDataRow(\n                    t('migratePage.dollarWorth'),\n                    `${finalUsd ? `$${Number(finalUsd).toFixed(2)}` : '-'}`\n                  )}\n                  {renderPoolDataRow(\n                    `${t('dashboardPage.earned_weeklyIncome')}`,\n                    `${hypotheticalWeeklyRewardRate.toSignificant(4, { groupSeparator: ',' })} PNG`\n                  )}\n\n                  {isSuperFarm && (\n                    <ExtraRewardDataBox key=\"extra-reward\">\n                      <Text color=\"text4\" fontSize={16}>\n                        {t('earn.extraReward')}\n                      </Text>\n\n                      <Box textAlign=\"right\">\n                        {rewardTokensAmount?.map((reward, index) => {\n                          const tokenMultiplier = stakingInfo?.rewardTokensMultiplier?.[index]\n                          const extraTokenWeeklyRewardRate = stakingInfo?.getExtraTokensWeeklyRewardRate?.(\n                            hypotheticalWeeklyRewardRate,\n                            reward?.token,\n                            tokenMultiplier\n                          )\n                          if (extraTokenWeeklyRewardRate) {\n                            return (\n                              <Text color=\"text4\" fontSize={16} key={index}>\n                                {extraTokenWeeklyRewardRate.toSignificant(4, { groupSeparator: ',' })}{' '}\n                                {reward?.token?.symbol}\n                              </Text>\n                            )\n                          }\n                          return null\n                        })}\n                      </Box>\n                    </ExtraRewardDataBox>\n                  )}\n                </ContentBox>\n              </Box>\n            )}\n          </Box>\n\n          <Buttons>\n            <Button\n              variant={approval === ApprovalState.APPROVED || signatureData !== null ? 'confirm' : 'primary'}\n              onClick={onAttemptToApprove}\n              isDisabled={approval !== ApprovalState.NOT_APPROVED || signatureData !== null}\n              loading={attempting && !hash}\n              loadingText={t('migratePage.loading')}\n            >\n              {t('earn.approve')}\n            </Button>\n\n            <Button\n              variant=\"primary\"\n              isDisabled={!!error || (signatureData === null && approval !== ApprovalState.APPROVED)}\n              onClick={() => {\n                onStake()\n              }}\n              loading={attempting && !hash}\n              loadingText={t('migratePage.loading')}\n            >\n              {error ?? t('earn.deposit')}\n            </Button>\n          </Buttons>\n        </>\n      )}\n\n      {attempting && !hash && <Loader size={100} label={`${t('earn.depositingLiquidity')}`} />}\n      {attempting && hash && (\n        <TransactionCompleted\n          submitText={`${t('earn.deposited')}`}\n          isShowButtton={type === 'card' ? false : true}\n          onButtonClick={() => handleDismissConfirmation()}\n          buttonText=\"Close\"\n        />\n      )}\n\n      {isPoolDrawerOpen && (\n        <SelectPoolDrawer\n          isOpen={isPoolDrawerOpen}\n          onClose={handleSelectPoolDrawerClose}\n          onPoolSelect={onPoolSelect}\n          selectedPair={selectedPair}\n        />\n      )}\n    </StakeWrapper>\n  )\n}\nexport default Stake\n"]},"metadata":{},"sourceType":"module"}