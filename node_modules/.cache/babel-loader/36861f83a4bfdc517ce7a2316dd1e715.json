{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/SearchModal/CommonBases.tsx\";\nimport React from 'react';\nimport { Text } from 'rebass';\nimport { currencyEquals, CAVAX, Token } from '@pangolindex/sdk';\nimport styled from 'styled-components';\nimport { SUGGESTED_BASES } from '../../constants';\nimport { AutoColumn } from '../Column';\nimport QuestionHelper from '../QuestionHelper';\nimport { AutoRow } from '../Row';\nimport CurrencyLogo from '../CurrencyLogo';\nimport { useTranslation } from 'react-i18next';\nimport { useChainId } from 'src/hooks';\nconst BaseWrapper = styled.div`\n  border: 1px solid ${_ref => {\n  let {\n    theme,\n    disable\n  } = _ref;\n  return disable ? 'transparent' : theme.bg3;\n}};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${_ref2 => {\n  let {\n    disable\n  } = _ref2;\n  return !disable && 'pointer';\n}};\n    background-color: ${_ref3 => {\n  let {\n    theme,\n    disable\n  } = _ref3;\n  return !disable && theme.bg2;\n}};\n  }\n\n  background-color: ${_ref4 => {\n  let {\n    theme,\n    disable\n  } = _ref4;\n  return disable && theme.bg3;\n}};\n  opacity: ${_ref5 => {\n  let {\n    disable\n  } = _ref5;\n  return disable && '0.4';\n}};\n`;\nexport default function CommonBases(_ref6) {\n  let {\n    onSelect,\n    selectedCurrency\n  } = _ref6;\n  const chainId = useChainId();\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AutoRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 500,\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, t('searchModal.commonBases')), /*#__PURE__*/React.createElement(QuestionHelper, {\n    text: t('searchModal.tokensPairsHelper'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(AutoRow, {\n    gap: \"4px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BaseWrapper, {\n    onClick: () => {\n      if (!selectedCurrency || !currencyEquals(selectedCurrency, CAVAX[chainId])) {\n        onSelect(CAVAX[chainId]);\n      }\n    },\n    disable: selectedCurrency === CAVAX[chainId],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, chainId && /*#__PURE__*/React.createElement(CurrencyLogo, {\n    currency: chainId && CAVAX[chainId],\n    style: {\n      marginRight: 8\n    },\n    chainId: chainId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 500,\n    fontSize: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"AVAX\")), (chainId ? SUGGESTED_BASES[chainId] : []).map(token => {\n    const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address;\n    return /*#__PURE__*/React.createElement(BaseWrapper, {\n      onClick: () => !selected && onSelect(token),\n      disable: selected,\n      key: token.address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, chainId && /*#__PURE__*/React.createElement(CurrencyLogo, {\n      currency: token,\n      style: {\n        marginRight: 8\n      },\n      chainId: chainId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Text, {\n      fontWeight: 500,\n      fontSize: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, token.symbol));\n  })));\n}","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/SearchModal/CommonBases.tsx"],"names":["React","Text","currencyEquals","CAVAX","Token","styled","SUGGESTED_BASES","AutoColumn","QuestionHelper","AutoRow","CurrencyLogo","useTranslation","useChainId","BaseWrapper","div","theme","disable","bg3","bg2","CommonBases","onSelect","selectedCurrency","chainId","t","marginRight","map","token","selected","address","symbol"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Text } from 'rebass'\nimport { Currency, currencyEquals, CAVAX, Token } from '@pangolindex/sdk'\nimport styled from 'styled-components'\n\nimport { SUGGESTED_BASES } from '../../constants'\nimport { AutoColumn } from '../Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Row'\nimport CurrencyLogo from '../CurrencyLogo'\nimport { useTranslation } from 'react-i18next'\nimport { useChainId } from 'src/hooks'\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.bg3)};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.bg2};\n  }\n\n  background-color: ${({ theme, disable }) => disable && theme.bg3};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nexport default function CommonBases({\n  onSelect,\n  selectedCurrency\n}: {\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  const chainId = useChainId()\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow>\n        <Text fontWeight={500} fontSize={14}>\n          {t('searchModal.commonBases')}\n        </Text>\n        <QuestionHelper text={t('searchModal.tokensPairsHelper')} />\n      </AutoRow>\n      <AutoRow gap=\"4px\">\n        <BaseWrapper\n          onClick={() => {\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, CAVAX[chainId])) {\n              onSelect(CAVAX[chainId])\n            }\n          }}\n          disable={selectedCurrency === CAVAX[chainId]}\n        >\n          {chainId && (\n            <CurrencyLogo currency={chainId && CAVAX[chainId]} style={{ marginRight: 8 }} chainId={chainId} />\n          )}\n          <Text fontWeight={500} fontSize={16}>\n            AVAX\n          </Text>\n        </BaseWrapper>\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\n          return (\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\n              {chainId && <CurrencyLogo currency={token} style={{ marginRight: 8 }} chainId={chainId} />}\n              <Text fontWeight={500} fontSize={16}>\n                {token.symbol}\n              </Text>\n            </BaseWrapper>\n          )\n        })}\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}