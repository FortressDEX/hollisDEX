{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Earn/RewardCard/index.tsx\";\nimport React from 'react';\nimport { AutoColumn } from '../../../components/Column';\nimport styled from 'styled-components';\nimport { JSBI } from '@pangolindex/sdk';\nimport { TYPE } from '../../../theme';\nimport { RowBetween } from '../../../components/Row';\nimport { DataCard, CardNoise, CardBGImage } from '../../../components/earn/styled';\nimport { ButtonEmpty } from '../../../components/Button';\nimport { CountUp } from 'use-count-up';\nimport usePrevious from '../../../hooks/usePrevious';\nimport { BIG_INT_ZERO } from '../../../constants';\nimport { useTranslation } from 'react-i18next';\nconst StyledBottomCard = styled(DataCard)`\n  background: ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.bg3;\n}};\n  opacity: ${_ref2 => {\n  let {\n    dim\n  } = _ref2;\n  return dim ? 0.4 : 1;\n}};\n  margin-top: ${_ref3 => {\n  let {\n    isOverlay\n  } = _ref3;\n  return isOverlay ? '-40px' : '-24px';\n}};\n  padding: 0 1.25rem 1rem 1.25rem;\n  padding-top: 32px;\n  z-index: 1;\n`;\n\nconst RewardCard = _ref4 => {\n  var _earnedAmount$toFixed, _usePrevious, _weeklyRewardRate$toS;\n\n  let {\n    stakedAmount,\n    earnedAmount,\n    weeklyRewardRate,\n    currency,\n    setShowClaimRewardModal,\n    isOverlay,\n    isSuperFarm = true\n  } = _ref4;\n  const countUpAmount = (_earnedAmount$toFixed = earnedAmount === null || earnedAmount === void 0 ? void 0 : earnedAmount.toFixed(6)) !== null && _earnedAmount$toFixed !== void 0 ? _earnedAmount$toFixed : '0';\n  const countUpAmountPrevious = (_usePrevious = usePrevious(countUpAmount)) !== null && _usePrevious !== void 0 ? _usePrevious : '0';\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/React.createElement(StyledBottomCard, {\n    dim: stakedAmount === null || stakedAmount === void 0 ? void 0 : stakedAmount.equalTo(BIG_INT_ZERO),\n    isOverlay: isOverlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardBGImage, {\n    desaturate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardNoise, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, t('earnPage.unclaimedReward', {\n    symbol: currency ? currency === null || currency === void 0 ? void 0 : currency.symbol : 'PNG'\n  }))), !isSuperFarm && earnedAmount && JSBI.notEqual(BIG_INT_ZERO, earnedAmount === null || earnedAmount === void 0 ? void 0 : earnedAmount.raw) && /*#__PURE__*/React.createElement(ButtonEmpty, {\n    padding: \"8px\",\n    borderRadius: \"8px\",\n    width: \"fit-content\",\n    onClick: () => setShowClaimRewardModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, t('earnPage.claim'))), /*#__PURE__*/React.createElement(RowBetween, {\n    style: {\n      alignItems: 'baseline'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.largeHeader, {\n    fontSize: 36,\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CountUp, {\n    key: countUpAmount,\n    isCounting: true,\n    decimalPlaces: 4,\n    start: parseFloat(countUpAmountPrevious),\n    end: parseFloat(countUpAmount),\n    thousandsSeparator: ',',\n    duration: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(TYPE.black, {\n    fontSize: 16,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"wizard-icon\",\n    style: {\n      marginRight: '8px '\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"\\u26A1\"), (_weeklyRewardRate$toS = weeklyRewardRate === null || weeklyRewardRate === void 0 ? void 0 : weeklyRewardRate.toSignificant(4, {\n    groupSeparator: ','\n  })) !== null && _weeklyRewardRate$toS !== void 0 ? _weeklyRewardRate$toS : '-', t('earnPage.rewardPerWeek', {\n    symbol: currency ? currency === null || currency === void 0 ? void 0 : currency.symbol : 'PNG'\n  })))));\n};\n\nexport default RewardCard;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Earn/RewardCard/index.tsx"],"names":["React","AutoColumn","styled","JSBI","TYPE","RowBetween","DataCard","CardNoise","CardBGImage","ButtonEmpty","CountUp","usePrevious","BIG_INT_ZERO","useTranslation","StyledBottomCard","theme","bg3","dim","isOverlay","RewardCard","stakedAmount","earnedAmount","weeklyRewardRate","currency","setShowClaimRewardModal","isSuperFarm","countUpAmount","toFixed","countUpAmountPrevious","t","equalTo","symbol","notEqual","raw","alignItems","parseFloat","marginRight","toSignificant","groupSeparator"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { AutoColumn } from '../../../components/Column'\nimport styled from 'styled-components'\nimport { JSBI, Currency, TokenAmount } from '@pangolindex/sdk'\nimport { TYPE } from '../../../theme'\nimport { RowBetween } from '../../../components/Row'\nimport { DataCard, CardNoise, CardBGImage } from '../../../components/earn/styled'\nimport { ButtonEmpty } from '../../../components/Button'\nimport { CountUp } from 'use-count-up'\nimport usePrevious from '../../../hooks/usePrevious'\nimport { BIG_INT_ZERO } from '../../../constants'\nimport { useTranslation } from 'react-i18next'\n\nconst StyledBottomCard = styled(DataCard)<{ dim: any; isOverlay: boolean }>`\n  background: ${({ theme }) => theme.bg3};\n  opacity: ${({ dim }) => (dim ? 0.4 : 1)};\n  margin-top: ${({ isOverlay }) => (isOverlay ? '-40px' : '-24px')};\n  padding: 0 1.25rem 1rem 1.25rem;\n  padding-top: 32px;\n  z-index: 1;\n`\n\nexport interface ManageProps {\n  stakedAmount: TokenAmount\n  earnedAmount: TokenAmount\n  weeklyRewardRate?: TokenAmount | undefined\n  currency?: Currency | null | undefined\n  setShowClaimRewardModal: () => void\n  isOverlay: boolean\n  isSuperFarm?: boolean\n}\n\nconst RewardCard: React.FC<ManageProps> = ({\n  stakedAmount,\n  earnedAmount,\n  weeklyRewardRate,\n  currency,\n  setShowClaimRewardModal,\n  isOverlay,\n  isSuperFarm = true\n}) => {\n  const countUpAmount = earnedAmount?.toFixed(6) ?? '0'\n  const countUpAmountPrevious = usePrevious(countUpAmount) ?? '0'\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledBottomCard dim={stakedAmount?.equalTo(BIG_INT_ZERO)} isOverlay={isOverlay}>\n      <CardBGImage desaturate />\n      <CardNoise />\n      <AutoColumn gap=\"sm\">\n        <RowBetween>\n          <div>\n            <TYPE.black>{t('earnPage.unclaimedReward', { symbol: currency ? currency?.symbol : 'PNG' })}</TYPE.black>\n          </div>\n          {!isSuperFarm && earnedAmount && JSBI.notEqual(BIG_INT_ZERO, earnedAmount?.raw) && (\n            <ButtonEmpty padding=\"8px\" borderRadius=\"8px\" width=\"fit-content\" onClick={() => setShowClaimRewardModal()}>\n              {t('earnPage.claim')}\n            </ButtonEmpty>\n          )}\n        </RowBetween>\n        <RowBetween style={{ alignItems: 'baseline' }}>\n          <TYPE.largeHeader fontSize={36} fontWeight={600}>\n            <CountUp\n              key={countUpAmount}\n              isCounting\n              decimalPlaces={4}\n              start={parseFloat(countUpAmountPrevious)}\n              end={parseFloat(countUpAmount)}\n              thousandsSeparator={','}\n              duration={1}\n            />\n          </TYPE.largeHeader>\n          <TYPE.black fontSize={16} fontWeight={500}>\n            <span role=\"img\" aria-label=\"wizard-icon\" style={{ marginRight: '8px ' }}>\n              ⚡\n            </span>\n            {weeklyRewardRate?.toSignificant(4, { groupSeparator: ',' }) ?? '-'}\n            {t('earnPage.rewardPerWeek', { symbol: currency ? currency?.symbol : 'PNG' })}\n          </TYPE.black>\n        </RowBetween>\n      </AutoColumn>\n    </StyledBottomCard>\n  )\n}\n\nexport default RewardCard\n"]},"metadata":{},"sourceType":"module"}