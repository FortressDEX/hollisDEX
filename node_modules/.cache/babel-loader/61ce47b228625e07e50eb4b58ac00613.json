{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Swap/WatchList/index.tsx\";\nimport React, { useContext, useRef, useState, useMemo } from 'react';\nimport { Box, Button } from '@pangolindex/components';\nimport { ChainId } from '@pangolindex/sdk';\nimport { Plus } from 'react-feather';\nimport { ThemeContext } from 'styled-components';\nimport { PNG } from 'src/constants/tokens';\nimport { useActiveWeb3React } from 'src/hooks';\nimport WatchlistRow from './WatchlistRow';\nimport { WatchListRoot, GridContainer, Title, DesktopWatchList, MobileWatchList } from './styleds';\nimport Scrollbars from 'react-custom-scrollbars';\nimport CoinChart from './CoinChart';\nimport CurrencyPopover from './CurrencyPopover';\nimport { useOnClickOutside } from 'src/hooks/useOnClickOutside';\nimport useToggle from 'src/hooks/useToggle';\nimport { useSelectedCurrencyLists } from 'src/state/watchlists/hooks';\nimport { useTranslation } from 'react-i18next';\nimport { useAllTokens } from 'src/hooks/Tokens';\nimport ShowMore from 'src/components/Beta/ShowMore';\nimport { Hidden } from 'src/theme';\nimport { CHAINS } from 'src/constants/chains';\n\nconst WatchList = _ref => {\n  let {\n    isLimitOrders\n  } = _ref;\n  const {\n    chainId = ChainId.AVALANCHE\n  } = useActiveWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const [showMore, setShowMore] = useState(false);\n  const allTokens = useAllTokens();\n  const coins = Object.values(allTokens || {});\n  const watchListCurrencies = useSelectedCurrencyLists();\n  const theme = useContext(ThemeContext);\n  const [selectedToken, setSelectedToken] = useState((watchListCurrencies === null || watchListCurrencies === void 0 ? void 0 : watchListCurrencies[0]) || {});\n  const [open, toggle] = useToggle(false);\n  const node = useRef();\n  const popoverRef = useRef(null);\n  const referenceElement = useRef(null);\n  const currencies = useMemo(() => (watchListCurrencies || []).length === 0 ? [PNG[chainId]] : watchListCurrencies, [chainId, watchListCurrencies]);\n  useOnClickOutside(node, open ? toggle : undefined);\n  return /*#__PURE__*/React.createElement(WatchListRoot, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, t('swapPage.watchList')), /*#__PURE__*/React.createElement(Box, {\n    bgColor: theme.bg5,\n    position: \"relative\",\n    p: '5px',\n    ref: node,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    ref: referenceElement,\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    backgroundColor: \"primary\",\n    color: \"white\",\n    width: '32px',\n    height: '32px',\n    padding: \"0px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Plus, {\n    size: 12,\n    color: 'black',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }))), open && /*#__PURE__*/React.createElement(CurrencyPopover, {\n    getRef: ref => popoverRef.current = ref,\n    coins: coins,\n    isOpen: open,\n    onSelectCurrency: currency => {\n      setSelectedToken(currency);\n      toggle();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(GridContainer, {\n    isLimitOrders: isLimitOrders,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, CHAINS[chainId].is_mainnet ? !isLimitOrders && /*#__PURE__*/React.createElement(Hidden, {\n    upToSmall: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CoinChart, {\n    coin: selectedToken,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  })) : isLimitOrders && /*#__PURE__*/React.createElement(Hidden, {\n    upToSmall: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CoinChart, {\n    coin: selectedToken,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(DesktopWatchList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Scrollbars, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, (currencies || []).map(coin => /*#__PURE__*/React.createElement(WatchlistRow, {\n    coin: coin,\n    key: coin.address,\n    onClick: () => setSelectedToken(coin),\n    onRemove: () => setSelectedToken(PNG[chainId]),\n    isSelected: (coin === null || coin === void 0 ? void 0 : coin.address) === (selectedToken === null || selectedToken === void 0 ? void 0 : selectedToken.address),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(MobileWatchList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, (currencies || []).slice(0, 3).map(coin => /*#__PURE__*/React.createElement(WatchlistRow, {\n    coin: coin,\n    key: coin.address,\n    onClick: () => setSelectedToken(coin),\n    onRemove: () => setSelectedToken(PNG[chainId]),\n    isSelected: (coin === null || coin === void 0 ? void 0 : coin.address) === (selectedToken === null || selectedToken === void 0 ? void 0 : selectedToken.address),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  })), showMore && (currencies || []).slice(3).map(coin => /*#__PURE__*/React.createElement(WatchlistRow, {\n    coin: coin,\n    key: coin.address,\n    onClick: () => setSelectedToken(coin),\n    onRemove: () => setSelectedToken(PNG[chainId]),\n    isSelected: (coin === null || coin === void 0 ? void 0 : coin.address) === (selectedToken === null || selectedToken === void 0 ? void 0 : selectedToken.address),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  })), currencies.length > 3 && /*#__PURE__*/React.createElement(ShowMore, {\n    showMore: showMore,\n    onToggle: () => setShowMore(!showMore),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 37\n    }\n  }))));\n};\n\nexport default WatchList;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Swap/WatchList/index.tsx"],"names":["React","useContext","useRef","useState","useMemo","Box","Button","ChainId","Plus","ThemeContext","PNG","useActiveWeb3React","WatchlistRow","WatchListRoot","GridContainer","Title","DesktopWatchList","MobileWatchList","Scrollbars","CoinChart","CurrencyPopover","useOnClickOutside","useToggle","useSelectedCurrencyLists","useTranslation","useAllTokens","ShowMore","Hidden","CHAINS","WatchList","isLimitOrders","chainId","AVALANCHE","t","showMore","setShowMore","allTokens","coins","Object","values","watchListCurrencies","theme","selectedToken","setSelectedToken","open","toggle","node","popoverRef","referenceElement","currencies","length","undefined","bg5","ref","current","currency","is_mainnet","map","coin","address","slice"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,EAAoCC,QAApC,EAA8CC,OAA9C,QAA6D,OAA7D;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,yBAA5B;AACA,SAASC,OAAT,QAA+B,kBAA/B;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,GAAT,QAAoB,sBAApB;AACA,SAASC,kBAAT,QAAmC,WAAnC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,KAAvC,EAA8CC,gBAA9C,EAAgEC,eAAhE,QAAuF,WAAvF;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,wBAAT,QAAyC,4BAAzC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,MAAT,QAAuB,sBAAvB;;AAMA,MAAMC,SAA0B,GAAG,QAAuB;AAAA,MAAtB;AAAEC,IAAAA;AAAF,GAAsB;AACxD,QAAM;AAAEC,IAAAA,OAAO,GAAGxB,OAAO,CAACyB;AAApB,MAAkCrB,kBAAkB,EAA1D;AACA,QAAM;AAAEsB,IAAAA;AAAF,MAAQT,cAAc,EAA5B;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BhC,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMiC,SAAS,GAAGX,YAAY,EAA9B;AACA,QAAMY,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAcH,SAAS,IAAI,EAA3B,CAAd;AAEA,QAAMI,mBAAmB,GAAGjB,wBAAwB,EAApD;AACA,QAAMkB,KAAK,GAAGxC,UAAU,CAACQ,YAAD,CAAxB;AACA,QAAM,CAACiC,aAAD,EAAgBC,gBAAhB,IAAoCxC,QAAQ,CAAC,CAAAqC,mBAAmB,SAAnB,IAAAA,mBAAmB,WAAnB,YAAAA,mBAAmB,CAAG,CAAH,CAAnB,KAA6B,EAA9B,CAAlD;AAEA,QAAM,CAACI,IAAD,EAAOC,MAAP,IAAiBvB,SAAS,CAAC,KAAD,CAAhC;AACA,QAAMwB,IAAI,GAAG5C,MAAM,EAAnB;AAEA,QAAM6C,UAAU,GAAG7C,MAAM,CAAmB,IAAnB,CAAzB;AACA,QAAM8C,gBAAgB,GAAG9C,MAAM,CAAmB,IAAnB,CAA/B;AAEA,QAAM+C,UAAU,GAAG7C,OAAO,CACxB,MAAO,CAACoC,mBAAmB,IAAI,EAAxB,EAA4BU,MAA5B,KAAuC,CAAvC,GAA4C,CAACxC,GAAG,CAACqB,OAAD,CAAJ,CAA5C,GAA0ES,mBADzD,EAGxB,CAACT,OAAD,EAAUS,mBAAV,CAHwB,CAA1B;AAMAnB,EAAAA,iBAAiB,CAACyB,IAAD,EAAOF,IAAI,GAAGC,MAAH,GAAYM,SAAvB,CAAjB;AAEA,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,UAAU,EAAC,QAA/B;AAAwC,IAAA,cAAc,EAAC,eAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQlB,CAAC,CAAC,oBAAD,CAAT,CADF,eAEE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAEQ,KAAK,CAACW,GAApB;AAAgC,IAAA,QAAQ,EAAC,UAAzC;AAAoD,IAAA,CAAC,EAAE,KAAvD;AAA8D,IAAA,GAAG,EAAEN,IAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAEE,gBAAV;AAA4B,IAAA,OAAO,EAAEH,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,SADV;AAEE,IAAA,eAAe,EAAC,SAFlB;AAGE,IAAA,KAAK,EAAC,OAHR;AAIE,IAAA,KAAK,EAAE,MAJT;AAKE,IAAA,MAAM,EAAE,MALV;AAME,IAAA,OAAO,EAAC,KANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAZ;AAAgB,IAAA,KAAK,EAAE,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,CADF,EAcGD,IAAI,iBACH,oBAAC,eAAD;AACE,IAAA,MAAM,EAAGS,GAAD,IAA6BN,UAAD,CAAoBO,OAApB,GAA8BD,GADpE;AAEE,IAAA,KAAK,EAAEhB,KAFT;AAGE,IAAA,MAAM,EAAEO,IAHV;AAIE,IAAA,gBAAgB,EAAGW,QAAD,IAAqB;AACrCZ,MAAAA,gBAAgB,CAACY,QAAD,CAAhB;AACAV,MAAAA,MAAM;AACP,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,CAFF,CADF,eA8BE,oBAAC,aAAD;AAAe,IAAA,aAAa,EAAEf,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,MAAM,CAACG,OAAD,CAAN,CAAgByB,UAAhB,GACG,CAAC1B,aAAD,iBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAE,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEY,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFL,GAMGZ,aAAa,iBACX,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAE,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEY,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARR,eAaE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACO,UAAU,IAAI,EAAf,EAAmBQ,GAAnB,CAAuBC,IAAI,iBAC1B,oBAAC,YAAD;AACE,IAAA,IAAI,EAAEA,IADR;AAEE,IAAA,GAAG,EAAEA,IAAI,CAACC,OAFZ;AAGE,IAAA,OAAO,EAAE,MAAMhB,gBAAgB,CAACe,IAAD,CAHjC;AAIE,IAAA,QAAQ,EAAE,MAAMf,gBAAgB,CAACjC,GAAG,CAACqB,OAAD,CAAJ,CAJlC;AAKE,IAAA,UAAU,EAAE,CAAA2B,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEC,OAAN,OAAkBjB,aAAlB,aAAkBA,aAAlB,uBAAkBA,aAAa,CAAEiB,OAAjC,CALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CAbF,eA0BE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACV,UAAU,IAAI,EAAf,EAAmBW,KAAnB,CAAyB,CAAzB,EAA4B,CAA5B,EAA+BH,GAA/B,CAAmCC,IAAI,iBACtC,oBAAC,YAAD;AACE,IAAA,IAAI,EAAEA,IADR;AAEE,IAAA,GAAG,EAAEA,IAAI,CAACC,OAFZ;AAGE,IAAA,OAAO,EAAE,MAAMhB,gBAAgB,CAACe,IAAD,CAHjC;AAIE,IAAA,QAAQ,EAAE,MAAMf,gBAAgB,CAACjC,GAAG,CAACqB,OAAD,CAAJ,CAJlC;AAKE,IAAA,UAAU,EAAE,CAAA2B,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEC,OAAN,OAAkBjB,aAAlB,aAAkBA,aAAlB,uBAAkBA,aAAa,CAAEiB,OAAjC,CALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,EAWGzB,QAAQ,IACP,CAACe,UAAU,IAAI,EAAf,EACGW,KADH,CACS,CADT,EAEGH,GAFH,CAEOC,IAAI,iBACP,oBAAC,YAAD;AACE,IAAA,IAAI,EAAEA,IADR;AAEE,IAAA,GAAG,EAAEA,IAAI,CAACC,OAFZ;AAGE,IAAA,OAAO,EAAE,MAAMhB,gBAAgB,CAACe,IAAD,CAHjC;AAIE,IAAA,QAAQ,EAAE,MAAMf,gBAAgB,CAACjC,GAAG,CAACqB,OAAD,CAAJ,CAJlC;AAKE,IAAA,UAAU,EAAE,CAAA2B,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEC,OAAN,OAAkBjB,aAAlB,aAAkBA,aAAlB,uBAAkBA,aAAa,CAAEiB,OAAjC,CALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAZJ,EAwBGV,UAAU,CAACC,MAAX,GAAoB,CAApB,iBAAyB,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEhB,QAApB;AAA8B,IAAA,QAAQ,EAAE,MAAMC,WAAW,CAAC,CAACD,QAAF,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxB5B,CA1BF,CA9BF,CADF;AAsFD,CA/GD;;AAgHA,eAAeL,SAAf","sourcesContent":["import React, { useContext, useRef, useState, useMemo } from 'react'\nimport { Box, Button } from '@pangolindex/components'\nimport { ChainId, Token } from '@pangolindex/sdk'\nimport { Plus } from 'react-feather'\nimport { ThemeContext } from 'styled-components'\nimport { PNG } from 'src/constants/tokens'\nimport { useActiveWeb3React } from 'src/hooks'\nimport WatchlistRow from './WatchlistRow'\nimport { WatchListRoot, GridContainer, Title, DesktopWatchList, MobileWatchList } from './styleds'\nimport Scrollbars from 'react-custom-scrollbars'\nimport CoinChart from './CoinChart'\nimport CurrencyPopover from './CurrencyPopover'\nimport { useOnClickOutside } from 'src/hooks/useOnClickOutside'\nimport useToggle from 'src/hooks/useToggle'\nimport { useSelectedCurrencyLists } from 'src/state/watchlists/hooks'\nimport { useTranslation } from 'react-i18next'\nimport { useAllTokens } from 'src/hooks/Tokens'\nimport ShowMore from 'src/components/Beta/ShowMore'\nimport { Hidden } from 'src/theme'\nimport { CHAINS } from 'src/constants/chains'\n\ntype Props = {\n  isLimitOrders?: boolean\n}\n\nconst WatchList: React.FC<Props> = ({ isLimitOrders }) => {\n  const { chainId = ChainId.AVALANCHE } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const [showMore, setShowMore] = useState(false as boolean)\n  const allTokens = useAllTokens()\n  const coins = Object.values(allTokens || {})\n\n  const watchListCurrencies = useSelectedCurrencyLists()\n  const theme = useContext(ThemeContext)\n  const [selectedToken, setSelectedToken] = useState(watchListCurrencies?.[0] || ({} as Token))\n\n  const [open, toggle] = useToggle(false)\n  const node = useRef<HTMLDivElement>()\n\n  const popoverRef = useRef<HTMLInputElement>(null)\n  const referenceElement = useRef<HTMLInputElement>(null)\n\n  const currencies = useMemo(\n    () => ((watchListCurrencies || []).length === 0 ? ([PNG[chainId]] as Token[]) : (watchListCurrencies as Token[])),\n\n    [chainId, watchListCurrencies]\n  )\n\n  useOnClickOutside(node, open ? toggle : undefined)\n\n  return (\n    <WatchListRoot>\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n        <Title>{t('swapPage.watchList')}</Title>\n        <Box bgColor={theme.bg5 as any} position=\"relative\" p={'5px'} ref={node as any}>\n          <Box ref={referenceElement} onClick={toggle}>\n            <Button\n              variant=\"primary\"\n              backgroundColor=\"primary\"\n              color=\"white\"\n              width={'32px'}\n              height={'32px'}\n              padding=\"0px\"\n            >\n              <Plus size={12} color={'black'} />\n            </Button>\n          </Box>\n\n          {open && (\n            <CurrencyPopover\n              getRef={(ref: HTMLInputElement) => ((popoverRef as any).current = ref)}\n              coins={coins}\n              isOpen={open}\n              onSelectCurrency={(currency: Token) => {\n                setSelectedToken(currency)\n                toggle()\n              }}\n            />\n          )}\n        </Box>\n      </Box>\n      <GridContainer isLimitOrders={isLimitOrders}>\n        {CHAINS[chainId].is_mainnet\n          ? !isLimitOrders && (\n              <Hidden upToSmall={true}>\n                <CoinChart coin={selectedToken} />\n              </Hidden>\n            )\n          : isLimitOrders && (\n              <Hidden upToSmall={true}>\n                <CoinChart coin={selectedToken} />\n              </Hidden>\n            )}\n\n        <DesktopWatchList>\n          <Scrollbars>\n            {(currencies || []).map(coin => (\n              <WatchlistRow\n                coin={coin}\n                key={coin.address}\n                onClick={() => setSelectedToken(coin)}\n                onRemove={() => setSelectedToken(PNG[chainId])}\n                isSelected={coin?.address === selectedToken?.address}\n              />\n            ))}\n          </Scrollbars>\n        </DesktopWatchList>\n        <MobileWatchList>\n          {(currencies || []).slice(0, 3).map(coin => (\n            <WatchlistRow\n              coin={coin}\n              key={coin.address}\n              onClick={() => setSelectedToken(coin)}\n              onRemove={() => setSelectedToken(PNG[chainId])}\n              isSelected={coin?.address === selectedToken?.address}\n            />\n          ))}\n\n          {showMore &&\n            (currencies || [])\n              .slice(3)\n              .map(coin => (\n                <WatchlistRow\n                  coin={coin}\n                  key={coin.address}\n                  onClick={() => setSelectedToken(coin)}\n                  onRemove={() => setSelectedToken(PNG[chainId])}\n                  isSelected={coin?.address === selectedToken?.address}\n                />\n              ))}\n\n          {currencies.length > 3 && <ShowMore showMore={showMore} onToggle={() => setShowMore(!showMore)} />}\n        </MobileWatchList>\n      </GridContainer>\n    </WatchListRoot>\n  )\n}\nexport default WatchList\n"]},"metadata":{},"sourceType":"module"}