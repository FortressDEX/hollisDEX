{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Stake/index.tsx\";\nimport React, { useMemo, useState } from 'react';\nimport { AutoColumn } from '../../components/Column';\nimport styled from 'styled-components';\nimport { useSingleSideStakingInfo } from '../../state/stake/hooks';\nimport { SINGLE_SIDE_STAKING_REWARDS_INFO } from '../../state/stake/singleSideConfig';\nimport { TYPE } from '../../theme';\nimport SingleSidePoolCard from '../../components/earn/SingleSidePoolCard';\nimport { RowBetween } from '../../components/Row';\nimport { CardSection, DataCard } from '../../components/earn/styled';\nimport Loader from '../../components/Loader';\nimport { useChainId } from '../../hooks';\nimport { BIG_INT_ZERO } from '../../constants';\nimport { useTranslation } from 'react-i18next';\nconst PageWrapper = styled(AutoColumn)`\n  max-width: 640px;\n  width: 100%;\n`;\nconst TopSection = styled(AutoColumn)`\n  max-width: 720px;\n  width: 100%;\n`;\nconst PoolSection = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  column-gap: 10px;\n  row-gap: 15px;\n  width: 100%;\n  justify-self: center;\n`;\nexport default function Earn(_ref) {\n  var _SINGLE_SIDE_STAKING_, _SINGLE_SIDE_STAKING_2;\n\n  let {\n    match: {\n      params: {\n        version\n      }\n    }\n  } = _ref;\n  const chainId = useChainId();\n  const {\n    t\n  } = useTranslation();\n  const stakingInfos = useSingleSideStakingInfo(Number(version));\n  const [stakingInfoResults, setStakingInfoResults] = useState();\n  useMemo(() => {\n    Promise.all(stakingInfos === null || stakingInfos === void 0 ? void 0 : stakingInfos.filter(function (info) {\n      // Only include pools that are live or require a migration\n      return !info.isPeriodFinished || info.stakedAmount.greaterThan(BIG_INT_ZERO);\n    }).sort(function (info_a, info_b) {\n      var _info_a$totalStakedIn, _info_b$totalStakedIn;\n\n      // greater stake in png comes first\n      return ((_info_a$totalStakedIn = info_a.totalStakedInPng) === null || _info_a$totalStakedIn === void 0 ? void 0 : _info_a$totalStakedIn.greaterThan((_info_b$totalStakedIn = info_b.totalStakedInPng) !== null && _info_b$totalStakedIn !== void 0 ? _info_b$totalStakedIn : BIG_INT_ZERO)) ? -1 : 1;\n    }).sort(function (info_a, info_b) {\n      if (info_a.stakedAmount.greaterThan(BIG_INT_ZERO)) {\n        if (info_b.stakedAmount.greaterThan(BIG_INT_ZERO)) // both are being staked, so we keep the previous sorting\n          return 0; // the second is actually not at stake, so we should bring the first up\n        else return -1;\n      } else {\n        if (info_b.stakedAmount.greaterThan(BIG_INT_ZERO)) // first is not being staked, but second is, so we should bring the first down\n          return 1; // none are being staked, let's keep the  previous sorting\n        else return 0;\n      }\n    })).then(results => {\n      setStakingInfoResults(results);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [stakingInfos === null || stakingInfos === void 0 ? void 0 : stakingInfos.length]);\n  const DataRow = styled(RowBetween)`\n    ${_ref2 => {\n    let {\n      theme\n    } = _ref2;\n    return theme.mediaWidth.upToSmall`\n     flex-direction: column;\n   `;\n  }};\n  `;\n  const stakingRewardsExist = Boolean(typeof chainId === 'number' && ((_SINGLE_SIDE_STAKING_ = (_SINGLE_SIDE_STAKING_2 = SINGLE_SIDE_STAKING_REWARDS_INFO[chainId]) === null || _SINGLE_SIDE_STAKING_2 === void 0 ? void 0 : _SINGLE_SIDE_STAKING_2.length) !== null && _SINGLE_SIDE_STAKING_ !== void 0 ? _SINGLE_SIDE_STAKING_ : 0) > 0);\n  return /*#__PURE__*/React.createElement(PageWrapper, {\n    gap: \"lg\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TopSection, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DataCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, t('earnPage.pangolinLiquidityStaking'))), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, t('earnPage.depositPangolinStaking'))))))), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"lg\",\n    style: {\n      width: '100%',\n      maxWidth: '720px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DataRow, {\n    style: {\n      alignItems: 'baseline'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.mediumHeader, {\n    style: {\n      marginTop: '0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, t('earnPage.currentOpportunities'))), /*#__PURE__*/React.createElement(PoolSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, stakingRewardsExist && (stakingInfos === null || stakingInfos === void 0 ? void 0 : stakingInfos.length) === 0 ? /*#__PURE__*/React.createElement(Loader, {\n    style: {\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }) : !stakingRewardsExist ? t('earnPage.noActiveRewards') : stakingInfoResults === null || stakingInfoResults === void 0 ? void 0 : stakingInfoResults.map(stakingInfo => /*#__PURE__*/React.createElement(SingleSidePoolCard, {\n    key: stakingInfo.stakingRewardAddress,\n    stakingInfo: stakingInfo,\n    version: version,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Stake/index.tsx"],"names":["React","useMemo","useState","AutoColumn","styled","useSingleSideStakingInfo","SINGLE_SIDE_STAKING_REWARDS_INFO","TYPE","SingleSidePoolCard","RowBetween","CardSection","DataCard","Loader","useChainId","BIG_INT_ZERO","useTranslation","PageWrapper","TopSection","PoolSection","div","Earn","match","params","version","chainId","t","stakingInfos","Number","stakingInfoResults","setStakingInfoResults","Promise","all","filter","info","isPeriodFinished","stakedAmount","greaterThan","sort","info_a","info_b","totalStakedInPng","then","results","length","DataRow","theme","mediaWidth","upToSmall","stakingRewardsExist","Boolean","width","maxWidth","alignItems","marginTop","margin","map","stakingInfo","stakingRewardAddress"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react'\nimport { AutoColumn } from '../../components/Column'\nimport styled from 'styled-components'\nimport { useSingleSideStakingInfo } from '../../state/stake/hooks'\nimport { SINGLE_SIDE_STAKING_REWARDS_INFO } from '../../state/stake/singleSideConfig'\nimport { TYPE } from '../../theme'\nimport SingleSidePoolCard from '../../components/earn/SingleSidePoolCard'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { RowBetween } from '../../components/Row'\nimport { CardSection, DataCard } from '../../components/earn/styled'\nimport Loader from '../../components/Loader'\nimport { useChainId } from '../../hooks'\nimport { BIG_INT_ZERO } from '../../constants'\nimport { useTranslation } from 'react-i18next'\n\nconst PageWrapper = styled(AutoColumn)`\n  max-width: 640px;\n  width: 100%;\n`\n\nconst TopSection = styled(AutoColumn)`\n  max-width: 720px;\n  width: 100%;\n`\n\nconst PoolSection = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  column-gap: 10px;\n  row-gap: 15px;\n  width: 100%;\n  justify-self: center;\n`\n\nexport default function Earn({\n  match: {\n    params: { version }\n  }\n}: RouteComponentProps<{ version: string }>) {\n  const chainId = useChainId()\n  const { t } = useTranslation()\n  const stakingInfos = useSingleSideStakingInfo(Number(version))\n  const [stakingInfoResults, setStakingInfoResults] = useState<any[]>()\n\n  useMemo(() => {\n    Promise.all(\n      stakingInfos\n        ?.filter(function(info) {\n          // Only include pools that are live or require a migration\n          return !info.isPeriodFinished || info.stakedAmount.greaterThan(BIG_INT_ZERO)\n        })\n        .sort(function(info_a, info_b) {\n          // greater stake in png comes first\n          return info_a.totalStakedInPng?.greaterThan(info_b.totalStakedInPng ?? BIG_INT_ZERO) ? -1 : 1\n        })\n        .sort(function(info_a, info_b) {\n          if (info_a.stakedAmount.greaterThan(BIG_INT_ZERO)) {\n            if (info_b.stakedAmount.greaterThan(BIG_INT_ZERO))\n              // both are being staked, so we keep the previous sorting\n              return 0\n            // the second is actually not at stake, so we should bring the first up\n            else return -1\n          } else {\n            if (info_b.stakedAmount.greaterThan(BIG_INT_ZERO))\n              // first is not being staked, but second is, so we should bring the first down\n              return 1\n            // none are being staked, let's keep the  previous sorting\n            else return 0\n          }\n        })\n    ).then(results => {\n      setStakingInfoResults(results)\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [stakingInfos?.length])\n\n  const DataRow = styled(RowBetween)`\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n     flex-direction: column;\n   `};\n  `\n\n  const stakingRewardsExist = Boolean(\n    typeof chainId === 'number' && (SINGLE_SIDE_STAKING_REWARDS_INFO[chainId]?.length ?? 0) > 0\n  )\n\n  return (\n    <PageWrapper gap=\"lg\" justify=\"center\">\n      <TopSection gap=\"md\">\n        <DataCard>\n          <CardSection>\n            <AutoColumn gap=\"md\">\n              <RowBetween>\n                <TYPE.white fontWeight={600}>{t('earnPage.pangolinLiquidityStaking')}</TYPE.white>\n              </RowBetween>\n              <RowBetween>\n                <TYPE.white fontSize={14}>{t('earnPage.depositPangolinStaking')}</TYPE.white>\n              </RowBetween>\n            </AutoColumn>\n          </CardSection>\n        </DataCard>\n      </TopSection>\n\n      <AutoColumn gap=\"lg\" style={{ width: '100%', maxWidth: '720px' }}>\n        <DataRow style={{ alignItems: 'baseline' }}>\n          <TYPE.mediumHeader style={{ marginTop: '0.5rem' }}>{t('earnPage.currentOpportunities')}</TYPE.mediumHeader>\n        </DataRow>\n\n        <PoolSection>\n          {stakingRewardsExist && stakingInfos?.length === 0 ? (\n            <Loader style={{ margin: 'auto' }} />\n          ) : !stakingRewardsExist ? (\n            t('earnPage.noActiveRewards')\n          ) : (\n            stakingInfoResults?.map(stakingInfo => (\n              <SingleSidePoolCard key={stakingInfo.stakingRewardAddress} stakingInfo={stakingInfo} version={version} />\n            ))\n          )}\n        </PoolSection>\n      </AutoColumn>\n    </PageWrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}