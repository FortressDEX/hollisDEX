{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Pool/DetailModal/Details/index.tsx\";\nimport React from 'react';\nimport { useGetPoolDollerWorth } from 'src/state/stake/hooks';\nimport { unwrappedToken } from 'src/utils/wrappedCurrency';\nimport { CAVAX, Token } from '@pangolindex/sdk';\nimport { DetailsContainer } from './styled';\nimport { Box } from '@pangolindex/components';\nimport CoinDescription from 'src/components/Beta/CoinDescription';\nimport { usePair } from 'src/data/Reserves';\nimport StatDetail from '../StatDetail';\nimport numeral from 'numeral';\nimport { CHAINS } from 'src/constants/chains';\nimport { useChainId } from 'src/hooks';\n\nconst Details = _ref => {\n  var _ref2;\n\n  let {\n    stakingInfo\n  } = _ref;\n  const token0 = stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.tokens[0];\n  const token1 = stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.tokens[1];\n  const chainId = useChainId();\n  const totalStakedInUsd = CHAINS[chainId].is_mainnet ? numeral(stakingInfo.totalStakedInUsd.toSignificant(4)).format('$0.00a') : numeral(stakingInfo.totalStakedInUsd).format('$0.00a');\n  const yourStakeInUsd = CHAINS[chainId].is_mainnet ? stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.totalStakedInUsd.multiply(stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.stakedAmount).divide(stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.totalStakedAmount) : undefined;\n  const [, stakingTokenPair] = usePair(token0, token1);\n  const pair = stakingTokenPair;\n  const {\n    userPgl,\n    liquidityInUSD\n  } = useGetPoolDollerWorth(pair);\n  const isStaking = Boolean(stakingInfo.stakedAmount.greaterThan('0'));\n  const currency0 = (pair === null || pair === void 0 ? void 0 : pair.token0) ? unwrappedToken(pair === null || pair === void 0 ? void 0 : pair.token0, chainId) : undefined;\n  const currency1 = (pair === null || pair === void 0 ? void 0 : pair.token1) ? unwrappedToken(pair === null || pair === void 0 ? void 0 : pair.token1, chainId) : undefined;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DetailsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StatDetail, {\n    title: `Total Stake`,\n    currency0: currency0,\n    currency1: currency1,\n    pair: pair,\n    totalAmount: `${totalStakedInUsd}`,\n    pgl: stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.totalStakedAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), Number(liquidityInUSD === null || liquidityInUSD === void 0 ? void 0 : liquidityInUSD.toFixed(4)) > 0 && /*#__PURE__*/React.createElement(Box, {\n    mt: 25,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StatDetail, {\n    title: `Your Liquidity`,\n    currency0: currency0,\n    currency1: currency1,\n    pair: pair,\n    totalAmount: `${liquidityInUSD ? `$${liquidityInUSD === null || liquidityInUSD === void 0 ? void 0 : liquidityInUSD.toFixed(2)}` : '-'}`,\n    pgl: userPgl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  })), isStaking && /*#__PURE__*/React.createElement(Box, {\n    mt: 25,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StatDetail, {\n    title: `Your Stake`,\n    currency0: currency0,\n    currency1: currency1,\n    pair: pair,\n    totalAmount: `${numeral((_ref2 = yourStakeInUsd) === null || _ref2 === void 0 ? void 0 : _ref2.toFixed(2)).format('$0.00a')}`,\n    pgl: stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.stakedAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  })), currency0 !== CAVAX[chainId] && currency0 instanceof Token && /*#__PURE__*/React.createElement(Box, {\n    mt: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CoinDescription, {\n    coin: currency0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  })), currency1 !== CAVAX[chainId] && currency1 instanceof Token && /*#__PURE__*/React.createElement(Box, {\n    mt: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CoinDescription, {\n    coin: currency1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Details;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Pool/DetailModal/Details/index.tsx"],"names":["React","useGetPoolDollerWorth","unwrappedToken","CAVAX","Token","DetailsContainer","Box","CoinDescription","usePair","StatDetail","numeral","CHAINS","useChainId","Details","stakingInfo","token0","tokens","token1","chainId","totalStakedInUsd","is_mainnet","toSignificant","format","yourStakeInUsd","multiply","stakedAmount","divide","totalStakedAmount","undefined","stakingTokenPair","pair","userPgl","liquidityInUSD","isStaking","Boolean","greaterThan","currency0","currency1","Number","toFixed"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { StakingInfo, useGetPoolDollerWorth } from 'src/state/stake/hooks'\nimport { unwrappedToken } from 'src/utils/wrappedCurrency'\nimport { CAVAX, Fraction, Token } from '@pangolindex/sdk'\nimport { DetailsContainer } from './styled'\nimport { Box } from '@pangolindex/components'\nimport CoinDescription from 'src/components/Beta/CoinDescription'\nimport { usePair } from 'src/data/Reserves'\nimport StatDetail from '../StatDetail'\nimport numeral from 'numeral'\nimport { CHAINS } from 'src/constants/chains'\nimport { useChainId } from 'src/hooks'\n\ntype Props = {\n  stakingInfo: StakingInfo\n}\n\nconst Details: React.FC<Props> = ({ stakingInfo }) => {\n  const token0 = stakingInfo?.tokens[0]\n  const token1 = stakingInfo?.tokens[1]\n  const chainId = useChainId()\n\n  const totalStakedInUsd = CHAINS[chainId].is_mainnet\n    ? numeral(stakingInfo.totalStakedInUsd.toSignificant(4)).format('$0.00a')\n    : numeral(stakingInfo.totalStakedInUsd).format('$0.00a')\n\n  const yourStakeInUsd = CHAINS[chainId].is_mainnet\n    ? stakingInfo?.totalStakedInUsd.multiply(stakingInfo?.stakedAmount).divide(stakingInfo?.totalStakedAmount)\n    : undefined\n\n  const [, stakingTokenPair] = usePair(token0, token1)\n  const pair = stakingTokenPair\n  const { userPgl, liquidityInUSD } = useGetPoolDollerWorth(pair)\n\n  const isStaking = Boolean(stakingInfo.stakedAmount.greaterThan('0'))\n\n  const currency0 = pair?.token0 ? unwrappedToken(pair?.token0, chainId) : undefined\n  const currency1 = pair?.token1 ? unwrappedToken(pair?.token1, chainId) : undefined\n\n  return (\n    <>\n      <DetailsContainer>\n        <StatDetail\n          title={`Total Stake`}\n          currency0={currency0}\n          currency1={currency1}\n          pair={pair}\n          totalAmount={`${totalStakedInUsd}`}\n          pgl={stakingInfo?.totalStakedAmount}\n        />\n\n        {Number(liquidityInUSD?.toFixed(4)) > 0 && (\n          <Box mt={25}>\n            <StatDetail\n              title={`Your Liquidity`}\n              currency0={currency0}\n              currency1={currency1}\n              pair={pair}\n              totalAmount={`${liquidityInUSD ? `$${liquidityInUSD?.toFixed(2)}` : '-'}`}\n              pgl={userPgl}\n            />\n          </Box>\n        )}\n\n        {isStaking && (\n          <Box mt={25}>\n            <StatDetail\n              title={`Your Stake`}\n              currency0={currency0}\n              currency1={currency1}\n              pair={pair}\n              totalAmount={`${numeral((yourStakeInUsd as Fraction)?.toFixed(2)).format('$0.00a')}`}\n              pgl={stakingInfo?.stakedAmount}\n            />\n          </Box>\n        )}\n        {currency0 !== CAVAX[chainId] && currency0 instanceof Token && (\n          <Box mt={20}>\n            <CoinDescription coin={currency0} />\n          </Box>\n        )}\n\n        {currency1 !== CAVAX[chainId] && currency1 instanceof Token && (\n          <Box mt={20}>\n            <CoinDescription coin={currency1} />\n          </Box>\n        )}\n      </DetailsContainer>\n    </>\n  )\n}\n\nexport default Details\n"]},"metadata":{},"sourceType":"module"}