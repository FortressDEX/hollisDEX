{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/AccountDetails/Transaction.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { CheckCircle, Triangle } from 'react-feather';\nimport { useChainId } from '../../hooks';\nimport { getEtherscanLink } from '../../utils';\nimport { ExternalLink } from '../../theme';\nimport { useAllTransactions } from '../../state/transactions/hooks';\nimport { RowFixed } from '../Row';\nimport Loader from '../Loader';\nimport { useIsBetaUI } from 'src/hooks/useLocation';\nconst TransactionWrapper = styled.div``;\nconst TransactionStatusText = styled.div`\n  margin-right: 0.5rem;\n  display: flex;\n  align-items: center;\n  :hover {\n    text-decoration: underline;\n  }\n`;\nconst TransactionState = styled(ExternalLink)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${_ref => {\n  let {\n    theme,\n    isBeta\n  } = _ref;\n  return isBeta ? theme.primary : theme.primary1;\n}};\n`;\nconst IconWrapper = styled.div`\n  color: ${_ref2 => {\n  let {\n    pending,\n    success,\n    theme\n  } = _ref2;\n  return pending ? theme.primary1 : success ? theme.green1 : theme.red1;\n}};\n`;\nexport default function Transaction(_ref3) {\n  var _tx$receipt, _tx$receipt2;\n\n  let {\n    hash\n  } = _ref3;\n  const chainId = useChainId();\n  const allTransactions = useAllTransactions();\n  const isBeta = useIsBetaUI();\n  const tx = allTransactions === null || allTransactions === void 0 ? void 0 : allTransactions[hash];\n  const summary = tx === null || tx === void 0 ? void 0 : tx.summary;\n  const pending = !(tx === null || tx === void 0 ? void 0 : tx.receipt);\n  const success = !pending && tx && (((_tx$receipt = tx.receipt) === null || _tx$receipt === void 0 ? void 0 : _tx$receipt.status) === 1 || typeof ((_tx$receipt2 = tx.receipt) === null || _tx$receipt2 === void 0 ? void 0 : _tx$receipt2.status) === 'undefined');\n  if (!chainId) return null;\n  return /*#__PURE__*/React.createElement(TransactionWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TransactionState, {\n    href: getEtherscanLink(chainId, hash, 'transaction'),\n    pending: pending,\n    success: success,\n    isBeta: isBeta,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TransactionStatusText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, summary !== null && summary !== void 0 ? summary : hash, \" \\u2197\")), /*#__PURE__*/React.createElement(IconWrapper, {\n    pending: pending,\n    success: success,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, pending ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 22\n    }\n  }) : success ? /*#__PURE__*/React.createElement(CheckCircle, {\n    size: \"16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 45\n    }\n  }) : /*#__PURE__*/React.createElement(Triangle, {\n    size: \"16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 73\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/AccountDetails/Transaction.tsx"],"names":["React","styled","CheckCircle","Triangle","useChainId","getEtherscanLink","ExternalLink","useAllTransactions","RowFixed","Loader","useIsBetaUI","TransactionWrapper","div","TransactionStatusText","TransactionState","theme","isBeta","primary","primary1","IconWrapper","pending","success","green1","red1","Transaction","hash","chainId","allTransactions","tx","summary","receipt","status"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { CheckCircle, Triangle } from 'react-feather'\n\nimport { useChainId } from '../../hooks'\nimport { getEtherscanLink } from '../../utils'\nimport { ExternalLink } from '../../theme'\nimport { useAllTransactions } from '../../state/transactions/hooks'\nimport { RowFixed } from '../Row'\nimport Loader from '../Loader'\nimport { useIsBetaUI } from 'src/hooks/useLocation'\n\nconst TransactionWrapper = styled.div``\n\nconst TransactionStatusText = styled.div`\n  margin-right: 0.5rem;\n  display: flex;\n  align-items: center;\n  :hover {\n    text-decoration: underline;\n  }\n`\n\nconst TransactionState = styled(ExternalLink)<{ pending: boolean; success?: boolean; isBeta: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme, isBeta }) => (isBeta ? theme.primary : theme.primary1)};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) => (pending ? theme.primary1 : success ? theme.green1 : theme.red1)};\n`\n\nexport default function Transaction({ hash }: { hash: string }) {\n  const chainId = useChainId()\n  const allTransactions = useAllTransactions()\n  const isBeta = useIsBetaUI()\n  const tx = allTransactions?.[hash]\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionWrapper>\n      <TransactionState\n        href={getEtherscanLink(chainId, hash, 'transaction')}\n        pending={pending}\n        success={success}\n        isBeta={isBeta}\n      >\n        <RowFixed>\n          <TransactionStatusText>{summary ?? hash} â†—</TransactionStatusText>\n        </RowFixed>\n        <IconWrapper pending={pending} success={success}>\n          {pending ? <Loader /> : success ? <CheckCircle size=\"16\" /> : <Triangle size=\"16\" />}\n        </IconWrapper>\n      </TransactionState>\n    </TransactionWrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}