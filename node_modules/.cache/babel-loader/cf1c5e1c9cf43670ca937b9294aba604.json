{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/swap/SwapModalHeader.tsx\";\nimport { TradeType } from '@pangolindex/sdk';\nimport React, { useContext, useMemo } from 'react';\nimport { ArrowDown, AlertTriangle } from 'react-feather';\nimport { Text } from 'rebass';\nimport { ThemeContext } from 'styled-components';\nimport { Field } from '../../state/swap/actions';\nimport { TYPE } from '../../theme';\nimport { ButtonPrimary } from '../Button';\nimport { isAddress, shortenAddress } from '../../utils';\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from '../../utils/prices';\nimport { AutoColumn } from '../Column';\nimport CurrencyLogo from '../CurrencyLogo';\nimport { RowBetween, RowFixed } from '../Row';\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds';\nimport { useTranslation } from 'react-i18next';\nexport default function SwapModalHeader(_ref) {\n  var _slippageAdjustedAmou, _slippageAdjustedAmou2;\n\n  let {\n    chainId,\n    trade,\n    allowedSlippage,\n    recipient,\n    showAcceptChanges,\n    onAcceptChanges\n  } = _ref;\n  const slippageAdjustedAmounts = useMemo(() => computeSlippageAdjustedAmounts(trade, allowedSlippage, chainId), [trade, allowedSlippage, chainId]);\n  const {\n    priceImpactWithoutFee\n  } = useMemo(() => computeTradePriceBreakdown(chainId, trade), [chainId, trade]);\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee);\n  const theme = useContext(ThemeContext);\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: 'md',\n    style: {\n      marginTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    align: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RowFixed, {\n    gap: '0px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, chainId && /*#__PURE__*/React.createElement(CurrencyLogo, {\n    currency: trade.inputAmount.currency,\n    size: 24,\n    style: {\n      marginRight: '12px'\n    },\n    chainId: chainId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TruncatedText, {\n    fontSize: 24,\n    fontWeight: 500,\n    color: showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? theme.primary1 : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, trade.inputAmount.toSignificant(6))), /*#__PURE__*/React.createElement(RowFixed, {\n    gap: '0px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: 24,\n    fontWeight: 500,\n    style: {\n      marginLeft: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, trade.inputAmount.currency.symbol))), /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ArrowDown, {\n    size: \"16\",\n    color: theme.text2,\n    style: {\n      marginLeft: '4px',\n      minWidth: '16px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(RowBetween, {\n    align: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RowFixed, {\n    gap: '0px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, chainId && /*#__PURE__*/React.createElement(CurrencyLogo, {\n    currency: trade.outputAmount.currency,\n    size: 24,\n    style: {\n      marginRight: '12px'\n    },\n    chainId: chainId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TruncatedText, {\n    fontSize: 24,\n    fontWeight: 500,\n    color: priceImpactSeverity > 2 ? theme.red1 : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT ? theme.primary1 : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, trade.outputAmount.toSignificant(6))), /*#__PURE__*/React.createElement(RowFixed, {\n    gap: '0px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: 24,\n    fontWeight: 500,\n    style: {\n      marginLeft: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, trade.outputAmount.currency.symbol))), showAcceptChanges ? /*#__PURE__*/React.createElement(SwapShowAcceptChanges, {\n    justify: \"flex-start\",\n    gap: '0px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AlertTriangle, {\n    size: 20,\n    style: {\n      marginRight: '8px',\n      minWidth: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TYPE.main, {\n    color: theme.primary1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, t('swap.priceUpdated'))), /*#__PURE__*/React.createElement(ButtonPrimary, {\n    style: {\n      padding: '.5rem',\n      width: 'fit-content',\n      fontSize: '0.825rem',\n      borderRadius: '12px'\n    },\n    onClick: onAcceptChanges,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, t('swap.accept')))) : null, /*#__PURE__*/React.createElement(AutoColumn, {\n    justify: \"flex-start\",\n    gap: \"sm\",\n    style: {\n      padding: '12px 0 0 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, trade.tradeType === TradeType.EXACT_INPUT ? /*#__PURE__*/React.createElement(TYPE.italic, {\n    textAlign: \"left\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, t('swap.outputEstimated'), /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, (_slippageAdjustedAmou = slippageAdjustedAmounts[Field.OUTPUT]) === null || _slippageAdjustedAmou === void 0 ? void 0 : _slippageAdjustedAmou.toSignificant(6), \" \", trade.outputAmount.currency.symbol), t('swap.transactionRevert')) : /*#__PURE__*/React.createElement(TYPE.italic, {\n    textAlign: \"left\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, t('swap.inputEstimated'), /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, (_slippageAdjustedAmou2 = slippageAdjustedAmounts[Field.INPUT]) === null || _slippageAdjustedAmou2 === void 0 ? void 0 : _slippageAdjustedAmou2.toSignificant(6), \" \", trade.inputAmount.currency.symbol), t('swap.transactionRevert'))), recipient !== null ? /*#__PURE__*/React.createElement(AutoColumn, {\n    justify: \"flex-start\",\n    gap: \"sm\",\n    style: {\n      padding: '12px 0 0 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.main, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, t('swap.outputSentTo'), /*#__PURE__*/React.createElement(\"b\", {\n    title: recipient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, isAddress(recipient) ? shortenAddress(recipient) : recipient))) : null);\n}","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/swap/SwapModalHeader.tsx"],"names":["TradeType","React","useContext","useMemo","ArrowDown","AlertTriangle","Text","ThemeContext","Field","TYPE","ButtonPrimary","isAddress","shortenAddress","computeSlippageAdjustedAmounts","computeTradePriceBreakdown","warningSeverity","AutoColumn","CurrencyLogo","RowBetween","RowFixed","TruncatedText","SwapShowAcceptChanges","useTranslation","SwapModalHeader","chainId","trade","allowedSlippage","recipient","showAcceptChanges","onAcceptChanges","slippageAdjustedAmounts","priceImpactWithoutFee","priceImpactSeverity","theme","t","marginTop","inputAmount","currency","marginRight","tradeType","EXACT_OUTPUT","primary1","toSignificant","marginLeft","symbol","text2","minWidth","outputAmount","red1","EXACT_INPUT","padding","width","fontSize","borderRadius","OUTPUT","INPUT"],"mappings":"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","sourcesContent":["import { ChainId, Trade, TradeType } from '@pangolindex/sdk'\nimport React, { useContext, useMemo } from 'react'\nimport { ArrowDown, AlertTriangle } from 'react-feather'\nimport { Text } from 'rebass'\nimport { ThemeContext } from 'styled-components'\nimport { Field } from '../../state/swap/actions'\nimport { TYPE } from '../../theme'\nimport { ButtonPrimary } from '../Button'\nimport { isAddress, shortenAddress } from '../../utils'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport { AutoColumn } from '../Column'\nimport CurrencyLogo from '../CurrencyLogo'\nimport { RowBetween, RowFixed } from '../Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\nimport { useTranslation } from 'react-i18next'\n\nexport default function SwapModalHeader({\n  chainId,\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges\n}: {\n  chainId: ChainId\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(() => computeSlippageAdjustedAmounts(trade, allowedSlippage, chainId), [\n    trade,\n    allowedSlippage,\n    chainId\n  ])\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(chainId, trade), [chainId, trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  const theme = useContext(ThemeContext)\n  const { t } = useTranslation()\n\n  return (\n    <AutoColumn gap={'md'} style={{ marginTop: '20px' }}>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap={'0px'}>\n          {chainId && (\n            <CurrencyLogo\n              currency={trade.inputAmount.currency}\n              size={24}\n              style={{ marginRight: '12px' }}\n              chainId={chainId}\n            />\n          )}\n          <TruncatedText\n            fontSize={24}\n            fontWeight={500}\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? theme.primary1 : ''}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap={'0px'}>\n          <Text fontSize={24} fontWeight={500} style={{ marginLeft: '10px' }}>\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDown size=\"16\" color={theme.text2} style={{ marginLeft: '4px', minWidth: '16px' }} />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap={'0px'}>\n          {chainId && (\n            <CurrencyLogo\n              currency={trade.outputAmount.currency}\n              size={24}\n              style={{ marginRight: '12px' }}\n              chainId={chainId}\n            />\n          )}\n          <TruncatedText\n            fontSize={24}\n            fontWeight={500}\n            color={\n              priceImpactSeverity > 2\n                ? theme.red1\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? theme.primary1\n                : ''\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap={'0px'}>\n          <Text fontSize={24} fontWeight={500} style={{ marginLeft: '10px' }}>\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap={'0px'}>\n          <RowBetween>\n            <RowFixed>\n              <AlertTriangle size={20} style={{ marginRight: '8px', minWidth: 24 }} />\n              <TYPE.main color={theme.primary1}>{t('swap.priceUpdated')}</TYPE.main>\n            </RowFixed>\n            <ButtonPrimary\n              style={{ padding: '.5rem', width: 'fit-content', fontSize: '0.825rem', borderRadius: '12px' }}\n              onClick={onAcceptChanges}\n            >\n              {t('swap.accept')}\n            </ButtonPrimary>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <TYPE.italic textAlign=\"left\" style={{ width: '100%' }}>\n            {t('swap.outputEstimated')}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {t('swap.transactionRevert')}\n          </TYPE.italic>\n        ) : (\n          <TYPE.italic textAlign=\"left\" style={{ width: '100%' }}>\n            {t('swap.inputEstimated')}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {t('swap.transactionRevert')}\n          </TYPE.italic>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <TYPE.main>\n            {t('swap.outputSentTo')}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </TYPE.main>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}