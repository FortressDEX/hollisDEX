{"ast":null,"code":"import { ChainId, JSBI, Percent, WAVAX } from '@pangolindex/sdk';\nimport { gnosisSafe, injected, walletconnect, walletlink, xDefi } from '../connectors';\nimport { DAIe, PNG, USDC, USDCe, USDTe, UST, axlUST } from './tokens';\nexport const GAS_PRICE = 225;\nexport const ROUTER_ADDRESS = {\n  [ChainId.FUJI]: '0x2D99ABD9008Dc933ff5c0CD271B88309593aB921',\n  [ChainId.POLYGON]: '0x4704dBc771FC9c62c2AE99760090533c7a526D6B',\n  [ChainId.WAGMI]: '0x2F99E88888ee24cbf1623FB7af7FD2e508123eb3'\n};\nexport const LANDING_PAGE = 'https://tundraswap.com';\nexport const ANALYTICS_PAGE = 'https://info.pangolin.exchange';\nexport const PANGOLIN_API_BASE_URL = `https://api.pangolin.exchange`;\nexport const PANGOLIN_TOKENS_REPO_RAW_BASE_URL = `https://raw.githubusercontent.com/pangolindex/tokens`;\nexport const getTokenLogoURL = function (address) {\n  let size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 24;\n  return `${PANGOLIN_TOKENS_REPO_RAW_BASE_URL}/main/assets/${address}/logo_${size}.png`;\n};\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000';\nexport const GOVERNANCE_ADDRESS = '0xb0Ff2b1047d9E8d294c2eD798faE3fA817F43Ee1';\nexport const BRIDGE_MIGRATOR_ADDRESS = '0x4b23Aa72A1214d0E4fd3f2c8Da7C6ba660F7483C';\nexport const MINICHEF_ADDRESS = {\n  [ChainId.FUJI]: ZERO_ADDRESS,\n  [ChainId.POLYGON]: '0x7EB91dD44e25b175AD4a1F4bdaD2205D81617750',\n  [ChainId.WAGMI]: '0x08B7fAC01886858CE741bfA7573D281F05730bF1'\n};\nexport const NATIVE = '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'; // a list of tokens by chain\n\nexport const AIRDROP_ADDRESS = {\n  [ChainId.FUJI]: ZERO_ADDRESS,\n  [ChainId.POLYGON]: '0x9214bff683c96ecfbF69b592ca9aC6CeFA62fa8D',\n  // changed to Polygon HOL\n  [ChainId.WAGMI]: '0xFf3A1Fbc721C9c1E92835b551e9A795FCdBa83e8'\n};\nconst WAVAX_AND_PNG_ONLY = {\n  [ChainId.FUJI]: [WAVAX[ChainId.FUJI], PNG[ChainId.FUJI]],\n  [ChainId.POLYGON]: [WAVAX[ChainId.POLYGON], PNG[ChainId.POLYGON]],\n  [ChainId.WAGMI]: [WAVAX[ChainId.WAGMI], PNG[ChainId.WAGMI]]\n}; // used to construct intermediary pairs for trading\n\nexport const BASES_TO_CHECK_TRADES_AGAINST = {\n  [ChainId.FUJI]: [WAVAX[ChainId.FUJI], PNG[ChainId.FUJI]],\n  [ChainId.POLYGON]: [WAVAX[ChainId.POLYGON], PNG[ChainId.POLYGON], USDTe[ChainId.POLYGON], DAIe[ChainId.POLYGON], USDCe[ChainId.POLYGON], UST[ChainId.POLYGON], axlUST[ChainId.POLYGON], USDC[ChainId.POLYGON]],\n  [ChainId.WAGMI]: [WAVAX[ChainId.WAGMI], PNG[ChainId.WAGMI]]\n};\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n */\n\nexport const CUSTOM_BASES = {\n  [ChainId.POLYGON]: {}\n}; // used for display in the default list when adding liquidity\n\nexport const SUGGESTED_BASES = { ...WAVAX_AND_PNG_ONLY\n}; // used to construct the list of all pairs we consider by default in the frontend\n\nexport const BASES_TO_TRACK_LIQUIDITY_FOR = { ...WAVAX_AND_PNG_ONLY\n};\nexport const PINNED_PAIRS = {\n  [ChainId.POLYGON]: []\n}; // these tokens can be directly linked to (via url params) in the swap page without prompting a warning\n\nexport const TRUSTED_TOKEN_ADDRESSES = {\n  [ChainId.FUJI]: [],\n  [ChainId.POLYGON]: [WAVAX[ChainId.POLYGON].address, PNG[ChainId.POLYGON].address],\n  [ChainId.WAGMI]: [WAVAX[ChainId.WAGMI].address, PNG[ChainId.WAGMI].address]\n};\nexport const SWAP_DEFAULT_CURRENCY = {\n  [ChainId.POLYGON]: {\n    inputCurrency: 'MATIC',\n    outputCurrency: axlUST[ChainId.POLYGON].address\n  },\n  [ChainId.FUJI]: {\n    inputCurrency: '',\n    outputCurrency: ''\n  },\n  [ChainId.WAGMI]: {\n    inputCurrency: '',\n    outputCurrency: ''\n  }\n};\nexport const SUPPORTED_WALLETS = {\n  INJECTED: {\n    connector: injected,\n    name: 'Injected',\n    iconName: 'arrow-right.svg',\n    description: 'Injected web3 provider.',\n    href: null,\n    color: '#010101',\n    primary: true\n  },\n  METAMASK: {\n    connector: injected,\n    name: 'MetaMask',\n    iconName: 'metamask.png',\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#E8831D'\n  },\n  GNOSISSAFE: {\n    connector: gnosisSafe,\n    name: 'Gnosis Safe',\n    iconName: 'gnosis_safe.png',\n    description: 'Gnosis Safe Multisig Wallet.',\n    href: null,\n    color: '#010101'\n  },\n  WALLET_LINK: {\n    connector: walletlink,\n    name: 'Coinbase Wallet',\n    iconName: 'coinbaseWalletIcon.svg',\n    description: 'Use Coinbase Wallet app on mobile device',\n    href: null,\n    color: '#315CF5'\n  },\n  WALLET_CONNECT: {\n    connector: walletconnect,\n    name: 'Wallet Connect',\n    iconName: 'walletConnectIcon.svg',\n    description: 'Use Wallet Connect',\n    href: null,\n    color: '#315CF5'\n  },\n  XDEFI: {\n    connector: xDefi,\n    name: 'XDEFI',\n    iconName: 'xDefi.png',\n    description: window.xfi && window.xfi.ethereum ? 'Easy-to-use browser extension.' : 'Please Install',\n    href: null,\n    color: '#315CF5'\n  }\n};\nexport const NetworkContextName = 'NETWORK';\nexport const POLYGON_CHAIN_PARAMS = {\n  chainId: '0x89',\n  // A 0x-prefixed hexadecimal chainId\n  chainName: 'Polygon Mainnet',\n  nativeCurrency: {\n    name: 'Polygon',\n    symbol: 'MATIC',\n    decimals: 18\n  },\n  rpcUrls: ['https://polygon-rpc.com/'],\n  blockExplorerUrls: ['https://polygonscan.com//']\n}; // default allowed slippage, in bips\n\nexport const INITIAL_ALLOWED_SLIPPAGE = 50; // 10 minutes, denominated in seconds\n\nexport const DEFAULT_DEADLINE_FROM_NOW = 10 * 60;\nexport const BIG_INT_ZERO = JSBI.BigInt(0);\nexport const BIG_INT_ONE = JSBI.BigInt(1);\nexport const BIG_INT_TWO = JSBI.BigInt(2);\nexport const BIG_INT_TEN = JSBI.BigInt(10);\nexport const BIG_INT_EIGHTEEN = JSBI.BigInt(18);\nexport const BIG_INT_SECONDS_IN_WEEK = JSBI.BigInt(60 * 60 * 24 * 7);\nexport const ONE_TOKEN = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(18)); // one basis point\n\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000));\nexport const BIPS_BASE = JSBI.BigInt(10000); // used for warning states\n\nexport const ALLOWED_PRICE_IMPACT_LOW = new Percent(JSBI.BigInt(100), BIPS_BASE); // 1%\n\nexport const ALLOWED_PRICE_IMPACT_MEDIUM = new Percent(JSBI.BigInt(300), BIPS_BASE); // 3%\n\nexport const ALLOWED_PRICE_IMPACT_HIGH = new Percent(JSBI.BigInt(500), BIPS_BASE); // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\n\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN = new Percent(JSBI.BigInt(1000), BIPS_BASE); // 10%\n// for non expert mode disable swaps above this\n\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT = new Percent(JSBI.BigInt(1500), BIPS_BASE); // 15%\n// used to ensure the user doesn't send so much ETH so they end up with <.01\n\nexport const MIN_ETH = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)); // .01 ETH\n\nexport const BETTER_TRADE_LINK_THRESHOLD = new Percent(JSBI.BigInt(75), JSBI.BigInt(10000));\nexport const MOONPAY_PK = process.env.REACT_APP_MOONPAY_PK || '';\nexport const WYRE_API_KEY = process.env.REACT_APP_WYRE_API_KEY ? process.env.REACT_APP_WYRE_API_KEY : '';\nexport const WYRE_SECRET_KEY = process.env.REACT_APP_WYRE_SECRET_KEY ? process.env.REACT_APP_WYRE_SECRET_KEY : '';\nexport const WYRE_ID = process.env.REACT_APP_WYRE_ID ? process.env.REACT_APP_WYRE_ID : '';\nexport const WYRE_API_URL = 'https://api.sendwyre.com';\nexport const WYRE_QUOTE_API_ENDPOINT = '/v3/orders/quote/partner';\nexport const WYRE_RESERVE_API_ENDPOINT = '/v3/orders/reserve';\nexport const WYRE_CALLBACK_URL = 'https://app.pangolin.exchange/';\nexport const SUBGRAPH_BASE_URL = process.env.REACT_APP_SUBGRAPH_BASE_URL;\nexport const IS_IN_IFRAME = window.parent !== window;\nexport const TIMEFRAME = [{\n  description: 'HOUR',\n  label: '1H',\n  interval: 60,\n  momentIdentifier: 'hour'\n}, {\n  description: 'DAY',\n  label: '1D',\n  interval: 3600,\n  momentIdentifier: 'day'\n}, {\n  description: 'WEEK',\n  label: '1W',\n  interval: 86400,\n  momentIdentifier: 'week'\n}, {\n  description: 'MONTH',\n  label: '1M',\n  interval: 604800,\n  momentIdentifier: 'month'\n}, {\n  description: 'YEAR',\n  label: '1Y',\n  interval: 2629746,\n  momentIdentifier: 'year'\n}, {\n  description: 'ALL',\n  label: 'ALL',\n  interval: 2629746,\n  momentIdentifier: ''\n}];\nexport let BETA_MENU_LINK;\n\n(function (BETA_MENU_LINK) {\n  BETA_MENU_LINK[\"dashboard\"] = \"/beta/dashboard\";\n  BETA_MENU_LINK[\"swap\"] = \"/beta/swap\";\n  BETA_MENU_LINK[\"buy\"] = \"/beta/buy\";\n  BETA_MENU_LINK[\"pool\"] = \"/beta/pool\";\n  BETA_MENU_LINK[\"stake\"] = \"/beta/stake\";\n  BETA_MENU_LINK[\"vote\"] = \"/beta/vote\";\n  BETA_MENU_LINK[\"migrate\"] = \"/beta/migrate\";\n  BETA_MENU_LINK[\"bridge\"] = \"/beta/bridge\";\n  BETA_MENU_LINK[\"airdrop\"] = \"/beta/airdrop\";\n})(BETA_MENU_LINK || (BETA_MENU_LINK = {}));","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/constants/index.ts"],"names":["ChainId","JSBI","Percent","WAVAX","gnosisSafe","injected","walletconnect","walletlink","xDefi","DAIe","PNG","USDC","USDCe","USDTe","UST","axlUST","GAS_PRICE","ROUTER_ADDRESS","FUJI","POLYGON","WAGMI","LANDING_PAGE","ANALYTICS_PAGE","PANGOLIN_API_BASE_URL","PANGOLIN_TOKENS_REPO_RAW_BASE_URL","getTokenLogoURL","address","size","ZERO_ADDRESS","GOVERNANCE_ADDRESS","BRIDGE_MIGRATOR_ADDRESS","MINICHEF_ADDRESS","NATIVE","AIRDROP_ADDRESS","WAVAX_AND_PNG_ONLY","BASES_TO_CHECK_TRADES_AGAINST","CUSTOM_BASES","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","TRUSTED_TOKEN_ADDRESSES","SWAP_DEFAULT_CURRENCY","inputCurrency","outputCurrency","SUPPORTED_WALLETS","INJECTED","connector","name","iconName","description","href","color","primary","METAMASK","GNOSISSAFE","WALLET_LINK","WALLET_CONNECT","XDEFI","window","xfi","ethereum","NetworkContextName","POLYGON_CHAIN_PARAMS","chainId","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","BigInt","BIG_INT_ONE","BIG_INT_TWO","BIG_INT_TEN","BIG_INT_EIGHTEEN","BIG_INT_SECONDS_IN_WEEK","ONE_TOKEN","exponentiate","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_ETH","BETTER_TRADE_LINK_THRESHOLD","MOONPAY_PK","process","env","REACT_APP_MOONPAY_PK","WYRE_API_KEY","REACT_APP_WYRE_API_KEY","WYRE_SECRET_KEY","REACT_APP_WYRE_SECRET_KEY","WYRE_ID","REACT_APP_WYRE_ID","WYRE_API_URL","WYRE_QUOTE_API_ENDPOINT","WYRE_RESERVE_API_ENDPOINT","WYRE_CALLBACK_URL","SUBGRAPH_BASE_URL","REACT_APP_SUBGRAPH_BASE_URL","IS_IN_IFRAME","parent","TIMEFRAME","label","interval","momentIdentifier","BETA_MENU_LINK"],"mappings":"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","sourcesContent":["import { ChainId, JSBI, Percent, Token, WAVAX } from '@pangolindex/sdk'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\n\nimport { gnosisSafe, injected, walletconnect, walletlink, xDefi } from '../connectors'\nimport { DAIe, PNG, USDC, USDCe, USDTe, UST, axlUST } from './tokens'\n\nexport const GAS_PRICE = 225\n\nexport const ROUTER_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.FUJI]: '0x2D99ABD9008Dc933ff5c0CD271B88309593aB921',\n  [ChainId.POLYGON]: '0x4704dBc771FC9c62c2AE99760090533c7a526D6B',\n  [ChainId.WAGMI]: '0x2F99E88888ee24cbf1623FB7af7FD2e508123eb3'\n}\n\nexport const LANDING_PAGE = 'https://tundraswap.com'\nexport const ANALYTICS_PAGE = 'https://info.pangolin.exchange'\n\nexport const PANGOLIN_API_BASE_URL = `https://api.pangolin.exchange`\n\nexport const PANGOLIN_TOKENS_REPO_RAW_BASE_URL = `https://raw.githubusercontent.com/pangolindex/tokens`\n\nexport type LogoSize = 24 | 48\nexport const getTokenLogoURL = (address: string, size: LogoSize = 24) =>\n  `${PANGOLIN_TOKENS_REPO_RAW_BASE_URL}/main/assets/${address}/logo_${size}.png`\n\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'\n\nexport const GOVERNANCE_ADDRESS = '0xb0Ff2b1047d9E8d294c2eD798faE3fA817F43Ee1'\n\nexport const BRIDGE_MIGRATOR_ADDRESS = '0x4b23Aa72A1214d0E4fd3f2c8Da7C6ba660F7483C'\n\nexport const MINICHEF_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.FUJI]: ZERO_ADDRESS,\n  [ChainId.POLYGON]: '0x7EB91dD44e25b175AD4a1F4bdaD2205D81617750',\n  [ChainId.WAGMI]: '0x08B7fAC01886858CE741bfA7573D281F05730bF1'\n}\n\nexport const NATIVE = '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\nexport const AIRDROP_ADDRESS: { [chainId in ChainId]?: string } = {\n  [ChainId.FUJI]: ZERO_ADDRESS,\n  [ChainId.POLYGON]: '0x9214bff683c96ecfbF69b592ca9aC6CeFA62fa8D', // changed to Polygon HOL\n  [ChainId.WAGMI]: '0xFf3A1Fbc721C9c1E92835b551e9A795FCdBa83e8'\n}\n\nconst WAVAX_AND_PNG_ONLY: ChainTokenList = {\n  [ChainId.FUJI]: [WAVAX[ChainId.FUJI], PNG[ChainId.FUJI]],\n  [ChainId.POLYGON]: [WAVAX[ChainId.POLYGON], PNG[ChainId.POLYGON]],\n  [ChainId.WAGMI]: [WAVAX[ChainId.WAGMI], PNG[ChainId.WAGMI]]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.FUJI]: [WAVAX[ChainId.FUJI], PNG[ChainId.FUJI]],\n  [ChainId.POLYGON]: [\n    WAVAX[ChainId.POLYGON],\n    PNG[ChainId.POLYGON],\n    USDTe[ChainId.POLYGON],\n    DAIe[ChainId.POLYGON],\n    USDCe[ChainId.POLYGON],\n    UST[ChainId.POLYGON],\n    axlUST[ChainId.POLYGON],\n    USDC[ChainId.POLYGON]\n  ],\n  [ChainId.WAGMI]: [WAVAX[ChainId.WAGMI], PNG[ChainId.WAGMI]]\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.POLYGON]: {}\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  ...WAVAX_AND_PNG_ONLY\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  ...WAVAX_AND_PNG_ONLY\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.POLYGON]: []\n}\n\n// these tokens can be directly linked to (via url params) in the swap page without prompting a warning\nexport const TRUSTED_TOKEN_ADDRESSES: { readonly [chainId in ChainId]: string[] } = {\n  [ChainId.FUJI]: [],\n  [ChainId.POLYGON]: [WAVAX[ChainId.POLYGON].address, PNG[ChainId.POLYGON].address],\n  [ChainId.WAGMI]: [WAVAX[ChainId.WAGMI].address, PNG[ChainId.WAGMI].address]\n}\n\nexport const SWAP_DEFAULT_CURRENCY = {\n  [ChainId.POLYGON]: {\n    inputCurrency: 'MATIC',\n    outputCurrency: axlUST[ChainId.POLYGON].address\n  },\n  [ChainId.FUJI]: {\n    inputCurrency: '',\n    outputCurrency: ''\n  },\n  [ChainId.WAGMI]: {\n    inputCurrency: '',\n    outputCurrency: ''\n  }\n}\n\nexport interface WalletInfo {\n  connector?: AbstractConnector\n  name: string\n  iconName: string\n  description: string\n  href: string | null\n  color: string\n  primary?: true\n  mobile?: true\n  mobileOnly?: true\n}\n\nexport const SUPPORTED_WALLETS: { [key: string]: WalletInfo } = {\n  INJECTED: {\n    connector: injected,\n    name: 'Injected',\n    iconName: 'arrow-right.svg',\n    description: 'Injected web3 provider.',\n    href: null,\n    color: '#010101',\n    primary: true\n  },\n  METAMASK: {\n    connector: injected,\n    name: 'MetaMask',\n    iconName: 'metamask.png',\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#E8831D'\n  },\n  GNOSISSAFE: {\n    connector: gnosisSafe,\n    name: 'Gnosis Safe',\n    iconName: 'gnosis_safe.png',\n    description: 'Gnosis Safe Multisig Wallet.',\n    href: null,\n    color: '#010101'\n  },\n  WALLET_LINK: {\n    connector: walletlink,\n    name: 'Coinbase Wallet',\n    iconName: 'coinbaseWalletIcon.svg',\n    description: 'Use Coinbase Wallet app on mobile device',\n    href: null,\n    color: '#315CF5'\n  },\n  WALLET_CONNECT: {\n    connector: walletconnect,\n    name: 'Wallet Connect',\n    iconName: 'walletConnectIcon.svg',\n    description: 'Use Wallet Connect',\n    href: null,\n    color: '#315CF5'\n  },\n  XDEFI: {\n    connector: xDefi,\n    name: 'XDEFI',\n    iconName: 'xDefi.png',\n    description: window.xfi && window.xfi.ethereum ? 'Easy-to-use browser extension.' : 'Please Install',\n    href: null,\n    color: '#315CF5'\n  }\n}\n\nexport const NetworkContextName = 'NETWORK'\n\nexport const POLYGON_CHAIN_PARAMS = {\n  chainId: '0x89', // A 0x-prefixed hexadecimal chainId\n  chainName: 'Polygon Mainnet',\n  nativeCurrency: {\n    name: 'Polygon',\n    symbol: 'MATIC',\n    decimals: 18\n  },\n  rpcUrls: ['https://polygon-rpc.com/'],\n  blockExplorerUrls: ['https://polygonscan.com//']\n}\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 10 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 10 * 60\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\nexport const BIG_INT_ONE = JSBI.BigInt(1)\nexport const BIG_INT_TWO = JSBI.BigInt(2)\nexport const BIG_INT_TEN = JSBI.BigInt(10)\nexport const BIG_INT_EIGHTEEN = JSBI.BigInt(18)\nexport const BIG_INT_SECONDS_IN_WEEK = JSBI.BigInt(60 * 60 * 24 * 7)\nexport const ONE_TOKEN = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(18))\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much ETH so they end up with <.01\nexport const MIN_ETH: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 ETH\nexport const BETTER_TRADE_LINK_THRESHOLD = new Percent(JSBI.BigInt(75), JSBI.BigInt(10000))\n\nexport const MOONPAY_PK = process.env.REACT_APP_MOONPAY_PK || ''\nexport const WYRE_API_KEY = process.env.REACT_APP_WYRE_API_KEY ? process.env.REACT_APP_WYRE_API_KEY : ''\nexport const WYRE_SECRET_KEY = process.env.REACT_APP_WYRE_SECRET_KEY ? process.env.REACT_APP_WYRE_SECRET_KEY : ''\nexport const WYRE_ID = process.env.REACT_APP_WYRE_ID ? process.env.REACT_APP_WYRE_ID : ''\nexport const WYRE_API_URL = 'https://api.sendwyre.com'\nexport const WYRE_QUOTE_API_ENDPOINT = '/v3/orders/quote/partner'\nexport const WYRE_RESERVE_API_ENDPOINT = '/v3/orders/reserve'\nexport const WYRE_CALLBACK_URL = 'https://app.pangolin.exchange/'\nexport const SUBGRAPH_BASE_URL = process.env.REACT_APP_SUBGRAPH_BASE_URL\n\nexport const IS_IN_IFRAME = window.parent !== window\nexport const TIMEFRAME = [\n  {\n    description: 'HOUR',\n    label: '1H',\n    interval: 60,\n    momentIdentifier: 'hour'\n  },\n  {\n    description: 'DAY',\n    label: '1D',\n    interval: 3600,\n    momentIdentifier: 'day'\n  },\n  {\n    description: 'WEEK',\n    label: '1W',\n    interval: 86400,\n    momentIdentifier: 'week'\n  },\n  {\n    description: 'MONTH',\n    label: '1M',\n    interval: 604800,\n    momentIdentifier: 'month'\n  },\n  {\n    description: 'YEAR',\n    label: '1Y',\n    interval: 2629746,\n    momentIdentifier: 'year'\n  },\n  {\n    description: 'ALL',\n    label: 'ALL',\n    interval: 2629746,\n    momentIdentifier: ''\n  }\n]\n\nexport enum BETA_MENU_LINK {\n  dashboard = '/beta/dashboard',\n  swap = '/beta/swap',\n  buy = '/beta/buy',\n  pool = '/beta/pool',\n  stake = '/beta/stake',\n  vote = '/beta/vote',\n  migrate = '/beta/migrate',\n  bridge = '/beta/bridge',\n  airdrop = '/beta/airdrop'\n}\n"]},"metadata":{},"sourceType":"module"}