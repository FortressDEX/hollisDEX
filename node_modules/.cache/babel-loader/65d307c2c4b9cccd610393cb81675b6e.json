{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/LanguageSelection/index.tsx\";\nimport React, { useRef } from 'react';\nimport { StyledMenu, MenuFlyout, StyledMenuButton } from '../StyledMenu';\nimport styled from 'styled-components';\nimport { useModalOpen, useToggleModal } from '../../state/application/hooks';\nimport { ApplicationModal } from '../../state/application/actions';\nimport i18n, { availableLanguages } from '../../i18n';\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside';\nconst NarrowMenuFlyout = styled(MenuFlyout)`\n  min-width: 7.125rem;\n  ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.mediaWidth.upToMedium`\n    top: -14.25rem;\n  `;\n}};\n`;\nexport const ClickableMenuItem = styled.a`\n  flex: 1;\n  padding: 0.5rem 0.5rem;\n  color: ${_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.text2;\n}};\n  :hover {\n    color: ${_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.text1;\n}};\n    cursor: pointer;\n    text-decoration: none;\n  }\n  > svg {\n    margin-right: 8px;\n  }\n`;\nconst FlagIcon = styled.img`\n  height: 15px;\n  width: 21px;\n  margin-top: 3px;\n`;\nexport default function LanguageSelection(_ref4) {\n  let {\n    isBeta = false\n  } = _ref4;\n  const node = useRef();\n  const open = useModalOpen(ApplicationModal.LANGUAGE);\n  const toggle = useToggleModal(ApplicationModal.LANGUAGE);\n  useOnClickOutside(node, open ? toggle : undefined);\n  return /*#__PURE__*/React.createElement(StyledMenu, {\n    ref: node,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledMenuButton, {\n    onClick: toggle,\n    isBeta: isBeta,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FlagIcon, {\n    src: `./images/flags/${i18n.language}.svg`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })), open && /*#__PURE__*/React.createElement(NarrowMenuFlyout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, availableLanguages.map((lang, i) => /*#__PURE__*/React.createElement(ClickableMenuItem, {\n    key: i,\n    onClick: () => {\n      i18n.changeLanguage(lang);\n      toggle();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FlagIcon, {\n    src: `./images/flags/${lang}.svg`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }), \" \\xA0\", lang.toUpperCase()))));\n}","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/LanguageSelection/index.tsx"],"names":["React","useRef","StyledMenu","MenuFlyout","StyledMenuButton","styled","useModalOpen","useToggleModal","ApplicationModal","i18n","availableLanguages","useOnClickOutside","NarrowMenuFlyout","theme","mediaWidth","upToMedium","ClickableMenuItem","a","text2","text1","FlagIcon","img","LanguageSelection","isBeta","node","open","LANGUAGE","toggle","undefined","language","map","lang","i","changeLanguage","toUpperCase"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,gBAAjC,QAAyD,eAAzD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,+BAA7C;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,OAAOC,IAAP,IAAeC,kBAAf,QAAyC,YAAzC;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,MAAMC,gBAAgB,GAAGP,MAAM,CAACF,UAAD,CAAa;AAC5C;AACA,IAAI;AAAA,MAAC;AAAEU,IAAAA;AAAF,GAAD;AAAA,SAAeA,KAAK,CAACC,UAAN,CAAiBC,UAAW;AAC/C;AACA,GAFI;AAAA,CAEA;AACJ,CALA;AAOA,OAAO,MAAMC,iBAAiB,GAAGX,MAAM,CAACY,CAAE;AAC1C;AACA;AACA,WAAW;AAAA,MAAC;AAAEJ,IAAAA;AAAF,GAAD;AAAA,SAAeA,KAAK,CAACK,KAArB;AAAA,CAA2B;AACtC;AACA,aAAa;AAAA,MAAC;AAAEL,IAAAA;AAAF,GAAD;AAAA,SAAeA,KAAK,CAACM,KAArB;AAAA,CAA2B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,CAZO;AAcP,MAAMC,QAAQ,GAAGf,MAAM,CAACgB,GAAI;AAC5B;AACA;AACA;AACA,CAJA;AAUA,eAAe,SAASC,iBAAT,QAAsD;AAAA,MAA3B;AAAEC,IAAAA,MAAM,GAAG;AAAX,GAA2B;AACnE,QAAMC,IAAI,GAAGvB,MAAM,EAAnB;AACA,QAAMwB,IAAI,GAAGnB,YAAY,CAACE,gBAAgB,CAACkB,QAAlB,CAAzB;AACA,QAAMC,MAAM,GAAGpB,cAAc,CAACC,gBAAgB,CAACkB,QAAlB,CAA7B;AAEAf,EAAAA,iBAAiB,CAACa,IAAD,EAAOC,IAAI,GAAGE,MAAH,GAAYC,SAAvB,CAAjB;AAEA,sBACE,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEJ,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEG,MAA3B;AAAmC,IAAA,MAAM,EAAEJ,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAG,kBAAiBd,IAAI,CAACoB,QAAS,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIGJ,IAAI,iBACH,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,kBAAkB,CAACoB,GAAnB,CAAuB,CAACC,IAAD,EAAOC,CAAP,kBACtB,oBAAC,iBAAD;AACE,IAAA,GAAG,EAAEA,CADP;AAEE,IAAA,OAAO,EAAE,MAAM;AACbvB,MAAAA,IAAI,CAACwB,cAAL,CAAoBF,IAApB;AACAJ,MAAAA,MAAM;AACP,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAG,kBAAiBI,IAAK,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,WAQGA,IAAI,CAACG,WAAL,EARH,CADD,CADH,CALJ,CADF;AAuBD","sourcesContent":["import React, { useRef } from 'react'\nimport { StyledMenu, MenuFlyout, StyledMenuButton } from '../StyledMenu'\nimport styled from 'styled-components'\nimport { useModalOpen, useToggleModal } from '../../state/application/hooks'\nimport { ApplicationModal } from '../../state/application/actions'\nimport i18n, { availableLanguages } from '../../i18n'\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\n\nconst NarrowMenuFlyout = styled(MenuFlyout)`\n  min-width: 7.125rem;\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    top: -14.25rem;\n  `};\n`\n\nexport const ClickableMenuItem = styled.a`\n  flex: 1;\n  padding: 0.5rem 0.5rem;\n  color: ${({ theme }) => theme.text2};\n  :hover {\n    color: ${({ theme }) => theme.text1};\n    cursor: pointer;\n    text-decoration: none;\n  }\n  > svg {\n    margin-right: 8px;\n  }\n`\n\nconst FlagIcon = styled.img`\n  height: 15px;\n  width: 21px;\n  margin-top: 3px;\n`\n\ninterface Props {\n  isBeta?: boolean\n}\n\nexport default function LanguageSelection({ isBeta = false }: Props) {\n  const node = useRef<HTMLDivElement>()\n  const open = useModalOpen(ApplicationModal.LANGUAGE)\n  const toggle = useToggleModal(ApplicationModal.LANGUAGE)\n\n  useOnClickOutside(node, open ? toggle : undefined)\n\n  return (\n    <StyledMenu ref={node as any}>\n      <StyledMenuButton onClick={toggle} isBeta={isBeta}>\n        <FlagIcon src={`./images/flags/${i18n.language}.svg`} />\n      </StyledMenuButton>\n      {open && (\n        <NarrowMenuFlyout>\n          {availableLanguages.map((lang, i) => (\n            <ClickableMenuItem\n              key={i}\n              onClick={() => {\n                i18n.changeLanguage(lang)\n                toggle()\n              }}\n            >\n              <FlagIcon src={`./images/flags/${lang}.svg`} /> &nbsp;\n              {lang.toUpperCase()}\n            </ClickableMenuItem>\n          ))}\n        </NarrowMenuFlyout>\n      )}\n    </StyledMenu>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}