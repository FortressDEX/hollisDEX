{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Pool/DetailModal/EarnDetail/index.tsx\";\nimport React, { useState } from 'react';\nimport { Wrapper, InnerWrapper } from './styleds';\nimport { Text, Box, Button } from '@pangolindex/components';\nimport { useTranslation } from 'react-i18next';\nimport Stat from 'src/components/Stat';\nimport { BIG_INT_ZERO } from 'src/constants';\nimport { useMinichefPendingRewards } from 'src/state/stake/hooks';\nimport { PNG } from 'src/constants/tokens';\nimport ClaimDrawer from '../../ClaimDrawer';\nimport WithdrawDrawer from '../../WithdrawDrawer';\nimport { useChainId } from 'src/hooks';\n\nconst EarnDetail = _ref => {\n  var _ref2, _stakingInfo$rewardRa, _stakingInfo$rewardRa2, _stakingInfo$earnedAm, _stakingInfo$earnedAm2, _stakingInfo$earnedAm3;\n\n  let {\n    stakingInfo,\n    version\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const chainId = useChainId();\n  const [isClaimDrawerVisible, setShowClaimDrawer] = useState(false);\n  const [isWithdrawDrawerVisible, setShowWithdrawDrawer] = useState(false);\n  const {\n    rewardTokensAmount\n  } = useMinichefPendingRewards(stakingInfo);\n  const isSuperFarm = ((_ref2 = rewardTokensAmount || []) === null || _ref2 === void 0 ? void 0 : _ref2.length) > 0;\n  const png = PNG[chainId]; // add PNG as default reward\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"text1\",\n    fontSize: 24,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, t('dashboardPage.earned')), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    backgroundColor: \"color9\",\n    color: \"color4\",\n    width: \"100px\",\n    height: \"30px\",\n    onClick: () => setShowWithdrawDrawer(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, t('earn.withdraw'))), /*#__PURE__*/React.createElement(Box, {\n    flex: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InnerWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Stat, {\n    title: t('dashboardPage.earned_weeklyIncome'),\n    stat: `${(_stakingInfo$rewardRa = stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$rewardRa2 = stakingInfo.rewardRatePerWeek) === null || _stakingInfo$rewardRa2 === void 0 ? void 0 : _stakingInfo$rewardRa2.toSignificant(4, {\n      groupSeparator: ','\n    })) !== null && _stakingInfo$rewardRa !== void 0 ? _stakingInfo$rewardRa : '-'}`,\n    titlePosition: \"top\",\n    titleFontSize: 14,\n    statFontSize: 20,\n    titleColor: \"text2\",\n    currency: png,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Stat, {\n    title: t('dashboardPage.earned_totalEarned'),\n    stat: `${(_stakingInfo$earnedAm = stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$earnedAm2 = stakingInfo.earnedAmount) === null || _stakingInfo$earnedAm2 === void 0 ? void 0 : _stakingInfo$earnedAm2.toFixed(6)) !== null && _stakingInfo$earnedAm !== void 0 ? _stakingInfo$earnedAm : '0'}`,\n    titlePosition: \"top\",\n    titleFontSize: 14,\n    statFontSize: 20,\n    titleColor: \"text2\",\n    currency: png,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }))), isSuperFarm && /*#__PURE__*/React.createElement(React.Fragment, null, (rewardTokensAmount || []).map((reward, index) => {\n    var _stakingInfo$rewardTo, _stakingInfo$getExtra, _extraTokenWeeklyRewa, _reward$toFixed;\n\n    const tokenMultiplier = stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$rewardTo = stakingInfo.rewardTokensMultiplier) === null || _stakingInfo$rewardTo === void 0 ? void 0 : _stakingInfo$rewardTo[index];\n    const extraTokenWeeklyRewardRate = stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$getExtra = stakingInfo.getExtraTokensWeeklyRewardRate) === null || _stakingInfo$getExtra === void 0 ? void 0 : _stakingInfo$getExtra.call(stakingInfo, stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.rewardRatePerWeek, reward === null || reward === void 0 ? void 0 : reward.token, tokenMultiplier);\n    return /*#__PURE__*/React.createElement(InnerWrapper, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Stat, {\n      stat: `${(_extraTokenWeeklyRewa = extraTokenWeeklyRewardRate === null || extraTokenWeeklyRewardRate === void 0 ? void 0 : extraTokenWeeklyRewardRate.toSignificant(4, {\n        groupSeparator: ','\n      })) !== null && _extraTokenWeeklyRewa !== void 0 ? _extraTokenWeeklyRewa : '-'} `,\n      statFontSize: 20,\n      currency: reward === null || reward === void 0 ? void 0 : reward.token,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Stat, {\n      stat: `${(_reward$toFixed = reward === null || reward === void 0 ? void 0 : reward.toFixed(6)) !== null && _reward$toFixed !== void 0 ? _reward$toFixed : '0'}`,\n      statFontSize: 20,\n      currency: reward === null || reward === void 0 ? void 0 : reward.token,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    })));\n  }))), /*#__PURE__*/React.createElement(Box, {\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    padding: \"15px 18px\",\n    isDisabled: !(stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$earnedAm3 = stakingInfo.earnedAmount) === null || _stakingInfo$earnedAm3 === void 0 ? void 0 : _stakingInfo$earnedAm3.greaterThan(BIG_INT_ZERO)),\n    variant: \"primary\",\n    onClick: () => setShowClaimDrawer(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, t('earnPage.claim'))), /*#__PURE__*/React.createElement(ClaimDrawer, {\n    isOpen: isClaimDrawerVisible,\n    onClose: () => {\n      setShowClaimDrawer(false);\n    },\n    stakingInfo: stakingInfo,\n    version: version,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(WithdrawDrawer, {\n    isOpen: isWithdrawDrawerVisible,\n    onClose: () => {\n      setShowWithdrawDrawer(false);\n    },\n    stakingInfo: stakingInfo,\n    version: version,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default EarnDetail;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Pool/DetailModal/EarnDetail/index.tsx"],"names":["React","useState","Wrapper","InnerWrapper","Text","Box","Button","useTranslation","Stat","BIG_INT_ZERO","useMinichefPendingRewards","PNG","ClaimDrawer","WithdrawDrawer","useChainId","EarnDetail","stakingInfo","version","t","chainId","isClaimDrawerVisible","setShowClaimDrawer","isWithdrawDrawerVisible","setShowWithdrawDrawer","rewardTokensAmount","isSuperFarm","length","png","rewardRatePerWeek","toSignificant","groupSeparator","earnedAmount","toFixed","map","reward","index","tokenMultiplier","rewardTokensMultiplier","extraTokenWeeklyRewardRate","getExtraTokensWeeklyRewardRate","token","greaterThan"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Wrapper, InnerWrapper } from './styleds'\nimport { TokenAmount } from '@pangolindex/sdk'\nimport { Text, Box, Button } from '@pangolindex/components'\nimport { useTranslation } from 'react-i18next'\nimport Stat from 'src/components/Stat'\nimport { StakingInfo } from 'src/state/stake/hooks'\nimport { BIG_INT_ZERO } from 'src/constants'\nimport { useMinichefPendingRewards } from 'src/state/stake/hooks'\nimport { PNG } from 'src/constants/tokens'\nimport ClaimDrawer from '../../ClaimDrawer'\nimport WithdrawDrawer from '../../WithdrawDrawer'\nimport { useChainId } from 'src/hooks'\n\nexport interface EarnDetailProps {\n  stakingInfo: StakingInfo\n  version: number\n}\n\nconst EarnDetail = ({ stakingInfo, version }: EarnDetailProps) => {\n  const { t } = useTranslation()\n  const chainId = useChainId()\n\n  const [isClaimDrawerVisible, setShowClaimDrawer] = useState(false)\n  const [isWithdrawDrawerVisible, setShowWithdrawDrawer] = useState(false)\n\n  const { rewardTokensAmount } = useMinichefPendingRewards(stakingInfo)\n\n  const isSuperFarm = (rewardTokensAmount || [])?.length > 0\n\n  const png = PNG[chainId] // add PNG as default reward\n  return (\n    <Wrapper>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text color=\"text1\" fontSize={24} fontWeight={500}>\n          {t('dashboardPage.earned')}\n        </Text>\n\n        {/* show unstak button */}\n        <Button\n          variant=\"primary\"\n          backgroundColor=\"color9\"\n          color=\"color4\"\n          width=\"100px\"\n          height=\"30px\"\n          onClick={() => setShowWithdrawDrawer(true)}\n        >\n          {t('earn.withdraw')}\n        </Button>\n      </Box>\n\n      <Box flex=\"1\">\n        <InnerWrapper>\n          <Box>\n            <Stat\n              title={t('dashboardPage.earned_weeklyIncome')}\n              stat={`${stakingInfo?.rewardRatePerWeek?.toSignificant(4, { groupSeparator: ',' }) ?? '-'}`}\n              titlePosition=\"top\"\n              titleFontSize={14}\n              statFontSize={20}\n              titleColor=\"text2\"\n              currency={png}\n            />\n          </Box>\n\n          <Box>\n            <Stat\n              title={t('dashboardPage.earned_totalEarned')}\n              stat={`${stakingInfo?.earnedAmount?.toFixed(6) ?? '0'}`}\n              titlePosition=\"top\"\n              titleFontSize={14}\n              statFontSize={20}\n              titleColor=\"text2\"\n              currency={png}\n            />\n          </Box>\n        </InnerWrapper>\n\n        {isSuperFarm && (\n          <>\n            {(rewardTokensAmount || []).map((reward, index) => {\n              const tokenMultiplier = stakingInfo?.rewardTokensMultiplier?.[index]\n\n              const extraTokenWeeklyRewardRate = stakingInfo?.getExtraTokensWeeklyRewardRate?.(\n                stakingInfo?.rewardRatePerWeek,\n                reward?.token,\n                tokenMultiplier\n              ) as TokenAmount\n\n              return (\n                <InnerWrapper key={index}>\n                  <Box>\n                    <Stat\n                      stat={`${extraTokenWeeklyRewardRate?.toSignificant(4, { groupSeparator: ',' }) ?? '-'} `}\n                      statFontSize={20}\n                      currency={reward?.token}\n                    />\n                  </Box>\n\n                  <Box>\n                    <Stat stat={`${reward?.toFixed(6) ?? '0'}`} statFontSize={20} currency={reward?.token} />\n                  </Box>\n                </InnerWrapper>\n              )\n            })}\n          </>\n        )}\n      </Box>\n\n      <Box mt={10}>\n        <Button\n          padding=\"15px 18px\"\n          isDisabled={!stakingInfo?.earnedAmount?.greaterThan(BIG_INT_ZERO)}\n          variant=\"primary\"\n          onClick={() => setShowClaimDrawer(true)}\n        >\n          {t('earnPage.claim')}\n        </Button>\n      </Box>\n\n      <ClaimDrawer\n        isOpen={isClaimDrawerVisible}\n        onClose={() => {\n          setShowClaimDrawer(false)\n        }}\n        stakingInfo={stakingInfo}\n        version={version}\n      />\n      <WithdrawDrawer\n        isOpen={isWithdrawDrawerVisible}\n        onClose={() => {\n          setShowWithdrawDrawer(false)\n        }}\n        stakingInfo={stakingInfo}\n        version={version}\n      />\n    </Wrapper>\n  )\n}\nexport default EarnDetail\n"]},"metadata":{},"sourceType":"module"}