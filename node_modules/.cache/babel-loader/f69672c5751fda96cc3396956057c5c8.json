{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/Slider/index.tsx\";\nimport React, { useCallback } from 'react';\nimport styled from 'styled-components';\nconst StyledRangeInput = styled.input`\n  -webkit-appearance: none; /* Hides the slider so that custom slider can be made */\n  width: 100%; /* Specific width is required for Firefox. */\n  background: transparent; /* Otherwise white in Chrome */\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n  }\n\n  &::-moz-focus-outer {\n    border: 0;\n  }\n\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    height: ${_ref => {\n  let {\n    size\n  } = _ref;\n  return size;\n}}px;\n    width: ${_ref2 => {\n  let {\n    size\n  } = _ref2;\n  return size;\n}}px;\n    background-color: #565a69;\n    border-radius: 100%;\n    border: none;\n    transform: translateY(-50%);\n    color: ${_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.bg1;\n}};\n\n    &:hover,\n    &:focus {\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\n        0px 24px 32px rgba(0, 0, 0, 0.04);\n    }\n  }\n\n  &::-moz-range-thumb {\n    height: ${_ref4 => {\n  let {\n    size\n  } = _ref4;\n  return size;\n}}px;\n    width: ${_ref5 => {\n  let {\n    size\n  } = _ref5;\n  return size;\n}}px;\n    background-color: #565a69;\n    border-radius: 100%;\n    border: none;\n    color: ${_ref6 => {\n  let {\n    theme\n  } = _ref6;\n  return theme.bg1;\n}};\n\n    &:hover,\n    &:focus {\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\n        0px 24px 32px rgba(0, 0, 0, 0.04);\n    }\n  }\n\n  &::-ms-thumb {\n    height: ${_ref7 => {\n  let {\n    size\n  } = _ref7;\n  return size;\n}}px;\n    width: ${_ref8 => {\n  let {\n    size\n  } = _ref8;\n  return size;\n}}px;\n    background-color: #565a69;\n    border-radius: 100%;\n    color: ${_ref9 => {\n  let {\n    theme\n  } = _ref9;\n  return theme.bg1;\n}};\n\n    &:hover,\n    &:focus {\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\n        0px 24px 32px rgba(0, 0, 0, 0.04);\n    }\n  }\n\n  &::-webkit-slider-runnable-track {\n    background: linear-gradient(90deg, ${_ref10 => {\n  let {\n    theme\n  } = _ref10;\n  return theme.bg5;\n}}, ${_ref11 => {\n  let {\n    theme\n  } = _ref11;\n  return theme.bg3;\n}});\n    height: 2px;\n  }\n\n  &::-moz-range-track {\n    background: linear-gradient(90deg, ${_ref12 => {\n  let {\n    theme\n  } = _ref12;\n  return theme.bg5;\n}}, ${_ref13 => {\n  let {\n    theme\n  } = _ref13;\n  return theme.bg3;\n}});\n    height: 2px;\n  }\n\n  &::-ms-track {\n    width: 100%;\n    border-color: transparent;\n    color: transparent;\n\n    background: ${_ref14 => {\n  let {\n    theme\n  } = _ref14;\n  return theme.bg5;\n}};\n    height: 2px;\n  }\n  &::-ms-fill-lower {\n    background: ${_ref15 => {\n  let {\n    theme\n  } = _ref15;\n  return theme.bg5;\n}};\n  }\n  &::-ms-fill-upper {\n    background: ${_ref16 => {\n  let {\n    theme\n  } = _ref16;\n  return theme.bg3;\n}};\n  }\n`;\nexport default function Slider(_ref17) {\n  let {\n    value,\n    onChange,\n    min = 0,\n    step = 1,\n    max = 100,\n    size = 28\n  } = _ref17;\n  const changeCallback = useCallback(e => {\n    onChange(parseInt(e.target.value));\n  }, [onChange]);\n  return /*#__PURE__*/React.createElement(StyledRangeInput, {\n    size: size,\n    type: \"range\",\n    value: value,\n    style: {\n      width: '90%',\n      marginLeft: 15,\n      marginRight: 15,\n      padding: '15px 0'\n    },\n    onChange: changeCallback,\n    \"aria-labelledby\": \"input slider\",\n    step: step,\n    min: min,\n    max: max,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/Slider/index.tsx"],"names":["React","useCallback","styled","StyledRangeInput","input","size","theme","bg1","bg5","bg3","Slider","value","onChange","min","step","max","changeCallback","e","parseInt","target","width","marginLeft","marginRight","padding"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react'\nimport styled from 'styled-components'\n\nconst StyledRangeInput = styled.input<{ size: number }>`\n  -webkit-appearance: none; /* Hides the slider so that custom slider can be made */\n  width: 100%; /* Specific width is required for Firefox. */\n  background: transparent; /* Otherwise white in Chrome */\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n  }\n\n  &::-moz-focus-outer {\n    border: 0;\n  }\n\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    height: ${({ size }) => size}px;\n    width: ${({ size }) => size}px;\n    background-color: #565a69;\n    border-radius: 100%;\n    border: none;\n    transform: translateY(-50%);\n    color: ${({ theme }) => theme.bg1};\n\n    &:hover,\n    &:focus {\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\n        0px 24px 32px rgba(0, 0, 0, 0.04);\n    }\n  }\n\n  &::-moz-range-thumb {\n    height: ${({ size }) => size}px;\n    width: ${({ size }) => size}px;\n    background-color: #565a69;\n    border-radius: 100%;\n    border: none;\n    color: ${({ theme }) => theme.bg1};\n\n    &:hover,\n    &:focus {\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\n        0px 24px 32px rgba(0, 0, 0, 0.04);\n    }\n  }\n\n  &::-ms-thumb {\n    height: ${({ size }) => size}px;\n    width: ${({ size }) => size}px;\n    background-color: #565a69;\n    border-radius: 100%;\n    color: ${({ theme }) => theme.bg1};\n\n    &:hover,\n    &:focus {\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\n        0px 24px 32px rgba(0, 0, 0, 0.04);\n    }\n  }\n\n  &::-webkit-slider-runnable-track {\n    background: linear-gradient(90deg, ${({ theme }) => theme.bg5}, ${({ theme }) => theme.bg3});\n    height: 2px;\n  }\n\n  &::-moz-range-track {\n    background: linear-gradient(90deg, ${({ theme }) => theme.bg5}, ${({ theme }) => theme.bg3});\n    height: 2px;\n  }\n\n  &::-ms-track {\n    width: 100%;\n    border-color: transparent;\n    color: transparent;\n\n    background: ${({ theme }) => theme.bg5};\n    height: 2px;\n  }\n  &::-ms-fill-lower {\n    background: ${({ theme }) => theme.bg5};\n  }\n  &::-ms-fill-upper {\n    background: ${({ theme }) => theme.bg3};\n  }\n`\n\ninterface InputSliderProps {\n  value: number\n  onChange: (value: number) => void\n  step?: number\n  min?: number\n  max?: number\n  size?: number\n}\n\nexport default function Slider({ value, onChange, min = 0, step = 1, max = 100, size = 28 }: InputSliderProps) {\n  const changeCallback = useCallback(\n    e => {\n      onChange(parseInt(e.target.value))\n    },\n    [onChange]\n  )\n\n  return (\n    <StyledRangeInput\n      size={size}\n      type=\"range\"\n      value={value}\n      style={{ width: '90%', marginLeft: 15, marginRight: 15, padding: '15px 0' }}\n      onChange={changeCallback}\n      aria-labelledby=\"input slider\"\n      step={step}\n      min={min}\n      max={max}\n    />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}