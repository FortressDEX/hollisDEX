{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/MigrationModal/ChoosePool/index.tsx\";\nimport React from 'react';\nimport { Wrapper } from './styleds';\nimport { Text, Checkbox, Box, Button } from '@pangolindex/components';\nimport PairData from './PairData';\nimport { useTranslation } from 'react-i18next';\n\nconst ChoosePool = _ref => {\n  let {\n    allChoosePool,\n    allPool,\n    v2IsLoading,\n    toggleSelectAll,\n    toggleIndividualSelect,\n    goNext\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"text4\",\n    fontSize: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, t('migratePage.migrationModalDescription')), /*#__PURE__*/React.createElement(Box, {\n    p: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    label: t('migratePage.selectAll'),\n    onChange: check => {\n      toggleSelectAll(check);\n    },\n    checked: (Object.keys(allPool) || []).length === (Object.keys(allChoosePool) || []).length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    maxHeight: \"200px\",\n    overflowY: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, (Object.keys(allPool) || []).map(address => {\n    var _allPool$address, _allPool$address2;\n\n    return /*#__PURE__*/React.createElement(PairData, {\n      key: address,\n      pair: (_allPool$address = allPool[address]) === null || _allPool$address === void 0 ? void 0 : _allPool$address.pair,\n      stakingData: (_allPool$address2 = allPool[address]) === null || _allPool$address2 === void 0 ? void 0 : _allPool$address2.staking,\n      selected: !!allChoosePool[address],\n      address: address,\n      toggleIndividualSelect: toggleIndividualSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    });\n  })), /*#__PURE__*/React.createElement(Box, {\n    mt: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: () => {\n      if ((Object.keys(allChoosePool) || []).length > 0) {\n        goNext();\n      }\n    },\n    isDisabled: v2IsLoading || (Object.keys(allChoosePool) || []).length === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, t('migratePage.choosePool'))));\n};\n\nexport default ChoosePool;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/MigrationModal/ChoosePool/index.tsx"],"names":["React","Wrapper","Text","Checkbox","Box","Button","PairData","useTranslation","ChoosePool","allChoosePool","allPool","v2IsLoading","toggleSelectAll","toggleIndividualSelect","goNext","t","check","Object","keys","length","map","address","pair","staking"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,GAAzB,EAA8BC,MAA9B,QAA4C,yBAA5C;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEA,SAASC,cAAT,QAA+B,eAA/B;;AAWA,MAAMC,UAAU,GAAG,QAOI;AAAA,MAPH;AAClBC,IAAAA,aADkB;AAElBC,IAAAA,OAFkB;AAGlBC,IAAAA,WAHkB;AAIlBC,IAAAA,eAJkB;AAKlBC,IAAAA,sBALkB;AAMlBC,IAAAA;AANkB,GAOG;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAQR,cAAc,EAA5B;AACA,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,OAAZ;AAAoB,IAAA,QAAQ,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,CAAC,CAAC,uCAAD,CADJ,CADF,eAIE,oBAAC,GAAD;AAAK,IAAA,CAAC,EAAE,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAEA,CAAC,CAAC,uBAAD,CADV;AAEE,IAAA,QAAQ,EAAEC,KAAK,IAAI;AACjBJ,MAAAA,eAAe,CAACI,KAAD,CAAf;AACD,KAJH;AAKE,IAAA,OAAO,EAAE,CAACC,MAAM,CAACC,IAAP,CAAYR,OAAZ,KAAwB,EAAzB,EAA6BS,MAA7B,KAAwC,CAACF,MAAM,CAACC,IAAP,CAAYT,aAAZ,KAA8B,EAA/B,EAAmCU,MALtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,eAcE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,SAAS,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACF,MAAM,CAACC,IAAP,CAAYR,OAAZ,KAAwB,EAAzB,EAA6BU,GAA7B,CAAiCC,OAAO,IAAI;AAAA;;AAC3C,wBACE,oBAAC,QAAD;AACE,MAAA,GAAG,EAAEA,OADP;AAEE,MAAA,IAAI,sBAAEX,OAAO,CAACW,OAAD,CAAT,qDAAE,iBAAkBC,IAF1B;AAGE,MAAA,WAAW,uBAAEZ,OAAO,CAACW,OAAD,CAAT,sDAAE,kBAAkBE,OAHjC;AAIE,MAAA,QAAQ,EAAE,CAAC,CAACd,aAAa,CAACY,OAAD,CAJ3B;AAKE,MAAA,OAAO,EAAEA,OALX;AAME,MAAA,sBAAsB,EAAER,sBAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD,GAXA,CADH,CAdF,eA4BE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,SADV;AAEE,IAAA,OAAO,EAAE,MAAM;AACb,UAAI,CAACI,MAAM,CAACC,IAAP,CAAYT,aAAZ,KAA8B,EAA/B,EAAmCU,MAAnC,GAA4C,CAAhD,EAAmD;AACjDL,QAAAA,MAAM;AACP;AACF,KANH;AAOE,IAAA,UAAU,EAAEH,WAAW,IAAI,CAACM,MAAM,CAACC,IAAP,CAAYT,aAAZ,KAA8B,EAA/B,EAAmCU,MAAnC,KAA8C,CAP3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGJ,CAAC,CAAC,wBAAD,CATJ,CADF,CA5BF,CADF;AA4CD,CArDD;;AAsDA,eAAeP,UAAf","sourcesContent":["import React from 'react'\nimport { Wrapper } from './styleds'\nimport { Text, Checkbox, Box, Button } from '@pangolindex/components'\nimport { Pair } from '@pangolindex/sdk'\nimport PairData from './PairData'\nimport { StakingInfo } from '../../../state/stake/hooks'\nimport { useTranslation } from 'react-i18next'\n\nexport interface ChoosePoolProps {\n  allChoosePool: { [address: string]: { pair: Pair; staking: StakingInfo } }\n  allPool: { [address: string]: { pair: Pair; staking: StakingInfo } }\n  v2IsLoading: boolean\n  toggleSelectAll: (value: boolean) => void\n  toggleIndividualSelect: (address: string) => void\n  goNext: () => void\n}\n\nconst ChoosePool = ({\n  allChoosePool,\n  allPool,\n  v2IsLoading,\n  toggleSelectAll,\n  toggleIndividualSelect,\n  goNext\n}: ChoosePoolProps) => {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <Text color=\"text4\" fontSize={16}>\n        {t('migratePage.migrationModalDescription')}\n      </Text>\n      <Box p={10}>\n        <Checkbox\n          label={t('migratePage.selectAll')}\n          onChange={check => {\n            toggleSelectAll(check)\n          }}\n          checked={(Object.keys(allPool) || []).length === (Object.keys(allChoosePool) || []).length}\n        />\n      </Box>\n\n      <Box maxHeight=\"200px\" overflowY=\"auto\">\n        {(Object.keys(allPool) || []).map(address => {\n          return (\n            <PairData\n              key={address}\n              pair={allPool[address]?.pair}\n              stakingData={allPool[address]?.staking}\n              selected={!!allChoosePool[address]}\n              address={address}\n              toggleIndividualSelect={toggleIndividualSelect}\n            />\n          )\n        })}\n      </Box>\n      <Box mt={30}>\n        <Button\n          variant=\"primary\"\n          onClick={() => {\n            if ((Object.keys(allChoosePool) || []).length > 0) {\n              goNext()\n            }\n          }}\n          isDisabled={v2IsLoading || (Object.keys(allChoosePool) || []).length === 0}\n        >\n          {t('migratePage.choosePool')}\n        </Button>\n      </Box>\n    </Wrapper>\n  )\n}\nexport default ChoosePool\n"]},"metadata":{},"sourceType":"module"}