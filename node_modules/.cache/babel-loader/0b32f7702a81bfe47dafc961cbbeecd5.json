{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/AddLiquidity/ConfirmAddModalBottom.tsx\";\nimport React from 'react';\nimport { Text } from 'rebass';\nimport { ButtonPrimary } from '../../components/Button';\nimport { RowBetween, RowFixed } from '../../components/Row';\nimport CurrencyLogo from '../../components/CurrencyLogo';\nimport { Field } from '../../state/mint/actions';\nimport { TYPE } from '../../theme';\nimport { useTranslation } from 'react-i18next';\nimport { useChainId } from 'src/hooks';\nexport function ConfirmAddModalBottom(_ref) {\n  var _currencies$Field$CUR, _parsedAmounts$Field$, _currencies$Field$CUR2, _parsedAmounts$Field$2, _currencies$Field$CUR3, _currencies$Field$CUR4, _currencies$Field$CUR5, _currencies$Field$CUR6;\n\n  let {\n    noLiquidity,\n    price,\n    currencies,\n    parsedAmounts,\n    poolTokenPercentage,\n    onAdd\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const chainId = useChainId();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, (_currencies$Field$CUR = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR === void 0 ? void 0 : _currencies$Field$CUR.symbol, \" \", t('addLiquidity.deposited')), /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, chainId && /*#__PURE__*/React.createElement(CurrencyLogo, {\n    currency: currencies[Field.CURRENCY_A],\n    style: {\n      marginRight: '8px'\n    },\n    chainId: chainId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TYPE.body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, (_parsedAmounts$Field$ = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$ === void 0 ? void 0 : _parsedAmounts$Field$.toSignificant(6)))), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, (_currencies$Field$CUR2 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR2 === void 0 ? void 0 : _currencies$Field$CUR2.symbol, \" \", t('addLiquidity.deposited')), /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, chainId && /*#__PURE__*/React.createElement(CurrencyLogo, {\n    currency: currencies[Field.CURRENCY_B],\n    style: {\n      marginRight: '8px'\n    },\n    chainId: chainId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TYPE.body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, (_parsedAmounts$Field$2 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$2 === void 0 ? void 0 : _parsedAmounts$Field$2.toSignificant(6)))), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, t('addLiquidity.rates')), /*#__PURE__*/React.createElement(TYPE.body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, `1 ${(_currencies$Field$CUR3 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR3 === void 0 ? void 0 : _currencies$Field$CUR3.symbol} = ${price === null || price === void 0 ? void 0 : price.toSignificant(4)} ${(_currencies$Field$CUR4 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR4 === void 0 ? void 0 : _currencies$Field$CUR4.symbol}`)), /*#__PURE__*/React.createElement(RowBetween, {\n    style: {\n      justifyContent: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, `1 ${(_currencies$Field$CUR5 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR5 === void 0 ? void 0 : _currencies$Field$CUR5.symbol} = ${price === null || price === void 0 ? void 0 : price.invert().toSignificant(4)} ${(_currencies$Field$CUR6 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR6 === void 0 ? void 0 : _currencies$Field$CUR6.symbol}`), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \" \", t('addLiquidity.shareOfPool')), /*#__PURE__*/React.createElement(TYPE.body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, noLiquidity ? '100' : poolTokenPercentage === null || poolTokenPercentage === void 0 ? void 0 : poolTokenPercentage.toSignificant(4), \"%\")), /*#__PURE__*/React.createElement(ButtonPrimary, {\n    style: {\n      margin: '20px 0 0 0'\n    },\n    onClick: onAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 500,\n    fontSize: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, noLiquidity ? t('addLiquidity.createPoolSupply') : t('addLiquidity.confirmSupply'))));\n}","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/AddLiquidity/ConfirmAddModalBottom.tsx"],"names":["React","Text","ButtonPrimary","RowBetween","RowFixed","CurrencyLogo","Field","TYPE","useTranslation","useChainId","ConfirmAddModalBottom","noLiquidity","price","currencies","parsedAmounts","poolTokenPercentage","onAdd","t","chainId","CURRENCY_A","symbol","marginRight","toSignificant","CURRENCY_B","justifyContent","invert","margin"],"mappings":"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","sourcesContent":["import { Currency, CurrencyAmount, Fraction, Percent } from '@pangolindex/sdk'\nimport React from 'react'\nimport { Text } from 'rebass'\nimport { ButtonPrimary } from '../../components/Button'\nimport { RowBetween, RowFixed } from '../../components/Row'\nimport CurrencyLogo from '../../components/CurrencyLogo'\nimport { Field } from '../../state/mint/actions'\nimport { TYPE } from '../../theme'\nimport { useTranslation } from 'react-i18next'\nimport { useChainId } from 'src/hooks'\n\nexport function ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  const chainId = useChainId()\n  return (\n    <>\n      <RowBetween>\n        <TYPE.body>\n          {currencies[Field.CURRENCY_A]?.symbol} {t('addLiquidity.deposited')}\n        </TYPE.body>\n        <RowFixed>\n          {chainId && (\n            <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} chainId={chainId} />\n          )}\n          <TYPE.body>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</TYPE.body>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <TYPE.body>\n          {currencies[Field.CURRENCY_B]?.symbol} {t('addLiquidity.deposited')}\n        </TYPE.body>\n        <RowFixed>\n          {chainId && (\n            <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} chainId={chainId} />\n          )}\n          <TYPE.body>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</TYPE.body>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <TYPE.body>{t('addLiquidity.rates')}</TYPE.body>\n        <TYPE.body>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </TYPE.body>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n          currencies[Field.CURRENCY_A]?.symbol\n        }`}\n      </RowBetween>\n      <RowBetween>\n        <TYPE.body> {t('addLiquidity.shareOfPool')}</TYPE.body>\n        <TYPE.body>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</TYPE.body>\n      </RowBetween>\n      <ButtonPrimary style={{ margin: '20px 0 0 0' }} onClick={onAdd}>\n        <Text fontWeight={500} fontSize={20}>\n          {noLiquidity ? t('addLiquidity.createPoolSupply') : t('addLiquidity.confirmSupply')}\n        </Text>\n      </ButtonPrimary>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}