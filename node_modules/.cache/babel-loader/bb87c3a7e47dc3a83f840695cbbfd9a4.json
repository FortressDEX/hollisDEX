{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/WalletModal/index.tsx\";\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core';\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\nimport React, { useEffect, useState } from 'react';\nimport { isMobile } from 'react-device-detect';\nimport ReactGA from 'react-ga';\nimport styled from 'styled-components';\nimport MetamaskIcon from '../../assets/images/metamask.png';\nimport XDefiIcon from '../../assets/images/xDefi.png';\nimport { ReactComponent as Close } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/x.svg\";\nimport { gnosisSafe, injected, xDefi } from '../../connectors';\nimport { LANDING_PAGE, SUPPORTED_WALLETS, POLYGON_CHAIN_PARAMS, IS_IN_IFRAME } from '../../constants';\nimport usePrevious from '../../hooks/usePrevious';\nimport { ApplicationModal } from '../../state/application/actions';\nimport { useModalOpen, useWalletModalToggle } from '../../state/application/hooks';\nimport { ExternalLink } from '../../theme';\nimport AccountDetails from '../AccountDetails';\nimport { ButtonLight } from '../../components/Button';\nimport Modal from '../Modal';\nimport Option from './Option';\nimport PendingView from './PendingView';\nimport { useTranslation } from 'react-i18next';\nimport { useIsBetaUI } from 'src/hooks/useLocation';\nconst WALLET_TUTORIAL = `${LANDING_PAGE}/tutorials/getting-started/#set-up-metamask`;\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`;\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.text4;\n}};\n  }\n`;\nconst Wrapper = styled.div`\n  ${_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.flexColumnNoWrap;\n}}\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`;\nconst HeaderRow = styled.div`\n  ${_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.flexRowNoWrap;\n}};\n  padding: 1rem 1rem;\n  font-weight: 500;\n  color: ${props => props.color === 'blue' ? _ref4 => {\n  let {\n    theme,\n    isBeta\n  } = _ref4;\n  return isBeta ? theme.primary : theme.primary1;\n} : 'inherit'};\n  ${_ref5 => {\n  let {\n    theme\n  } = _ref5;\n  return theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `;\n}};\n`;\nconst ContentWrapper = styled.div`\n  background-color: ${_ref6 => {\n  let {\n    theme\n  } = _ref6;\n  return theme.bg2;\n}};\n  padding: 2rem;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n\n  ${_ref7 => {\n  let {\n    theme\n  } = _ref7;\n  return theme.mediaWidth.upToMedium`padding: 1rem`;\n}};\n`;\nconst UpperSection = styled.div`\n  position: relative;\n\n  h5 {\n    margin: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n\n  h5:last-child {\n    margin-bottom: 0px;\n  }\n\n  h4 {\n    margin-top: 0;\n    font-weight: 500;\n  }\n`;\nconst Blurb = styled.div`\n  ${_ref8 => {\n  let {\n    theme\n  } = _ref8;\n  return theme.flexRowNoWrap;\n}}\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin-top: 2rem;\n  ${_ref9 => {\n  let {\n    theme\n  } = _ref9;\n  return theme.mediaWidth.upToMedium`\n    margin: 1rem;\n    font-size: 12px;\n  `;\n}};\n`;\nconst OptionGrid = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  ${_ref10 => {\n  let {\n    theme\n  } = _ref10;\n  return theme.mediaWidth.upToMedium`\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n  `;\n}};\n`;\nconst HoverText = styled.div`\n  :hover {\n    cursor: pointer;\n  }\n`;\nconst WALLET_VIEWS = {\n  OPTIONS: 'options',\n  OPTIONS_SECONDARY: 'options_secondary',\n  ACCOUNT: 'account',\n  PENDING: 'pending'\n};\n\nfunction addAvalancheNetwork() {\n  injected.getProvider().then(provider => {\n    provider === null || provider === void 0 ? void 0 : provider.request({\n      method: 'wallet_addEthereumChain',\n      params: [POLYGON_CHAIN_PARAMS]\n    }).catch(error => {\n      console.log(error);\n    });\n  });\n}\n\nexport default function WalletModal(_ref11) {\n  let {\n    pendingTransactions,\n    confirmedTransactions,\n    ENSName\n  } = _ref11;\n  // important that these are destructed from the account-specific web3-react context\n  const {\n    active,\n    account,\n    connector,\n    activate,\n    error\n  } = useWeb3React();\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT);\n  const [pendingWallet, setPendingWallet] = useState();\n  const [pendingError, setPendingError] = useState();\n  const [triedSafe, setTriedSafe] = useState(!IS_IN_IFRAME);\n  const walletModalOpen = useModalOpen(ApplicationModal.WALLET);\n  const toggleWalletModal = useWalletModalToggle();\n  const previousAccount = usePrevious(account);\n  const {\n    t\n  } = useTranslation();\n  const isBeta = useIsBetaUI(); // close on connection, when logged out before\n\n  useEffect(() => {\n    if (account && !previousAccount && walletModalOpen) {\n      toggleWalletModal();\n    }\n  }, [account, previousAccount, toggleWalletModal, walletModalOpen]); // always reset to account view\n\n  useEffect(() => {\n    if (walletModalOpen) {\n      setPendingError(false);\n      setWalletView(WALLET_VIEWS.ACCOUNT);\n    }\n  }, [walletModalOpen]); // close modal when a connection is successful\n\n  const activePrevious = usePrevious(active);\n  const connectorPrevious = usePrevious(connector);\n  useEffect(() => {\n    if (walletModalOpen && (active && !activePrevious || connector && connector !== connectorPrevious && !error)) {\n      setWalletView(WALLET_VIEWS.ACCOUNT);\n    }\n  }, [setWalletView, active, error, connector, walletModalOpen, activePrevious, connectorPrevious]);\n\n  const tryActivation = async connector => {\n    var _connector$walletConn, _connector$walletConn2;\n\n    let name = '';\n    Object.keys(SUPPORTED_WALLETS).map(key => {\n      if (connector === SUPPORTED_WALLETS[key].connector) {\n        return name = SUPPORTED_WALLETS[key].name;\n      }\n\n      return true;\n    }); // log selected wallet\n\n    ReactGA.event({\n      category: 'Wallet',\n      action: 'Change Wallet',\n      label: name\n    });\n    setPendingWallet(connector); // set wallet for pending view\n\n    setWalletView(WALLET_VIEWS.PENDING); // if the connector is walletconnect and the user has already tried to connect, manually reset the connector\n\n    if (connector instanceof WalletConnectConnector && ((_connector$walletConn = connector.walletConnectProvider) === null || _connector$walletConn === void 0 ? void 0 : (_connector$walletConn2 = _connector$walletConn.wc) === null || _connector$walletConn2 === void 0 ? void 0 : _connector$walletConn2.uri)) {\n      connector.walletConnectProvider = undefined;\n    }\n\n    if (!triedSafe && connector instanceof SafeAppConnector) {\n      connector.isSafeApp().then(loadedInSafe => {\n        if (loadedInSafe) {\n          activate(connector, undefined, true).catch(() => {\n            setTriedSafe(true);\n          });\n        } else {\n          setTriedSafe(true);\n        }\n      });\n    } else {\n      connector && activate(connector, undefined, true).then(() => {\n        var _window, _window$ethereum, _window2, _window3;\n\n        const isCbWalletDappBrowser = (_window = window) === null || _window === void 0 ? void 0 : (_window$ethereum = _window.ethereum) === null || _window$ethereum === void 0 ? void 0 : _window$ethereum.isCoinbaseWallet;\n        const isWalletlink = !!((_window2 = window) === null || _window2 === void 0 ? void 0 : _window2.WalletLinkProvider) || !!((_window3 = window) === null || _window3 === void 0 ? void 0 : _window3.walletLinkExtension);\n        const isCbWallet = isCbWalletDappBrowser || isWalletlink;\n\n        if (isCbWallet) {\n          addAvalancheNetwork();\n        }\n      }).catch(error => {\n        if (error instanceof UnsupportedChainIdError) {\n          activate(connector); // a little janky...can't use setError because the connector isn't set\n        } else {\n          setPendingError(true);\n        }\n      });\n    }\n  }; // get wallets user can switch too, depending on device/browser\n\n\n  function getOptions() {\n    const isMetamask = window.ethereum && window.ethereum.isMetaMask;\n    const isXDEFI = window.ethereum && window.ethereum.isXDEFI;\n    return Object.keys(SUPPORTED_WALLETS).map(key => {\n      const option = SUPPORTED_WALLETS[key]; // check for mobile options\n\n      if (isMobile) {\n        if (!window.web3 && !window.ethereum && option.mobile) {\n          return /*#__PURE__*/React.createElement(Option, {\n            onClick: () => {\n              option.connector !== connector && !option.href && tryActivation(option.connector);\n            },\n            id: `connect-${key}`,\n            key: key,\n            active: option.connector && option.connector === connector,\n            color: option.color,\n            link: option.href,\n            header: option.name,\n            subheader: null,\n            icon: require('../../assets/images/' + option.iconName),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 13\n            }\n          });\n        }\n\n        return null;\n      } // overwrite injected when needed\n\n\n      if (option.connector === injected) {\n        // don't show injected if there's no injected provider\n        if (!(window.web3 || window.ethereum)) {\n          if (option.name === 'MetaMask') {\n            return /*#__PURE__*/React.createElement(Option, {\n              id: `connect-${key}`,\n              key: key,\n              color: '#E8831D',\n              header: 'Install Metamask',\n              subheader: null,\n              link: 'https://metamask.io/',\n              icon: MetamaskIcon,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 15\n              }\n            });\n          } else {\n            return null; //dont want to return install twice\n          }\n        } // don't return metamask if injected provider isn't metamask\n        else if (option.name === 'MetaMask' && !isMetamask) {\n          return null;\n        } // likewise for generic\n        else if (option.name === 'Injected' && isMetamask) {\n          return null;\n        }\n      } // overwrite injected when needed\n      else if (option.connector === xDefi) {\n        // don't show injected if there's no injected provider\n        if (!(window.xfi && window.xfi.ethereum && window.xfi.ethereum.isXDEFI)) {\n          if (option.name === 'XDEFI') {\n            return /*#__PURE__*/React.createElement(Option, {\n              id: `connect-${key}`,\n              key: key,\n              color: '#315CF5',\n              header: 'Install XDEFI',\n              subheader: null,\n              link: 'https://www.xdefi.io/',\n              icon: XDefiIcon,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 15\n              }\n            });\n          } else {\n            return null; //dont want to return install twice\n          }\n        } // likewise for generic\n        else if (option.name === 'Injected' && (isMetamask || isXDEFI)) {\n          return null;\n        }\n      } // Not show Gnosis Safe option without Gnosis Interface\n\n\n      if (option.connector === gnosisSafe && !IS_IN_IFRAME) {\n        return null;\n      } // return rest of options\n\n\n      return !isMobile && !option.mobileOnly && /*#__PURE__*/React.createElement(Option, {\n        id: `connect-${key}`,\n        onClick: () => {\n          option.connector === connector ? setWalletView(WALLET_VIEWS.ACCOUNT) : !option.href && tryActivation(option.connector);\n        },\n        key: key,\n        active: option.connector === connector,\n        color: option.color,\n        link: option.href,\n        header: option.name,\n        subheader: null //use option.descriptio to bring back multi-line\n        ,\n        icon: require('../../assets/images/' + option.iconName),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }\n      });\n    });\n  }\n\n  function getModalContent() {\n    var _window4, _window4$ethereum, _window5, _window6;\n\n    const isMetamask = window.ethereum && window.ethereum.isMetaMask;\n    const isXDEFI = window.xfi && window.xfi.ethereum && window.xfi.ethereum.isXDEFI;\n    const isCbWalletDappBrowser = (_window4 = window) === null || _window4 === void 0 ? void 0 : (_window4$ethereum = _window4.ethereum) === null || _window4$ethereum === void 0 ? void 0 : _window4$ethereum.isCoinbaseWallet;\n    const isWalletlink = !!((_window5 = window) === null || _window5 === void 0 ? void 0 : _window5.WalletLinkProvider) || !!((_window6 = window) === null || _window6 === void 0 ? void 0 : _window6.walletLinkExtension);\n    const isCbWallet = isCbWalletDappBrowser || isWalletlink;\n    const isMetamaskOrCbWallet = isMetamask || isCbWallet || isXDEFI;\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(UpperSection, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        onClick: toggleWalletModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CloseColor, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(HeaderRow, {\n        isBeta: isBeta,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }\n      }, error instanceof UnsupportedChainIdError ? t('walletModal.wrongNetwork') : t('walletModal.errorConnecting')), /*#__PURE__*/React.createElement(ContentWrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }\n      }, error instanceof UnsupportedChainIdError ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 17\n        }\n      }, t('walletModal.pleaseConnectAvalanche')), isMetamaskOrCbWallet && /*#__PURE__*/React.createElement(ButtonLight, {\n        onClick: addAvalancheNetwork,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 19\n        }\n      }, t('walletModal.switchAvalanche'))) : t('walletModal.errorConnectingRefresh')));\n    }\n\n    if (account && walletView === WALLET_VIEWS.ACCOUNT) {\n      return /*#__PURE__*/React.createElement(AccountDetails, {\n        toggleWalletModal: toggleWalletModal,\n        pendingTransactions: pendingTransactions,\n        confirmedTransactions: confirmedTransactions,\n        ENSName: ENSName,\n        openOptions: () => setWalletView(WALLET_VIEWS.OPTIONS),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(UpperSection, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      onClick: toggleWalletModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CloseColor, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }\n    })), walletView !== WALLET_VIEWS.ACCOUNT ? /*#__PURE__*/React.createElement(HeaderRow, {\n      color: \"blue\",\n      isBeta: isBeta,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(HoverText, {\n      onClick: () => {\n        setPendingError(false);\n        setWalletView(WALLET_VIEWS.ACCOUNT);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 13\n      }\n    }, \"Back\")) : /*#__PURE__*/React.createElement(HeaderRow, {\n      isBeta: isBeta,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(HoverText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 13\n      }\n    }, t('walletModal.connectToWallet'))), /*#__PURE__*/React.createElement(ContentWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }\n    }, walletView === WALLET_VIEWS.PENDING ? /*#__PURE__*/React.createElement(PendingView, {\n      connector: pendingWallet,\n      error: pendingError,\n      setPendingError: setPendingError,\n      tryActivation: tryActivation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(OptionGrid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 13\n      }\n    }, getOptions()), walletView !== WALLET_VIEWS.PENDING && /*#__PURE__*/React.createElement(Blurb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 15\n      }\n    }, t('walletModal.newToAvalanche'), \" \\xA0\"), ' ', /*#__PURE__*/React.createElement(ExternalLink, {\n      href: WALLET_TUTORIAL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 15\n      }\n    }, t('walletModal.learnMoreWallet')))));\n  }\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: walletModalOpen,\n    onDismiss: toggleWalletModal,\n    minHeight: false,\n    maxHeight: 90,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }\n  }, getModalContent()));\n}","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/WalletModal/index.tsx"],"names":["SafeAppConnector","UnsupportedChainIdError","useWeb3React","WalletConnectConnector","React","useEffect","useState","isMobile","ReactGA","styled","MetamaskIcon","XDefiIcon","gnosisSafe","injected","xDefi","LANDING_PAGE","SUPPORTED_WALLETS","POLYGON_CHAIN_PARAMS","IS_IN_IFRAME","usePrevious","ApplicationModal","useModalOpen","useWalletModalToggle","ExternalLink","AccountDetails","ButtonLight","Modal","Option","PendingView","useTranslation","useIsBetaUI","WALLET_TUTORIAL","CloseIcon","div","CloseColor","Close","theme","text4","Wrapper","flexColumnNoWrap","HeaderRow","flexRowNoWrap","props","color","isBeta","primary","primary1","mediaWidth","upToMedium","ContentWrapper","bg2","UpperSection","Blurb","OptionGrid","HoverText","WALLET_VIEWS","OPTIONS","OPTIONS_SECONDARY","ACCOUNT","PENDING","addAvalancheNetwork","getProvider","then","provider","request","method","params","catch","error","console","log","WalletModal","pendingTransactions","confirmedTransactions","ENSName","active","account","connector","activate","walletView","setWalletView","pendingWallet","setPendingWallet","pendingError","setPendingError","triedSafe","setTriedSafe","walletModalOpen","WALLET","toggleWalletModal","previousAccount","t","activePrevious","connectorPrevious","tryActivation","name","Object","keys","map","key","event","category","action","label","walletConnectProvider","wc","uri","undefined","isSafeApp","loadedInSafe","isCbWalletDappBrowser","window","ethereum","isCoinbaseWallet","isWalletlink","WalletLinkProvider","walletLinkExtension","isCbWallet","getOptions","isMetamask","isMetaMask","isXDEFI","option","web3","mobile","href","require","iconName","xfi","mobileOnly","getModalContent","isMetamaskOrCbWallet"],"mappings":"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","sourcesContent":["import { AbstractConnector } from '@web3-react/abstract-connector'\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react'\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport React, { useEffect, useState } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport ReactGA from 'react-ga'\nimport styled from 'styled-components'\nimport MetamaskIcon from '../../assets/images/metamask.png'\nimport XDefiIcon from '../../assets/images/xDefi.png'\nimport { ReactComponent as Close } from '../../assets/images/x.svg'\nimport { gnosisSafe, injected, xDefi } from '../../connectors'\nimport { LANDING_PAGE, SUPPORTED_WALLETS, POLYGON_CHAIN_PARAMS, IS_IN_IFRAME } from '../../constants'\nimport usePrevious from '../../hooks/usePrevious'\nimport { ApplicationModal } from '../../state/application/actions'\nimport { useModalOpen, useWalletModalToggle } from '../../state/application/hooks'\nimport { ExternalLink } from '../../theme'\nimport AccountDetails from '../AccountDetails'\nimport { ButtonLight } from '../../components/Button'\n\nimport Modal from '../Modal'\nimport Option from './Option'\nimport PendingView from './PendingView'\nimport { useTranslation } from 'react-i18next'\nimport { useIsBetaUI } from 'src/hooks/useLocation'\n\nconst WALLET_TUTORIAL = `${LANDING_PAGE}/tutorials/getting-started/#set-up-metamask`\n\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${({ theme }) => theme.text4};\n  }\n`\n\nconst Wrapper = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`\n\nconst HeaderRow = styled.div<{ isBeta: boolean }>`\n  ${({ theme }) => theme.flexRowNoWrap};\n  padding: 1rem 1rem;\n  font-weight: 500;\n  color: ${props =>\n    props.color === 'blue' ? ({ theme, isBeta }) => (isBeta ? theme.primary : theme.primary1) : 'inherit'};\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `};\n`\n\nconst ContentWrapper = styled.div`\n  background-color: ${({ theme }) => theme.bg2};\n  padding: 2rem;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`padding: 1rem`};\n`\n\nconst UpperSection = styled.div`\n  position: relative;\n\n  h5 {\n    margin: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n\n  h5:last-child {\n    margin-bottom: 0px;\n  }\n\n  h4 {\n    margin-top: 0;\n    font-weight: 500;\n  }\n`\n\nconst Blurb = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin-top: 2rem;\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    margin: 1rem;\n    font-size: 12px;\n  `};\n`\n\nconst OptionGrid = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n  `};\n`\n\nconst HoverText = styled.div`\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst WALLET_VIEWS = {\n  OPTIONS: 'options',\n  OPTIONS_SECONDARY: 'options_secondary',\n  ACCOUNT: 'account',\n  PENDING: 'pending'\n}\n\nfunction addAvalancheNetwork() {\n  injected.getProvider().then(provider => {\n    provider\n      ?.request({\n        method: 'wallet_addEthereumChain',\n        params: [POLYGON_CHAIN_PARAMS]\n      })\n      .catch((error: any) => {\n        console.log(error)\n      })\n  })\n}\n\nexport default function WalletModal({\n  pendingTransactions,\n  confirmedTransactions,\n  ENSName\n}: {\n  pendingTransactions: string[] // hashes of pending\n  confirmedTransactions: string[] // hashes of confirmed\n  ENSName?: string\n}) {\n  // important that these are destructed from the account-specific web3-react context\n  const { active, account, connector, activate, error } = useWeb3React()\n\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT)\n\n  const [pendingWallet, setPendingWallet] = useState<AbstractConnector | undefined>()\n\n  const [pendingError, setPendingError] = useState<boolean>()\n\n  const [triedSafe, setTriedSafe] = useState<boolean>(!IS_IN_IFRAME)\n\n  const walletModalOpen = useModalOpen(ApplicationModal.WALLET)\n  const toggleWalletModal = useWalletModalToggle()\n\n  const previousAccount = usePrevious(account)\n  const { t } = useTranslation()\n  const isBeta = useIsBetaUI()\n  // close on connection, when logged out before\n  useEffect(() => {\n    if (account && !previousAccount && walletModalOpen) {\n      toggleWalletModal()\n    }\n  }, [account, previousAccount, toggleWalletModal, walletModalOpen])\n\n  // always reset to account view\n  useEffect(() => {\n    if (walletModalOpen) {\n      setPendingError(false)\n      setWalletView(WALLET_VIEWS.ACCOUNT)\n    }\n  }, [walletModalOpen])\n\n  // close modal when a connection is successful\n  const activePrevious = usePrevious(active)\n  const connectorPrevious = usePrevious(connector)\n  useEffect(() => {\n    if (walletModalOpen && ((active && !activePrevious) || (connector && connector !== connectorPrevious && !error))) {\n      setWalletView(WALLET_VIEWS.ACCOUNT)\n    }\n  }, [setWalletView, active, error, connector, walletModalOpen, activePrevious, connectorPrevious])\n\n  const tryActivation = async (connector: AbstractConnector | SafeAppConnector | undefined) => {\n    let name = ''\n    Object.keys(SUPPORTED_WALLETS).map(key => {\n      if (connector === SUPPORTED_WALLETS[key].connector) {\n        return (name = SUPPORTED_WALLETS[key].name)\n      }\n      return true\n    })\n    // log selected wallet\n    ReactGA.event({\n      category: 'Wallet',\n      action: 'Change Wallet',\n      label: name\n    })\n    setPendingWallet(connector) // set wallet for pending view\n    setWalletView(WALLET_VIEWS.PENDING)\n\n    // if the connector is walletconnect and the user has already tried to connect, manually reset the connector\n    if (connector instanceof WalletConnectConnector && connector.walletConnectProvider?.wc?.uri) {\n      connector.walletConnectProvider = undefined\n    }\n\n    if (!triedSafe && connector instanceof SafeAppConnector) {\n      connector.isSafeApp().then(loadedInSafe => {\n        if (loadedInSafe) {\n          activate(connector, undefined, true).catch(() => {\n            setTriedSafe(true)\n          })\n        } else {\n          setTriedSafe(true)\n        }\n      })\n    } else {\n      connector &&\n        activate(connector, undefined, true)\n          .then(() => {\n            const isCbWalletDappBrowser = window?.ethereum?.isCoinbaseWallet\n            const isWalletlink = !!window?.WalletLinkProvider || !!window?.walletLinkExtension\n            const isCbWallet = isCbWalletDappBrowser || isWalletlink\n            if (isCbWallet) {\n              addAvalancheNetwork()\n            }\n          })\n          .catch(error => {\n            if (error instanceof UnsupportedChainIdError) {\n              activate(connector) // a little janky...can't use setError because the connector isn't set\n            } else {\n              setPendingError(true)\n            }\n          })\n    }\n  }\n\n  // get wallets user can switch too, depending on device/browser\n  function getOptions() {\n    const isMetamask = window.ethereum && window.ethereum.isMetaMask\n    const isXDEFI = window.ethereum && window.ethereum.isXDEFI\n\n    return Object.keys(SUPPORTED_WALLETS).map(key => {\n      const option = SUPPORTED_WALLETS[key]\n      // check for mobile options\n      if (isMobile) {\n        if (!window.web3 && !window.ethereum && option.mobile) {\n          return (\n            <Option\n              onClick={() => {\n                option.connector !== connector && !option.href && tryActivation(option.connector)\n              }}\n              id={`connect-${key}`}\n              key={key}\n              active={option.connector && option.connector === connector}\n              color={option.color}\n              link={option.href}\n              header={option.name}\n              subheader={null}\n              icon={require('../../assets/images/' + option.iconName)}\n            />\n          )\n        }\n        return null\n      }\n\n      // overwrite injected when needed\n      if (option.connector === injected) {\n        // don't show injected if there's no injected provider\n        if (!(window.web3 || window.ethereum)) {\n          if (option.name === 'MetaMask') {\n            return (\n              <Option\n                id={`connect-${key}`}\n                key={key}\n                color={'#E8831D'}\n                header={'Install Metamask'}\n                subheader={null}\n                link={'https://metamask.io/'}\n                icon={MetamaskIcon}\n              />\n            )\n          } else {\n            return null //dont want to return install twice\n          }\n        }\n        // don't return metamask if injected provider isn't metamask\n        else if (option.name === 'MetaMask' && !isMetamask) {\n          return null\n        }\n\n        // likewise for generic\n        else if (option.name === 'Injected' && isMetamask) {\n          return null\n        }\n      }\n\n      // overwrite injected when needed\n      else if (option.connector === xDefi) {\n        // don't show injected if there's no injected provider\n\n        if (!(window.xfi && window.xfi.ethereum && window.xfi.ethereum.isXDEFI)) {\n          if (option.name === 'XDEFI') {\n            return (\n              <Option\n                id={`connect-${key}`}\n                key={key}\n                color={'#315CF5'}\n                header={'Install XDEFI'}\n                subheader={null}\n                link={'https://www.xdefi.io/'}\n                icon={XDefiIcon}\n              />\n            )\n          } else {\n            return null //dont want to return install twice\n          }\n        }\n\n        // likewise for generic\n        else if (option.name === 'Injected' && (isMetamask || isXDEFI)) {\n          return null\n        }\n      }\n\n      // Not show Gnosis Safe option without Gnosis Interface\n      if (option.connector === gnosisSafe && !IS_IN_IFRAME) {\n        return null\n      }\n\n      // return rest of options\n      return (\n        !isMobile &&\n        !option.mobileOnly && (\n          <Option\n            id={`connect-${key}`}\n            onClick={() => {\n              option.connector === connector\n                ? setWalletView(WALLET_VIEWS.ACCOUNT)\n                : !option.href && tryActivation(option.connector)\n            }}\n            key={key}\n            active={option.connector === connector}\n            color={option.color}\n            link={option.href}\n            header={option.name}\n            subheader={null} //use option.descriptio to bring back multi-line\n            icon={require('../../assets/images/' + option.iconName)}\n          />\n        )\n      )\n    })\n  }\n\n  function getModalContent() {\n    const isMetamask = window.ethereum && window.ethereum.isMetaMask\n    const isXDEFI = window.xfi && window.xfi.ethereum && window.xfi.ethereum.isXDEFI\n    const isCbWalletDappBrowser = window?.ethereum?.isCoinbaseWallet\n    const isWalletlink = !!window?.WalletLinkProvider || !!window?.walletLinkExtension\n    const isCbWallet = isCbWalletDappBrowser || isWalletlink\n    const isMetamaskOrCbWallet = isMetamask || isCbWallet || isXDEFI\n\n    if (error) {\n      return (\n        <UpperSection>\n          <CloseIcon onClick={toggleWalletModal}>\n            <CloseColor />\n          </CloseIcon>\n          <HeaderRow isBeta={isBeta}>\n            {error instanceof UnsupportedChainIdError\n              ? t('walletModal.wrongNetwork')\n              : t('walletModal.errorConnecting')}\n          </HeaderRow>\n          <ContentWrapper>\n            {error instanceof UnsupportedChainIdError ? (\n              <>\n                <h5>{t('walletModal.pleaseConnectAvalanche')}</h5>\n                {isMetamaskOrCbWallet && (\n                  <ButtonLight onClick={addAvalancheNetwork}>{t('walletModal.switchAvalanche')}</ButtonLight>\n                )}\n              </>\n            ) : (\n              t('walletModal.errorConnectingRefresh')\n            )}\n          </ContentWrapper>\n        </UpperSection>\n      )\n    }\n    if (account && walletView === WALLET_VIEWS.ACCOUNT) {\n      return (\n        <AccountDetails\n          toggleWalletModal={toggleWalletModal}\n          pendingTransactions={pendingTransactions}\n          confirmedTransactions={confirmedTransactions}\n          ENSName={ENSName}\n          openOptions={() => setWalletView(WALLET_VIEWS.OPTIONS)}\n        />\n      )\n    }\n    return (\n      <UpperSection>\n        <CloseIcon onClick={toggleWalletModal}>\n          <CloseColor />\n        </CloseIcon>\n        {walletView !== WALLET_VIEWS.ACCOUNT ? (\n          <HeaderRow color=\"blue\" isBeta={isBeta}>\n            <HoverText\n              onClick={() => {\n                setPendingError(false)\n                setWalletView(WALLET_VIEWS.ACCOUNT)\n              }}\n            >\n              Back\n            </HoverText>\n          </HeaderRow>\n        ) : (\n          <HeaderRow isBeta={isBeta}>\n            <HoverText>{t('walletModal.connectToWallet')}</HoverText>\n          </HeaderRow>\n        )}\n        <ContentWrapper>\n          {walletView === WALLET_VIEWS.PENDING ? (\n            <PendingView\n              connector={pendingWallet}\n              error={pendingError}\n              setPendingError={setPendingError}\n              tryActivation={tryActivation}\n            />\n          ) : (\n            <OptionGrid>{getOptions()}</OptionGrid>\n          )}\n          {walletView !== WALLET_VIEWS.PENDING && (\n            <Blurb>\n              <span>{t('walletModal.newToAvalanche')} &nbsp;</span>{' '}\n              <ExternalLink href={WALLET_TUTORIAL}>{t('walletModal.learnMoreWallet')}</ExternalLink>\n            </Blurb>\n          )}\n        </ContentWrapper>\n      </UpperSection>\n    )\n  }\n\n  return (\n    <Modal isOpen={walletModalOpen} onDismiss={toggleWalletModal} minHeight={false} maxHeight={90}>\n      <Wrapper>{getModalContent()}</Wrapper>\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}