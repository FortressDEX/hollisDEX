{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Swap/MyPortfolio/PortfolioChart.tsx\";\nimport React from 'react';\nimport { Text, Box, Button } from '@pangolindex/components';\nimport { LineChart, Line, ResponsiveContainer } from 'recharts';\nimport { BalanceInfo, DurationBtns } from './styleds';\nimport { useGetChainBalance } from 'src/state/portifolio/hooks';\n\nconst PortfolioChart = () => {\n  const data = [];\n  const durationButtons = ['1H', '1D', '1W', '1M', '1Y', 'ALL'];\n  const rand = 300;\n\n  for (let i = 0; i < 20; i += 1) {\n    const d = {\n      key: 2000 + i,\n      value: Math.random() * (rand + 50) + 100\n    };\n    data.push(d);\n  }\n\n  const {\n    data: balance = 0\n  } = useGetChainBalance();\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BalanceInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"text1\",\n    fontSize: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"$\", balance.toLocaleString())), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    height: 150,\n    width: '100%',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"value\",\n    stroke: '#18C145',\n    dot: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(DurationBtns, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, durationButtons.map(btn => /*#__PURE__*/React.createElement(Button, {\n    variant: \"plain\",\n    key: btn,\n    padding: \"0px\",\n    width: \"auto\",\n    color: \"text1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, btn))));\n};\n\nexport default PortfolioChart;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Swap/MyPortfolio/PortfolioChart.tsx"],"names":["React","Text","Box","Button","LineChart","Line","ResponsiveContainer","BalanceInfo","DurationBtns","useGetChainBalance","PortfolioChart","data","durationButtons","rand","i","d","key","value","Math","random","push","balance","toLocaleString","map","btn"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,MAApB,QAAkC,yBAAlC;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,mBAA1B,QAAqD,UAArD;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,WAA1C;AACA,SAASC,kBAAT,QAAmC,4BAAnC;;AAMA,MAAMC,cAA+B,GAAG,MAAM;AAC5C,QAAMC,IAAI,GAAG,EAAb;AACA,QAAMC,eAAe,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,KAA/B,CAAxB;AAEA,QAAMC,IAAI,GAAG,GAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,IAAI,CAA7B,EAAgC;AAC9B,UAAMC,CAAC,GAAG;AACRC,MAAAA,GAAG,EAAE,OAAOF,CADJ;AAERG,MAAAA,KAAK,EAAEC,IAAI,CAACC,MAAL,MAAiBN,IAAI,GAAG,EAAxB,IAA8B;AAF7B,KAAV;AAKAF,IAAAA,IAAI,CAACS,IAAL,CAAUL,CAAV;AACD;;AAED,QAAM;AAAEJ,IAAAA,IAAI,EAAEU,OAAO,GAAG;AAAlB,MAAwBZ,kBAAkB,EAAhD;AAEA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,OAAZ;AAAoB,IAAA,QAAQ,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACIY,OAAO,CAACC,cAAR,EADJ,CADF,CADF,eAUE,oBAAC,mBAAD;AAAqB,IAAA,MAAM,EAAE,GAA7B;AAAkC,IAAA,KAAK,EAAE,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEX,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC,OAA9B;AAAsC,IAAA,MAAM,EAAE,SAA9C;AAAyD,IAAA,GAAG,EAAE,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAVF,eAeE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,eAAe,CAACW,GAAhB,CAAoBC,GAAG,iBACtB,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,OAAhB;AAAwB,IAAA,GAAG,EAAEA,GAA7B;AAAkC,IAAA,OAAO,EAAC,KAA1C;AAAgD,IAAA,KAAK,EAAC,MAAtD;AAA6D,IAAA,KAAK,EAAC,OAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,GADH,CADD,CADH,CAfF,CADF;AAyBD,CAzCD;;AA0CA,eAAed,cAAf","sourcesContent":["import React from 'react'\nimport { Text, Box, Button } from '@pangolindex/components'\nimport { LineChart, Line, ResponsiveContainer } from 'recharts'\nimport { BalanceInfo, DurationBtns } from './styleds'\nimport { useGetChainBalance } from 'src/state/portifolio/hooks'\n\ntype Props = {\n  /* */\n}\n\nconst PortfolioChart: React.FC<Props> = () => {\n  const data = []\n  const durationButtons = ['1H', '1D', '1W', '1M', '1Y', 'ALL']\n\n  const rand = 300\n  for (let i = 0; i < 20; i += 1) {\n    const d = {\n      key: 2000 + i,\n      value: Math.random() * (rand + 50) + 100\n    }\n\n    data.push(d)\n  }\n\n  const { data: balance = 0 } = useGetChainBalance()\n\n  return (\n    <Box>\n      <BalanceInfo>\n        <Text color=\"text1\" fontSize=\"24px\">\n          ${balance.toLocaleString()}\n        </Text>\n        {/* <Text color=\"green1\" fontSize=\"15px\">\n          +10.50%\n        </Text> */}\n        {/* <ToggleButtons options={['AVAX', 'USDT']} value={'USDT'} /> */}\n      </BalanceInfo>\n      <ResponsiveContainer height={150} width={'100%'}>\n        <LineChart data={data}>\n          <Line type=\"monotone\" dataKey=\"value\" stroke={'#18C145'} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n      <DurationBtns>\n        {durationButtons.map(btn => (\n          <Button variant=\"plain\" key={btn} padding=\"0px\" width=\"auto\" color=\"text1\">\n            {btn}\n          </Button>\n        ))}\n      </DurationBtns>\n    </Box>\n  )\n}\nexport default PortfolioChart\n"]},"metadata":{},"sourceType":"module"}