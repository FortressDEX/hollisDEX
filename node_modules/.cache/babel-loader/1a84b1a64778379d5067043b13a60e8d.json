{"ast":null,"code":"import { useActiveWeb3React } from '../../hooks';\nimport { useAirdropContract } from '../../hooks/useContract';\nimport { calculateGasMargin } from '../../utils';\nimport { useTransactionAdder } from '../transactions/hooks';\nimport { TokenAmount, JSBI } from '@pangolindex/sdk';\nimport { PNG } from '../../constants/tokens';\nimport { useSingleCallResult } from '../multicall/hooks';\nexport function useAirdropIsClaimingAllowed() {\n  const airdropContract = useAirdropContract();\n  const claimingAllowedResult = useSingleCallResult(airdropContract, 'claimingAllowed', []);\n  return Boolean(!claimingAllowedResult.loading && claimingAllowedResult.result !== undefined && claimingAllowedResult.result[0] === true); // eslint-disable-line eqeqeq\n}\nexport function useUserHasAvailableClaim(account) {\n  var _withdrawAmountResult;\n\n  const airdropContract = useAirdropContract();\n  const withdrawAmountResult = useSingleCallResult(airdropContract, 'withdrawAmount', [account ? account : undefined]);\n  return Boolean(account && !withdrawAmountResult.loading && withdrawAmountResult.result !== undefined && !JSBI.equal(JSBI.BigInt((_withdrawAmountResult = withdrawAmountResult.result) === null || _withdrawAmountResult === void 0 ? void 0 : _withdrawAmountResult[0]), JSBI.BigInt(0))); // eslint-disable-line eqeqeq\n}\nexport function useUserUnclaimedAmount(account) {\n  var _withdrawAmountResult2;\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const canClaim = useUserHasAvailableClaim(account);\n  const airdropContract = useAirdropContract();\n  const withdrawAmountResult = useSingleCallResult(airdropContract, 'withdrawAmount', [account ? account : undefined]);\n  const png = chainId ? PNG[chainId] : undefined;\n  if (!png) return undefined;\n\n  if (!canClaim) {\n    return new TokenAmount(png, JSBI.BigInt(0));\n  }\n\n  return new TokenAmount(png, JSBI.BigInt((_withdrawAmountResult2 = withdrawAmountResult.result) === null || _withdrawAmountResult2 === void 0 ? void 0 : _withdrawAmountResult2[0]));\n}\nexport function useClaimCallback(account) {\n  const {\n    library,\n    chainId\n  } = useActiveWeb3React();\n  const addTransaction = useTransactionAdder();\n  const airdropContract = useAirdropContract();\n\n  const claimCallback = async function () {\n    if (!account || !library || !chainId || !airdropContract) return;\n    return airdropContract.estimateGas['claim']({}).then(estimatedGasLimit => {\n      return airdropContract.claim({\n        value: null,\n        gasLimit: calculateGasMargin(estimatedGasLimit)\n      }).then(response => {\n        addTransaction(response, {\n          summary: `Claimed PNG`,\n          claim: {\n            recipient: account\n          }\n        });\n        return response.hash;\n      }).catch(error => {\n        console.log(error);\n        return '';\n      });\n    });\n  };\n\n  return {\n    claimCallback\n  };\n}","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/state/airdrop/hooks.ts"],"names":["useActiveWeb3React","useAirdropContract","calculateGasMargin","useTransactionAdder","TokenAmount","JSBI","PNG","useSingleCallResult","useAirdropIsClaimingAllowed","airdropContract","claimingAllowedResult","Boolean","loading","result","undefined","useUserHasAvailableClaim","account","withdrawAmountResult","equal","BigInt","useUserUnclaimedAmount","chainId","canClaim","png","useClaimCallback","library","addTransaction","claimCallback","estimateGas","then","estimatedGasLimit","claim","value","gasLimit","response","summary","recipient","hash","catch","error","console","log"],"mappings":"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","sourcesContent":["import { TransactionResponse } from '@ethersproject/providers'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useAirdropContract } from '../../hooks/useContract'\nimport { calculateGasMargin } from '../../utils'\nimport { useTransactionAdder } from '../transactions/hooks'\nimport { TokenAmount, JSBI } from '@pangolindex/sdk'\nimport { PNG } from '../../constants/tokens'\nimport { useSingleCallResult } from '../multicall/hooks'\n\nexport function useAirdropIsClaimingAllowed(): boolean {\n  const airdropContract = useAirdropContract()\n  const claimingAllowedResult = useSingleCallResult(airdropContract, 'claimingAllowed', [])\n  return Boolean(\n    !claimingAllowedResult.loading &&\n      claimingAllowedResult.result !== undefined &&\n      claimingAllowedResult.result[0] === true\n  ) // eslint-disable-line eqeqeq\n}\n\nexport function useUserHasAvailableClaim(account: string | null | undefined): boolean {\n  const airdropContract = useAirdropContract()\n  const withdrawAmountResult = useSingleCallResult(airdropContract, 'withdrawAmount', [account ? account : undefined])\n  return Boolean(\n    account &&\n      !withdrawAmountResult.loading &&\n      withdrawAmountResult.result !== undefined &&\n      !JSBI.equal(JSBI.BigInt(withdrawAmountResult.result?.[0]), JSBI.BigInt(0))\n  ) // eslint-disable-line eqeqeq\n}\n\nexport function useUserUnclaimedAmount(account: string | null | undefined): TokenAmount | undefined {\n  const { chainId } = useActiveWeb3React()\n\n  const canClaim = useUserHasAvailableClaim(account)\n  const airdropContract = useAirdropContract()\n  const withdrawAmountResult = useSingleCallResult(airdropContract, 'withdrawAmount', [account ? account : undefined])\n\n  const png = chainId ? PNG[chainId] : undefined\n  if (!png) return undefined\n  if (!canClaim) {\n    return new TokenAmount(png, JSBI.BigInt(0))\n  }\n  return new TokenAmount(png, JSBI.BigInt(withdrawAmountResult.result?.[0]))\n}\n\nexport function useClaimCallback(\n  account: string | null | undefined\n): {\n  claimCallback: () => Promise<string>\n} {\n  const { library, chainId } = useActiveWeb3React()\n\n  const addTransaction = useTransactionAdder()\n  const airdropContract = useAirdropContract()\n\n  const claimCallback = async function() {\n    if (!account || !library || !chainId || !airdropContract) return\n\n    return airdropContract.estimateGas['claim']({}).then(estimatedGasLimit => {\n      return airdropContract\n        .claim({ value: null, gasLimit: calculateGasMargin(estimatedGasLimit) })\n        .then((response: TransactionResponse) => {\n          addTransaction(response, {\n            summary: `Claimed PNG`,\n            claim: { recipient: account }\n          })\n          return response.hash\n        })\n        .catch((error: any) => {\n          console.log(error)\n          return ''\n        })\n    })\n  }\n\n  return { claimCallback }\n}\n"]},"metadata":{},"sourceType":"module"}