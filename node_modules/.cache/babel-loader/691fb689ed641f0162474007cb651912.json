{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Earn/ManageV1.tsx\";\nimport React from 'react';\nimport { useStakingInfo } from '../../state/stake/hooks';\nimport Manage from './Manage';\nimport { usePair } from '../../data/Reserves';\nimport { wrappedCurrency } from '../../utils/wrappedCurrency';\nimport { useCurrency } from '../../hooks/Tokens';\nimport { useChainId } from '../../hooks';\n\nconst ManageV1 = _ref => {\n  var _useStakingInfo;\n\n  let {\n    match: {\n      params: {\n        currencyIdA,\n        currencyIdB,\n        version\n      }\n    }\n  } = _ref;\n  const chainId = useChainId(); // get currencies and pair\n\n  const [currencyA, currencyB] = [useCurrency(currencyIdA), useCurrency(currencyIdB)];\n  const tokenA = wrappedCurrency(currencyA !== null && currencyA !== void 0 ? currencyA : undefined, chainId);\n  const tokenB = wrappedCurrency(currencyB !== null && currencyB !== void 0 ? currencyB : undefined, chainId);\n  const [, stakingTokenPair] = usePair(tokenA, tokenB);\n  const stakingInfo = (_useStakingInfo = useStakingInfo(Number(version), stakingTokenPair)) === null || _useStakingInfo === void 0 ? void 0 : _useStakingInfo[0];\n  return /*#__PURE__*/React.createElement(Manage, {\n    version: version,\n    stakingInfo: stakingInfo,\n    currencyA: currencyA,\n    currencyB: currencyB,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default ManageV1;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Earn/ManageV1.tsx"],"names":["React","useStakingInfo","Manage","usePair","wrappedCurrency","useCurrency","useChainId","ManageV1","match","params","currencyIdA","currencyIdB","version","chainId","currencyA","currencyB","tokenA","undefined","tokenB","stakingTokenPair","stakingInfo","Number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,yBAA/B;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,eAAT,QAAgC,6BAAhC;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,UAAT,QAA2B,aAA3B;;AAEA,MAAMC,QAAsG,GAAG,QAIzG;AAAA;;AAAA,MAJ0G;AAC9GC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,WAAF;AAAeC,QAAAA,WAAf;AAA4BC,QAAAA;AAA5B;AADH;AADuG,GAI1G;AACJ,QAAMC,OAAO,GAAGP,UAAU,EAA1B,CADI,CAGJ;;AACA,QAAM,CAACQ,SAAD,EAAYC,SAAZ,IAAyB,CAACV,WAAW,CAACK,WAAD,CAAZ,EAA2BL,WAAW,CAACM,WAAD,CAAtC,CAA/B;AACA,QAAMK,MAAM,GAAGZ,eAAe,CAACU,SAAD,aAACA,SAAD,cAACA,SAAD,GAAcG,SAAd,EAAyBJ,OAAzB,CAA9B;AACA,QAAMK,MAAM,GAAGd,eAAe,CAACW,SAAD,aAACA,SAAD,cAACA,SAAD,GAAcE,SAAd,EAAyBJ,OAAzB,CAA9B;AAEA,QAAM,GAAGM,gBAAH,IAAuBhB,OAAO,CAACa,MAAD,EAASE,MAAT,CAApC;AACA,QAAME,WAAW,sBAAGnB,cAAc,CAACoB,MAAM,CAACT,OAAD,CAAP,EAAkBO,gBAAlB,CAAjB,oDAAG,gBAAoD,CAApD,CAApB;AAEA,sBAAO,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEP,OAAjB;AAA0B,IAAA,WAAW,EAAEQ,WAAvC;AAAoD,IAAA,SAAS,EAAEN,SAA/D;AAA0E,IAAA,SAAS,EAAEC,SAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAhBD;;AAkBA,eAAeR,QAAf","sourcesContent":["import React from 'react'\nimport { useStakingInfo } from '../../state/stake/hooks'\nimport { RouteComponentProps } from 'react-router-dom'\nimport Manage from './Manage'\nimport { usePair } from '../../data/Reserves'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { useChainId } from '../../hooks'\n\nconst ManageV1: React.FC<RouteComponentProps<{ currencyIdA: string; currencyIdB: string; version: string }>> = ({\n  match: {\n    params: { currencyIdA, currencyIdB, version }\n  }\n}) => {\n  const chainId = useChainId()\n\n  // get currencies and pair\n  const [currencyA, currencyB] = [useCurrency(currencyIdA), useCurrency(currencyIdB)]\n  const tokenA = wrappedCurrency(currencyA ?? undefined, chainId)\n  const tokenB = wrappedCurrency(currencyB ?? undefined, chainId)\n\n  const [, stakingTokenPair] = usePair(tokenA, tokenB)\n  const stakingInfo = useStakingInfo(Number(version), stakingTokenPair)?.[0]\n\n  return <Manage version={version} stakingInfo={stakingInfo} currencyA={currencyA} currencyB={currencyB} />\n}\n\nexport default ManageV1\n"]},"metadata":{},"sourceType":"module"}