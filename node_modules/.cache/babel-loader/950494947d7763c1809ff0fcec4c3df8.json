{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { parseENSAddress } from 'src/utils/parseENSAddress';\n\nfunction TokenListOrigin(_ref) {\n  let {\n    listUrl\n  } = _ref;\n  const ensName = useMemo(() => {\n    var _parseENSAddress;\n\n    return (_parseENSAddress = parseENSAddress(listUrl)) === null || _parseENSAddress === void 0 ? void 0 : _parseENSAddress.ensName;\n  }, [listUrl]);\n  const host = useMemo(() => {\n    if (ensName) return undefined;\n    const lowerListUrl = listUrl.toLowerCase();\n\n    if (lowerListUrl.startsWith('ipfs://') || lowerListUrl.startsWith('ipns://')) {\n      return listUrl;\n    }\n\n    try {\n      const url = new URL(listUrl);\n      return url.host;\n    } catch (error) {\n      return undefined;\n    }\n  }, [listUrl, ensName]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, ensName !== null && ensName !== void 0 ? ensName : host);\n}\n\nexport default TokenListOrigin;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/TokenListOrigin/index.tsx"],"names":["React","useMemo","parseENSAddress","TokenListOrigin","listUrl","ensName","host","undefined","lowerListUrl","toLowerCase","startsWith","url","URL","error"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,eAAT,QAAgC,2BAAhC;;AAEA,SAASC,eAAT,OAA2D;AAAA,MAAlC;AAAEC,IAAAA;AAAF,GAAkC;AACzD,QAAMC,OAAO,GAAGJ,OAAO,CAAC;AAAA;;AAAA,+BAAMC,eAAe,CAACE,OAAD,CAArB,qDAAM,iBAA0BC,OAAhC;AAAA,GAAD,EAA0C,CAACD,OAAD,CAA1C,CAAvB;AACA,QAAME,IAAI,GAAGL,OAAO,CAAC,MAAM;AACzB,QAAII,OAAJ,EAAa,OAAOE,SAAP;AACb,UAAMC,YAAY,GAAGJ,OAAO,CAACK,WAAR,EAArB;;AACA,QAAID,YAAY,CAACE,UAAb,CAAwB,SAAxB,KAAsCF,YAAY,CAACE,UAAb,CAAwB,SAAxB,CAA1C,EAA8E;AAC5E,aAAON,OAAP;AACD;;AACD,QAAI;AACF,YAAMO,GAAG,GAAG,IAAIC,GAAJ,CAAQR,OAAR,CAAZ;AACA,aAAOO,GAAG,CAACL,IAAX;AACD,KAHD,CAGE,OAAOO,KAAP,EAAc;AACd,aAAON,SAAP;AACD;AACF,GAZmB,EAYjB,CAACH,OAAD,EAAUC,OAAV,CAZiB,CAApB;AAcA,sBAAO,0CAAGA,OAAH,aAAGA,OAAH,cAAGA,OAAH,GAAcC,IAAd,CAAP;AACD;;AAED,eAAeH,eAAf","sourcesContent":["import React, { useMemo } from 'react'\nimport { parseENSAddress } from 'src/utils/parseENSAddress'\n\nfunction TokenListOrigin({ listUrl }: { listUrl: string }) {\n  const ensName = useMemo(() => parseENSAddress(listUrl)?.ensName, [listUrl])\n  const host = useMemo(() => {\n    if (ensName) return undefined\n    const lowerListUrl = listUrl.toLowerCase()\n    if (lowerListUrl.startsWith('ipfs://') || lowerListUrl.startsWith('ipns://')) {\n      return listUrl\n    }\n    try {\n      const url = new URL(listUrl)\n      return url.host\n    } catch (error) {\n      return undefined\n    }\n  }, [listUrl, ensName])\n\n  return <>{ensName ?? host}</>\n}\n\nexport default TokenListOrigin\n"]},"metadata":{},"sourceType":"module"}