{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Pool/AllPoolList/PoolV2.tsx\";\nimport React from 'react';\nimport { useMinichefPools } from 'src/state/stake/hooks';\nimport PoolList from './PoolList';\nimport { PoolType } from '../index';\n\nconst PoolV2 = _ref => {\n  let {\n    type,\n    stakingInfos,\n    setMenu,\n    activeMenu,\n    menuItems\n  } = _ref;\n  const poolMap = useMinichefPools();\n\n  if (type === PoolType.own) {\n    stakingInfos = (stakingInfos || []).filter(stakingInfo => {\n      return Boolean(stakingInfo.stakedAmount.greaterThan('0'));\n    });\n  }\n\n  if (type === PoolType.superFarms) {\n    stakingInfos = (stakingInfos || []).filter(item => {\n      var _item$rewardTokensAdd;\n\n      return ((item === null || item === void 0 ? void 0 : (_item$rewardTokensAdd = item.rewardTokensAddress) === null || _item$rewardTokensAdd === void 0 ? void 0 : _item$rewardTokensAdd.length) || 0) > 0;\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(PoolList, {\n    version: \"2\",\n    stakingInfos: stakingInfos,\n    poolMap: poolMap,\n    activeMenu: activeMenu,\n    setMenu: value => setMenu(value),\n    menuItems: menuItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default PoolV2;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Pool/AllPoolList/PoolV2.tsx"],"names":["React","useMinichefPools","PoolList","PoolType","PoolV2","type","stakingInfos","setMenu","activeMenu","menuItems","poolMap","own","filter","stakingInfo","Boolean","stakedAmount","greaterThan","superFarms","item","rewardTokensAddress","length","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAgCC,gBAAhC,QAAwD,uBAAxD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,QAAT,QAAyB,UAAzB;;AAUA,MAAMC,MAAuB,GAAG,QAA4D;AAAA,MAA3D;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,YAAR;AAAsBC,IAAAA,OAAtB;AAA+BC,IAAAA,UAA/B;AAA2CC,IAAAA;AAA3C,GAA2D;AAC1F,QAAMC,OAAO,GAAGT,gBAAgB,EAAhC;;AAEA,MAAII,IAAI,KAAKF,QAAQ,CAACQ,GAAtB,EAA2B;AACzBL,IAAAA,YAAY,GAAG,CAACA,YAAY,IAAI,EAAjB,EAAqBM,MAArB,CAA4BC,WAAW,IAAI;AACxD,aAAOC,OAAO,CAACD,WAAW,CAACE,YAAZ,CAAyBC,WAAzB,CAAqC,GAArC,CAAD,CAAd;AACD,KAFc,CAAf;AAGD;;AAED,MAAIX,IAAI,KAAKF,QAAQ,CAACc,UAAtB,EAAkC;AAChCX,IAAAA,YAAY,GAAG,CAACA,YAAY,IAAI,EAAjB,EAAqBM,MAArB,CAA4BM,IAAI;AAAA;;AAAA,aAAI,CAAC,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,qCAAAA,IAAI,CAAEC,mBAAN,gFAA2BC,MAA3B,KAAqC,CAAtC,IAA2C,CAA/C;AAAA,KAAhC,CAAf;AACD;;AACD,sBACE,oBAAC,QAAD;AACE,IAAA,OAAO,EAAC,GADV;AAEE,IAAA,YAAY,EAAEd,YAFhB;AAGE,IAAA,OAAO,EAAEI,OAHX;AAIE,IAAA,UAAU,EAAEF,UAJd;AAKE,IAAA,OAAO,EAAGa,KAAD,IAAmBd,OAAO,CAACc,KAAD,CALrC;AAME,IAAA,SAAS,EAAEZ,SANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUD,CAtBD;;AAwBA,eAAeL,MAAf","sourcesContent":["import React from 'react'\nimport { DoubleSideStakingInfo, useMinichefPools } from 'src/state/stake/hooks'\nimport PoolList from './PoolList'\nimport { PoolType } from '../index'\n\ninterface Props {\n  type: string\n  stakingInfos: DoubleSideStakingInfo[]\n  setMenu: (value: string) => void\n  activeMenu: string\n  menuItems: Array<{ label: string; value: string }>\n}\n\nconst PoolV2: React.FC<Props> = ({ type, stakingInfos, setMenu, activeMenu, menuItems }) => {\n  const poolMap = useMinichefPools()\n\n  if (type === PoolType.own) {\n    stakingInfos = (stakingInfos || []).filter(stakingInfo => {\n      return Boolean(stakingInfo.stakedAmount.greaterThan('0'))\n    })\n  }\n\n  if (type === PoolType.superFarms) {\n    stakingInfos = (stakingInfos || []).filter(item => (item?.rewardTokensAddress?.length || 0) > 0)\n  }\n  return (\n    <PoolList\n      version=\"2\"\n      stakingInfos={stakingInfos}\n      poolMap={poolMap}\n      activeMenu={activeMenu}\n      setMenu={(value: string) => setMenu(value)}\n      menuItems={menuItems}\n    />\n  )\n}\n\nexport default PoolV2\n"]},"metadata":{},"sourceType":"module"}