{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Pool/EarnWidget/AddLiquidity/PoolPriceBar/index.tsx\";\nimport React from 'react';\nimport { Box } from '@pangolindex/components';\nimport Stat from 'src/components/Stat';\nimport { Root, GridContainer } from './styled';\nimport { Field } from 'src/state/mint/actions';\nimport { useTranslation } from 'react-i18next';\nimport { ONE_BIPS } from 'src/constants';\nimport useUSDCPrice from 'src/utils/useUSDCPrice';\nimport { CHAINS } from 'src/constants/chains';\nimport { useChainId } from 'src/hooks';\n\nconst PoolPriceBar = _ref => {\n  var _parsedAmounts$Field$, _ref2;\n\n  let {\n    currencies,\n    noLiquidity,\n    poolTokenPercentage,\n    price,\n    parsedAmounts\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const currency0InputValue = (_parsedAmounts$Field$ = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$ === void 0 ? void 0 : _parsedAmounts$Field$.toSignificant(6);\n  const chainId = useChainId();\n  const currency0 = currencies[Field.CURRENCY_A];\n  const currency0PriceTmp = useUSDCPrice(currency0);\n  const currency0Price = CHAINS[chainId].is_mainnet ? currency0PriceTmp : undefined;\n  const multipyAmount = currency0Price ? Number(currency0Price.toFixed()) * 2 * Number(currency0InputValue) : 0;\n  return /*#__PURE__*/React.createElement(Root, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Stat, {\n    title: `${t('migratePage.dollarWorth')}`,\n    stat: `${multipyAmount ? `$${multipyAmount === null || multipyAmount === void 0 ? void 0 : multipyAmount.toFixed(4)}` : '-'}`,\n    titlePosition: \"top\",\n    titleFontSize: 14,\n    statFontSize: 18,\n    titleColor: \"text2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Stat, {\n    title: `${t('addLiquidity.shareOfPool')}`,\n    stat: `${noLiquidity && price ? '100' : (_ref2 = (poolTokenPercentage === null || poolTokenPercentage === void 0 ? void 0 : poolTokenPercentage.lessThan(ONE_BIPS)) ? '<0.01' : poolTokenPercentage === null || poolTokenPercentage === void 0 ? void 0 : poolTokenPercentage.toFixed(2)) !== null && _ref2 !== void 0 ? _ref2 : '0'}\n            %`,\n    titlePosition: \"top\",\n    titleFontSize: 14,\n    statFontSize: 18,\n    titleColor: \"text2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default PoolPriceBar;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Pool/EarnWidget/AddLiquidity/PoolPriceBar/index.tsx"],"names":["React","Box","Stat","Root","GridContainer","Field","useTranslation","ONE_BIPS","useUSDCPrice","CHAINS","useChainId","PoolPriceBar","currencies","noLiquidity","poolTokenPercentage","price","parsedAmounts","t","currency0InputValue","CURRENCY_A","toSignificant","chainId","currency0","currency0PriceTmp","currency0Price","is_mainnet","undefined","multipyAmount","Number","toFixed","lessThan"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,GAAT,QAAoB,yBAApB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,IAAT,EAAeC,aAAf,QAAoC,UAApC;AACA,SAASC,KAAT,QAAsB,wBAAtB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,UAAT,QAA2B,WAA3B;;AAUA,MAAMC,YAAY,GAAG,QAAsF;AAAA;;AAAA,MAArF;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,WAAd;AAA2BC,IAAAA,mBAA3B;AAAgDC,IAAAA,KAAhD;AAAuDC,IAAAA;AAAvD,GAAqF;AACzG,QAAM;AAAEC,IAAAA;AAAF,MAAQX,cAAc,EAA5B;AACA,QAAMY,mBAAmB,4BAAGF,aAAa,CAACX,KAAK,CAACc,UAAP,CAAhB,0DAAG,sBAAiCC,aAAjC,CAA+C,CAA/C,CAA5B;AACA,QAAMC,OAAO,GAAGX,UAAU,EAA1B;AAEA,QAAMY,SAAS,GAAGV,UAAU,CAACP,KAAK,CAACc,UAAP,CAA5B;AACA,QAAMI,iBAAiB,GAAGf,YAAY,CAACc,SAAD,CAAtC;AACA,QAAME,cAAc,GAAGf,MAAM,CAACY,OAAD,CAAN,CAAgBI,UAAhB,GAA6BF,iBAA7B,GAAiDG,SAAxE;AACA,QAAMC,aAAa,GAAGH,cAAc,GAAGI,MAAM,CAACJ,cAAc,CAACK,OAAf,EAAD,CAAN,GAAmC,CAAnC,GAAuCD,MAAM,CAACV,mBAAD,CAAhD,GAAwE,CAA5G;AAEA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAG,GAAED,CAAC,CAAC,yBAAD,CAA4B,EADzC;AAEE,IAAA,IAAI,EAAG,GAAEU,aAAa,GAAI,IAAGA,aAAJ,aAAIA,aAAJ,uBAAIA,aAAa,CAAEE,OAAf,CAAuB,CAAvB,CAA0B,EAAjC,GAAqC,GAAI,EAFjE;AAGE,IAAA,aAAa,EAAC,KAHhB;AAIE,IAAA,aAAa,EAAE,EAJjB;AAKE,IAAA,YAAY,EAAE,EALhB;AAME,IAAA,UAAU,EAAC,OANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAYE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAG,GAAEZ,CAAC,CAAC,0BAAD,CAA6B,EAD1C;AAEE,IAAA,IAAI,EAAG,GACLJ,WAAW,IAAIE,KAAf,GACI,KADJ,YAEK,CAAAD,mBAAmB,SAAnB,IAAAA,mBAAmB,WAAnB,YAAAA,mBAAmB,CAAEgB,QAArB,CAA8BvB,QAA9B,KAA0C,OAA1C,GAAoDO,mBAApD,aAAoDA,mBAApD,uBAAoDA,mBAAmB,CAAEe,OAArB,CAA6B,CAA7B,CAFzD,yCAE6F,GAC9F;AACb,cAPU;AAQE,IAAA,aAAa,EAAC,KARhB;AASE,IAAA,aAAa,EAAE,EATjB;AAUE,IAAA,YAAY,EAAE,EAVhB;AAWE,IAAA,UAAU,EAAC,OAXb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZF,CADF,CADF;AAgCD,CA1CD;;AA2CA,eAAelB,YAAf","sourcesContent":["import React from 'react'\nimport { Currency, Percent, Price, CurrencyAmount } from '@pangolindex/sdk'\nimport { Box } from '@pangolindex/components'\nimport Stat from 'src/components/Stat'\nimport { Root, GridContainer } from './styled'\nimport { Field } from 'src/state/mint/actions'\nimport { useTranslation } from 'react-i18next'\nimport { ONE_BIPS } from 'src/constants'\nimport useUSDCPrice from 'src/utils/useUSDCPrice'\nimport { CHAINS } from 'src/constants/chains'\nimport { useChainId } from 'src/hooks'\n\ninterface BarProps {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n}\n\nconst PoolPriceBar = ({ currencies, noLiquidity, poolTokenPercentage, price, parsedAmounts }: BarProps) => {\n  const { t } = useTranslation()\n  const currency0InputValue = parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)\n  const chainId = useChainId()\n\n  const currency0 = currencies[Field.CURRENCY_A]\n  const currency0PriceTmp = useUSDCPrice(currency0)\n  const currency0Price = CHAINS[chainId].is_mainnet ? currency0PriceTmp : undefined\n  const multipyAmount = currency0Price ? Number(currency0Price.toFixed()) * 2 * Number(currency0InputValue) : 0\n\n  return (\n    <Root>\n      <GridContainer>\n        <Box>\n          <Stat\n            title={`${t('migratePage.dollarWorth')}`}\n            stat={`${multipyAmount ? `$${multipyAmount?.toFixed(4)}` : '-'}`}\n            titlePosition=\"top\"\n            titleFontSize={14}\n            statFontSize={18}\n            titleColor=\"text2\"\n          />\n        </Box>\n\n        <Box>\n          <Stat\n            title={`${t('addLiquidity.shareOfPool')}`}\n            stat={`${\n              noLiquidity && price\n                ? '100'\n                : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'\n            }\n            %`}\n            titlePosition=\"top\"\n            titleFontSize={14}\n            statFontSize={18}\n            titleColor=\"text2\"\n          />\n        </Box>\n      </GridContainer>\n    </Root>\n  )\n}\nexport default PoolPriceBar\n"]},"metadata":{},"sourceType":"module"}