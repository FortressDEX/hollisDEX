{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Stake/ClaimDrawer/index.tsx\";\nimport React, { useCallback, useState } from 'react';\nimport { Box } from '@pangolindex/components';\nimport Drawer from 'src/components/Drawer';\nimport ClaimWidget from '../ClaimWidget';\nimport RewardStakeDrawer from '../RewardStakeDrawer';\n\nconst ClaimDrawer = _ref => {\n  let {\n    isOpen,\n    onClose,\n    stakingInfo\n  } = _ref;\n  const [isRewardStakeDrawerVisible, setShowRewardStakeDrawer] = useState(false);\n  const onCloseRewardStakeDrawer = useCallback(() => {\n    setShowRewardStakeDrawer(false);\n    onClose();\n  }, [onClose]);\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    isOpen: isOpen,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, isOpen && /*#__PURE__*/React.createElement(ClaimWidget, {\n    stakingInfo: stakingInfo,\n    onClose: onClose,\n    onClickRewardStake: () => setShowRewardStakeDrawer(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(RewardStakeDrawer, {\n    isOpen: isRewardStakeDrawerVisible,\n    onClose: onCloseRewardStakeDrawer,\n    stakingInfo: stakingInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ClaimDrawer;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Stake/ClaimDrawer/index.tsx"],"names":["React","useCallback","useState","Box","Drawer","ClaimWidget","RewardStakeDrawer","ClaimDrawer","isOpen","onClose","stakingInfo","isRewardStakeDrawerVisible","setShowRewardStakeDrawer","onCloseRewardStakeDrawer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,GAAT,QAAoB,yBAApB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;;AAQA,MAAMC,WAA4B,GAAG,QAAsC;AAAA,MAArC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,GAAqC;AACzE,QAAM,CAACC,0BAAD,EAA6BC,wBAA7B,IAAyDV,QAAQ,CAAC,KAAD,CAAvE;AAEA,QAAMW,wBAAwB,GAAGZ,WAAW,CAAC,MAAM;AACjDW,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACAH,IAAAA,OAAO;AACR,GAH2C,EAGzC,CAACA,OAAD,CAHyC,CAA5C;AAKA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAED,MAAhB;AAAwB,IAAA,OAAO,EAAEC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,MAAM,iBACL,oBAAC,WAAD;AACE,IAAA,WAAW,EAAEE,WADf;AAEE,IAAA,OAAO,EAAED,OAFX;AAGE,IAAA,kBAAkB,EAAE,MAAMG,wBAAwB,CAAC,IAAD,CAHpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF,eAWE,oBAAC,iBAAD;AACE,IAAA,MAAM,EAAED,0BADV;AAEE,IAAA,OAAO,EAAEE,wBAFX;AAGE,IAAA,WAAW,EAAEH,WAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AAmBD,CA3BD;;AA6BA,eAAeH,WAAf","sourcesContent":["import React, { useCallback, useState } from 'react'\nimport { Box } from '@pangolindex/components'\nimport Drawer from 'src/components/Drawer'\nimport { SingleSideStakingInfo } from 'src/state/stake/hooks'\nimport ClaimWidget from '../ClaimWidget'\nimport RewardStakeDrawer from '../RewardStakeDrawer'\n\ntype Props = {\n  isOpen: boolean\n  stakingInfo: SingleSideStakingInfo\n  onClose: () => void\n}\n\nconst ClaimDrawer: React.FC<Props> = ({ isOpen, onClose, stakingInfo }) => {\n  const [isRewardStakeDrawerVisible, setShowRewardStakeDrawer] = useState(false)\n\n  const onCloseRewardStakeDrawer = useCallback(() => {\n    setShowRewardStakeDrawer(false)\n    onClose()\n  }, [onClose])\n\n  return (\n    <Box>\n      <Drawer isOpen={isOpen} onClose={onClose}>\n        {isOpen && (\n          <ClaimWidget\n            stakingInfo={stakingInfo}\n            onClose={onClose}\n            onClickRewardStake={() => setShowRewardStakeDrawer(true)}\n          />\n        )}\n      </Drawer>\n\n      <RewardStakeDrawer\n        isOpen={isRewardStakeDrawerVisible}\n        onClose={onCloseRewardStakeDrawer}\n        stakingInfo={stakingInfo}\n      />\n    </Box>\n  )\n}\n\nexport default ClaimDrawer\n"]},"metadata":{},"sourceType":"module"}