{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Pool/AddLiquidityDrawer/index.tsx\";\nimport React from 'react';\nimport Drawer from 'src/components/Drawer';\nimport { useTranslation } from 'react-i18next';\nimport { unwrappedToken } from 'src/utils/wrappedCurrency';\nimport AddLiquidity from '../EarnWidget/AddLiquidity';\nimport { useChainId } from 'src/hooks';\n\nconst AddLiquidityDrawer = _ref => {\n  let {\n    isOpen,\n    onClose,\n    clickedLpTokens,\n    backgroundColor\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const chainId = useChainId();\n  const token0 = clickedLpTokens === null || clickedLpTokens === void 0 ? void 0 : clickedLpTokens[0];\n  const token1 = clickedLpTokens === null || clickedLpTokens === void 0 ? void 0 : clickedLpTokens[1];\n  const currencyA = token0 && unwrappedToken(token0, chainId);\n  const currencyB = token1 && unwrappedToken(token1, chainId);\n  return /*#__PURE__*/React.createElement(Drawer, {\n    title: t('pool.addLiquidity'),\n    isOpen: isOpen,\n    onClose: onClose,\n    backgroundColor: backgroundColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, isOpen && /*#__PURE__*/React.createElement(AddLiquidity, {\n    currencyA: currencyA,\n    currencyB: currencyB,\n    onComplete: onClose,\n    type: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 18\n    }\n  }));\n};\n\nexport default AddLiquidityDrawer;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Pool/AddLiquidityDrawer/index.tsx"],"names":["React","Drawer","useTranslation","unwrappedToken","AddLiquidity","useChainId","AddLiquidityDrawer","isOpen","onClose","clickedLpTokens","backgroundColor","t","chainId","token0","token1","currencyA","currencyB"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,UAAT,QAA2B,WAA3B;;AASA,MAAMC,kBAAmC,GAAG,QAA2D;AAAA,MAA1D;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,eAAnB;AAAoCC,IAAAA;AAApC,GAA0D;AACrG,QAAM;AAAEC,IAAAA;AAAF,MAAQT,cAAc,EAA5B;AACA,QAAMU,OAAO,GAAGP,UAAU,EAA1B;AAEA,QAAMQ,MAAM,GAAGJ,eAAH,aAAGA,eAAH,uBAAGA,eAAe,CAAG,CAAH,CAA9B;AACA,QAAMK,MAAM,GAAGL,eAAH,aAAGA,eAAH,uBAAGA,eAAe,CAAG,CAAH,CAA9B;AAEA,QAAMM,SAAS,GAAGF,MAAM,IAAIV,cAAc,CAACU,MAAD,EAASD,OAAT,CAA1C;AACA,QAAMI,SAAS,GAAGF,MAAM,IAAIX,cAAc,CAACW,MAAD,EAASF,OAAT,CAA1C;AAEA,sBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAED,CAAC,CAAC,mBAAD,CAAhB;AAAuC,IAAA,MAAM,EAAEJ,MAA/C;AAAuD,IAAA,OAAO,EAAEC,OAAhE;AAAyE,IAAA,eAAe,EAAEE,eAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,MAAM,iBAAI,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAEQ,SAAzB;AAAoC,IAAA,SAAS,EAAEC,SAA/C;AAA0D,IAAA,UAAU,EAAER,OAAtE;AAA+E,IAAA,IAAI,EAAC,MAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADb,CADF;AAKD,CAfD;;AAiBA,eAAeF,kBAAf","sourcesContent":["import React from 'react'\nimport Drawer from 'src/components/Drawer'\nimport { Token } from '@pangolindex/sdk'\nimport { useTranslation } from 'react-i18next'\nimport { unwrappedToken } from 'src/utils/wrappedCurrency'\nimport AddLiquidity from '../EarnWidget/AddLiquidity'\nimport { useChainId } from 'src/hooks'\n\ntype Props = {\n  isOpen: boolean\n  clickedLpTokens: Array<Token>\n  onClose: () => void\n  backgroundColor?: string\n}\n\nconst AddLiquidityDrawer: React.FC<Props> = ({ isOpen, onClose, clickedLpTokens, backgroundColor }) => {\n  const { t } = useTranslation()\n  const chainId = useChainId()\n\n  const token0 = clickedLpTokens?.[0]\n  const token1 = clickedLpTokens?.[1]\n\n  const currencyA = token0 && unwrappedToken(token0, chainId)\n  const currencyB = token1 && unwrappedToken(token1, chainId)\n\n  return (\n    <Drawer title={t('pool.addLiquidity')} isOpen={isOpen} onClose={onClose} backgroundColor={backgroundColor}>\n      {isOpen && <AddLiquidity currencyA={currencyA} currencyB={currencyB} onComplete={onClose} type=\"card\" />}\n    </Drawer>\n  )\n}\n\nexport default AddLiquidityDrawer\n"]},"metadata":{},"sourceType":"module"}