{"ast":null,"code":"import axios from 'axios';\nimport qs from 'qs';\nimport { useQuery } from 'react-query';\n// Get News in Pangolin Strapi api\nexport function useGetNews() {\n  const query = qs.stringify({\n    sort: ['-date_created'],\n    limit: 10\n  }, {\n    encodeValuesOnly: true\n  });\n  return useQuery('getNews', async () => {\n    var _data$data;\n\n    const response = await axios.get(`https://p7gm7mqi.directus.app/items/news?${query}`, {\n      timeout: 1000\n    });\n    const data = response.data;\n    const news = data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.map(element => {\n      return {\n        id: element === null || element === void 0 ? void 0 : element.id,\n        title: element === null || element === void 0 ? void 0 : element.title,\n        content: element === null || element === void 0 ? void 0 : element.content,\n        createdAt: new Date(element === null || element === void 0 ? void 0 : element.date_created),\n        updatedAt: !(element === null || element === void 0 ? void 0 : element.date_updated) ? null : new Date(element === null || element === void 0 ? void 0 : element.date_updated)\n      };\n    });\n    return news;\n  });\n}","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/state/news/hooks.ts"],"names":["axios","qs","useQuery","useGetNews","query","stringify","sort","limit","encodeValuesOnly","response","get","timeout","data","news","map","element","id","title","content","createdAt","Date","date_created","updatedAt","date_updated"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,SAASC,QAAT,QAAyB,aAAzB;AAUA;AACA,OAAO,SAASC,UAAT,GAAsB;AAC3B,QAAMC,KAAK,GAAGH,EAAE,CAACI,SAAH,CACZ;AACEC,IAAAA,IAAI,EAAE,CAAC,eAAD,CADR;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADY,EAKZ;AACEC,IAAAA,gBAAgB,EAAE;AADpB,GALY,CAAd;AAUA,SAAON,QAAQ,CAAC,SAAD,EAAY,YAAY;AAAA;;AACrC,UAAMO,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,4CAA2CN,KAAM,EAA5D,EAA+D;AACpFO,MAAAA,OAAO,EAAE;AAD2E,KAA/D,CAAvB;AAGA,UAAMC,IAAI,GAAGH,QAAQ,CAACG,IAAtB;AACA,UAAMC,IAAY,GAAGD,IAAH,aAAGA,IAAH,qCAAGA,IAAI,CAAEA,IAAT,+CAAG,WAAYE,GAAZ,CAAiBC,OAAD,IAAkB;AACrD,aAAO;AACLC,QAAAA,EAAE,EAAED,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEC,EADR;AAELC,QAAAA,KAAK,EAAEF,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEE,KAFX;AAGLC,QAAAA,OAAO,EAAEH,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEG,OAHb;AAILC,QAAAA,SAAS,EAAE,IAAIC,IAAJ,CAASL,OAAT,aAASA,OAAT,uBAASA,OAAO,CAAEM,YAAlB,CAJN;AAKLC,QAAAA,SAAS,EAAE,EAACP,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEQ,YAAV,IAAyB,IAAzB,GAAgC,IAAIH,IAAJ,CAASL,OAAT,aAASA,OAAT,uBAASA,OAAO,CAAEQ,YAAlB;AALtC,OAAP;AAOD,KARoB,CAArB;AAUA,WAAOV,IAAP;AACD,GAhBc,CAAf;AAiBD","sourcesContent":["import axios from 'axios'\nimport qs from 'qs'\nimport { useQuery } from 'react-query'\n\nexport interface News {\n  id: number\n  title: string\n  content: string\n  createdAt: Date\n  updatedAt: Date | null\n}\n\n// Get News in Pangolin Strapi api\nexport function useGetNews() {\n  const query = qs.stringify(\n    {\n      sort: ['-date_created'],\n      limit: 10\n    },\n    {\n      encodeValuesOnly: true\n    }\n  )\n\n  return useQuery('getNews', async () => {\n    const response = await axios.get(`https://p7gm7mqi.directus.app/items/news?${query}`, {\n      timeout: 1000\n    })\n    const data = response.data\n    const news: News[] = data?.data?.map((element: any) => {\n      return {\n        id: element?.id,\n        title: element?.title,\n        content: element?.content,\n        createdAt: new Date(element?.date_created),\n        updatedAt: !element?.date_updated ? null : new Date(element?.date_updated)\n      } as News\n    })\n\n    return news\n  })\n}\n"]},"metadata":{},"sourceType":"module"}