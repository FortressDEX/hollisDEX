{"ast":null,"code":"import { AbstractConnector } from '@web3-react/abstract-connector';\nimport warning from 'tiny-warning';\n\nfunction parseSendReturn(sendReturn) {\n  return sendReturn.hasOwnProperty('result') ? sendReturn.result : sendReturn;\n}\n\nexport class NoEthereumProviderError extends Error {\n  constructor() {\n    super();\n    this.name = this.constructor.name;\n    this.message = 'No Ethereum provider was found on window.xfi.ethereum.';\n  }\n\n}\nexport class UserRejectedRequestError extends Error {\n  constructor() {\n    super();\n    this.name = this.constructor.name;\n    this.message = 'The user rejected the request.';\n  }\n\n}\nexport class DefiConnector extends AbstractConnector {\n  constructor(kwargs) {\n    super(kwargs);\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this);\n    this.handleChainChanged = this.handleChainChanged.bind(this);\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleChainChanged(chainId) {\n    var _window, _window$xfi;\n\n    // if (__DEV__) {\n    //   console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    // }\n    console.log(\"Handling 'chainChanged' event with payload\", chainId);\n    this.emitUpdate({\n      chainId,\n      provider: (_window = window) === null || _window === void 0 ? void 0 : (_window$xfi = _window.xfi) === null || _window$xfi === void 0 ? void 0 : _window$xfi.ethereum\n    });\n  }\n\n  handleAccountsChanged(accounts) {\n    // if (__DEV__) {\n    //\n    // }\n    console.log(\"Handling 'accountsChanged' event with payload\", accounts);\n\n    if (accounts.length === 0) {\n      this.emitDeactivate();\n    } else {\n      this.emitUpdate({\n        account: accounts[0]\n      });\n    }\n  }\n\n  handleClose(code, reason) {\n    // if (__DEV__) {\n    //\n    // }\n    console.log(\"Handling 'close' event with payload\", code, reason);\n    this.emitDeactivate();\n  }\n\n  handleNetworkChanged(networkId) {\n    var _window2, _window2$xfi;\n\n    // if (__DEV__) {\n    //\n    // }\n    console.log(\"Handling 'networkChanged' event with payload\", networkId);\n    this.emitUpdate({\n      chainId: networkId,\n      provider: (_window2 = window) === null || _window2 === void 0 ? void 0 : (_window2$xfi = _window2.xfi) === null || _window2$xfi === void 0 ? void 0 : _window2$xfi.ethereum\n    });\n  }\n\n  async activate() {\n    var _window3, _window3$xfi, _window4, _window4$xfi, _window5, _window5$xfi;\n\n    if (!((_window3 = window) === null || _window3 === void 0 ? void 0 : (_window3$xfi = _window3.xfi) === null || _window3$xfi === void 0 ? void 0 : _window3$xfi.ethereum)) {\n      throw new NoEthereumProviderError();\n    }\n\n    if ((_window4 = window) === null || _window4 === void 0 ? void 0 : (_window4$xfi = _window4.xfi) === null || _window4$xfi === void 0 ? void 0 : _window4$xfi.ethereum.on) {\n      window.xfi.ethereum.on('chainChanged', this.handleChainChanged);\n      window.xfi.ethereum.on('accountsChanged', this.handleAccountsChanged);\n      window.xfi.ethereum.on('close', this.handleClose);\n      window.xfi.ethereum.on('networkChanged', this.handleNetworkChanged);\n    }\n\n    if (((_window5 = window) === null || _window5 === void 0 ? void 0 : (_window5$xfi = _window5.xfi) === null || _window5$xfi === void 0 ? void 0 : _window5$xfi.ethereum).isXDEFI) {\n      ;\n      window.xfi.ethereum.autoRefreshOnNetworkChange = false;\n    } // try to activate + get account via eth_requestAccounts\n\n\n    let account;\n\n    try {\n      account = await window.xfi.ethereum.send('eth_requestAccounts').then(sendReturn => parseSendReturn(sendReturn)[0]);\n    } catch (error) {\n      if (error.code === 4001) {\n        throw new UserRejectedRequestError();\n      }\n\n      warning(false, 'eth_requestAccounts was unsuccessful, falling back to enable');\n    } // if unsuccessful, try enable\n\n\n    if (!account) {\n      // if enable is successful but doesn't return accounts, fall back to getAccount (not happy i have to do this...)\n      account = await window.xfi.ethereum.enable().then(sendReturn => sendReturn && parseSendReturn(sendReturn)[0]);\n    }\n\n    return {\n      provider: window.xfi.ethereum,\n      ...(account ? {\n        account\n      } : {})\n    };\n  }\n\n  async getProvider() {\n    var _window6, _window6$xfi;\n\n    return (_window6 = window) === null || _window6 === void 0 ? void 0 : (_window6$xfi = _window6.xfi) === null || _window6$xfi === void 0 ? void 0 : _window6$xfi.ethereum;\n  }\n\n  async getChainId() {\n    var _window7, _window7$xfi;\n\n    if (!((_window7 = window) === null || _window7 === void 0 ? void 0 : (_window7$xfi = _window7.xfi) === null || _window7$xfi === void 0 ? void 0 : _window7$xfi.ethereum)) {\n      throw new NoEthereumProviderError();\n    }\n\n    let chainId;\n\n    try {\n      chainId = await window.xfi.ethereum.send('eth_chainId').then(parseSendReturn);\n    } catch {\n      warning(false, 'eth_chainId was unsuccessful, falling back to net_version');\n    }\n\n    if (!chainId) {\n      try {\n        chainId = await window.xfi.ethereum.send('net_version').then(parseSendReturn);\n      } catch {\n        warning(false, 'net_version was unsuccessful, falling back to net version v2');\n      }\n    }\n\n    if (!chainId) {\n      try {\n        chainId = parseSendReturn(window.xfi.ethereum.send({\n          method: 'net_version'\n        }));\n      } catch {\n        warning(false, 'net_version v2 was unsuccessful, falling back to manual matches and static properties');\n      }\n    }\n\n    if (!chainId) {\n      var _window8, _window8$xfi;\n\n      if (((_window8 = window) === null || _window8 === void 0 ? void 0 : (_window8$xfi = _window8.xfi) === null || _window8$xfi === void 0 ? void 0 : _window8$xfi.ethereum).isDapper) {\n        chainId = parseSendReturn(window.xfi.ethereum.cachedResults.net_version);\n      } else {\n        chainId = window.xfi.ethereum.chainId || window.xfi.ethereum.netVersion || window.xfi.ethereum.networkVersion || window.xfi.ethereum._chainId;\n      }\n    }\n\n    return chainId;\n  }\n\n  async getAccount() {\n    var _window9, _window9$xfi;\n\n    if (!((_window9 = window) === null || _window9 === void 0 ? void 0 : (_window9$xfi = _window9.xfi) === null || _window9$xfi === void 0 ? void 0 : _window9$xfi.ethereum)) {\n      throw new NoEthereumProviderError();\n    }\n\n    let account;\n\n    try {\n      account = await window.xfi.ethereum.send('eth_accounts').then(sendReturn => parseSendReturn(sendReturn)[0]);\n    } catch {\n      warning(false, 'eth_accounts was unsuccessful, falling back to enable');\n    }\n\n    if (!account) {\n      try {\n        account = await window.xfi.ethereum.enable().then(sendReturn => parseSendReturn(sendReturn)[0]);\n      } catch {\n        warning(false, 'enable was unsuccessful, falling back to eth_accounts v2');\n      }\n    }\n\n    if (!account) {\n      account = parseSendReturn(window.xfi.ethereum.send({\n        method: 'eth_accounts'\n      }))[0];\n    }\n\n    return account;\n  }\n\n  deactivate() {\n    var _window10, _window10$xfi, _window11, _window11$xfi;\n\n    if (((_window10 = window) === null || _window10 === void 0 ? void 0 : (_window10$xfi = _window10.xfi) === null || _window10$xfi === void 0 ? void 0 : _window10$xfi.ethereum) && ((_window11 = window) === null || _window11 === void 0 ? void 0 : (_window11$xfi = _window11.xfi) === null || _window11$xfi === void 0 ? void 0 : _window11$xfi.ethereum.removeListener)) {\n      window.xfi.ethereum.removeListener('chainChanged', this.handleChainChanged);\n      window.xfi.ethereum.removeListener('accountsChanged', this.handleAccountsChanged);\n      window.xfi.ethereum.removeListener('close', this.handleClose);\n      window.xfi.ethereum.removeListener('networkChanged', this.handleNetworkChanged);\n    }\n  }\n\n  async isAuthorized() {\n    var _window12, _window12$xfi;\n\n    if (!((_window12 = window) === null || _window12 === void 0 ? void 0 : (_window12$xfi = _window12.xfi) === null || _window12$xfi === void 0 ? void 0 : _window12$xfi.ethereum)) {\n      return false;\n    }\n\n    try {\n      return await window.xfi.ethereum.send('eth_accounts').then(sendReturn => {\n        if (parseSendReturn(sendReturn).length > 0) {\n          return true;\n        } else {\n          return false;\n        }\n      });\n    } catch {\n      return false;\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/connectors/DefiConnector/index.ts"],"names":["AbstractConnector","warning","parseSendReturn","sendReturn","hasOwnProperty","result","NoEthereumProviderError","Error","constructor","name","message","UserRejectedRequestError","DefiConnector","kwargs","handleNetworkChanged","bind","handleChainChanged","handleAccountsChanged","handleClose","chainId","console","log","emitUpdate","provider","window","xfi","ethereum","accounts","length","emitDeactivate","account","code","reason","networkId","activate","on","isXDEFI","autoRefreshOnNetworkChange","send","then","error","enable","getProvider","getChainId","method","isDapper","cachedResults","net_version","netVersion","networkVersion","_chainId","getAccount","deactivate","removeListener","isAuthorized"],"mappings":"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","sourcesContent":["import { AbstractConnectorArguments, ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport warning from 'tiny-warning'\n\nimport { SendReturnResult, SendReturn, Send, SendOld } from './types'\n\nfunction parseSendReturn(sendReturn: SendReturnResult | SendReturn): any {\n  return sendReturn.hasOwnProperty('result') ? sendReturn.result : sendReturn\n}\n\nexport class NoEthereumProviderError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'No Ethereum provider was found on window.xfi.ethereum.'\n  }\n}\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'The user rejected the request.'\n  }\n}\n\nexport class DefiConnector extends AbstractConnector {\n  constructor(kwargs: AbstractConnectorArguments) {\n    super(kwargs)\n\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this)\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n  }\n\n  private handleChainChanged(chainId: string | number): void {\n    // if (__DEV__) {\n    //   console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    // }\n    console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    this.emitUpdate({ chainId, provider: window?.xfi?.ethereum })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    // if (__DEV__) {\n    //\n    // }\n    console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n    if (accounts.length === 0) {\n      this.emitDeactivate()\n    } else {\n      this.emitUpdate({ account: accounts[0] })\n    }\n  }\n\n  private handleClose(code: number, reason: string): void {\n    // if (__DEV__) {\n    //\n    // }\n    console.log(\"Handling 'close' event with payload\", code, reason)\n    this.emitDeactivate()\n  }\n\n  private handleNetworkChanged(networkId: string | number): void {\n    // if (__DEV__) {\n    //\n    // }\n    console.log(\"Handling 'networkChanged' event with payload\", networkId)\n    this.emitUpdate({ chainId: networkId, provider: window?.xfi?.ethereum })\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!window?.xfi?.ethereum) {\n      throw new NoEthereumProviderError()\n    }\n\n    if (window?.xfi?.ethereum.on) {\n      window.xfi.ethereum.on('chainChanged', this.handleChainChanged)\n      window.xfi.ethereum.on('accountsChanged', this.handleAccountsChanged)\n      window.xfi.ethereum.on('close', this.handleClose)\n      window.xfi.ethereum.on('networkChanged', this.handleNetworkChanged)\n    }\n\n    if ((window?.xfi?.ethereum as any).isXDEFI) {\n      ;(window.xfi.ethereum as any).autoRefreshOnNetworkChange = false\n    }\n\n    // try to activate + get account via eth_requestAccounts\n    let account\n    try {\n      account = await (window.xfi.ethereum.send as Send)('eth_requestAccounts').then(\n        sendReturn => parseSendReturn(sendReturn)[0]\n      )\n    } catch (error) {\n      if ((error as any).code === 4001) {\n        throw new UserRejectedRequestError()\n      }\n      warning(false, 'eth_requestAccounts was unsuccessful, falling back to enable')\n    }\n\n    // if unsuccessful, try enable\n    if (!account) {\n      // if enable is successful but doesn't return accounts, fall back to getAccount (not happy i have to do this...)\n      account = await window.xfi.ethereum\n        .enable()\n        .then((sendReturn: any) => sendReturn && parseSendReturn(sendReturn)[0])\n    }\n\n    return { provider: window.xfi.ethereum, ...(account ? { account } : {}) }\n  }\n\n  public async getProvider(): Promise<any> {\n    return window?.xfi?.ethereum\n  }\n\n  public async getChainId(): Promise<number | string> {\n    if (!window?.xfi?.ethereum) {\n      throw new NoEthereumProviderError()\n    }\n\n    let chainId\n    try {\n      chainId = await (window.xfi.ethereum.send as Send)('eth_chainId').then(parseSendReturn)\n    } catch {\n      warning(false, 'eth_chainId was unsuccessful, falling back to net_version')\n    }\n\n    if (!chainId) {\n      try {\n        chainId = await (window.xfi.ethereum.send as Send)('net_version').then(parseSendReturn)\n      } catch {\n        warning(false, 'net_version was unsuccessful, falling back to net version v2')\n      }\n    }\n\n    if (!chainId) {\n      try {\n        chainId = parseSendReturn((window.xfi.ethereum.send as SendOld)({ method: 'net_version' }))\n      } catch {\n        warning(false, 'net_version v2 was unsuccessful, falling back to manual matches and static properties')\n      }\n    }\n\n    if (!chainId) {\n      if ((window?.xfi?.ethereum as any).isDapper) {\n        chainId = parseSendReturn((window.xfi.ethereum as any).cachedResults.net_version)\n      } else {\n        chainId =\n          (window.xfi.ethereum as any).chainId ||\n          (window.xfi.ethereum as any).netVersion ||\n          (window.xfi.ethereum as any).networkVersion ||\n          (window.xfi.ethereum as any)._chainId\n      }\n    }\n\n    return chainId\n  }\n\n  public async getAccount(): Promise<null | string> {\n    if (!window?.xfi?.ethereum) {\n      throw new NoEthereumProviderError()\n    }\n\n    let account\n    try {\n      account = await (window.xfi.ethereum.send as Send)('eth_accounts').then(\n        sendReturn => parseSendReturn(sendReturn)[0]\n      )\n    } catch {\n      warning(false, 'eth_accounts was unsuccessful, falling back to enable')\n    }\n\n    if (!account) {\n      try {\n        account = await window.xfi.ethereum.enable().then((sendReturn: any) => parseSendReturn(sendReturn)[0])\n      } catch {\n        warning(false, 'enable was unsuccessful, falling back to eth_accounts v2')\n      }\n    }\n\n    if (!account) {\n      account = parseSendReturn((window.xfi.ethereum.send as SendOld)({ method: 'eth_accounts' }))[0]\n    }\n\n    return account\n  }\n\n  public deactivate() {\n    if (window?.xfi?.ethereum && window?.xfi?.ethereum.removeListener) {\n      window.xfi.ethereum.removeListener('chainChanged', this.handleChainChanged)\n      window.xfi.ethereum.removeListener('accountsChanged', this.handleAccountsChanged)\n      window.xfi.ethereum.removeListener('close', this.handleClose)\n      window.xfi.ethereum.removeListener('networkChanged', this.handleNetworkChanged)\n    }\n  }\n\n  public async isAuthorized(): Promise<boolean> {\n    if (!window?.xfi?.ethereum) {\n      return false\n    }\n\n    try {\n      return await (window.xfi.ethereum.send as Send)('eth_accounts').then(sendReturn => {\n        if (parseSendReturn(sendReturn).length > 0) {\n          return true\n        } else {\n          return false\n        }\n      })\n    } catch {\n      return false\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}