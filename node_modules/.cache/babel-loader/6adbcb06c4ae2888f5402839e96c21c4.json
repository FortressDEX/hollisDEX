{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/MigrationModal/StepView/index.tsx\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Wrapper, ConfirmedIcon, Section } from './styleds';\nimport { Text, Steps, Step, Box } from '@pangolindex/components';\nimport { CloseIcon } from '../../../theme/components';\nimport { useTranslation } from 'react-i18next';\nimport ChoosePool from '../ChoosePool';\nimport Unstake from '../Unstake';\nimport Stake from '../Stake';\nimport { useGetMigrationData } from '../../../state/migrate/hooks';\nimport { AutoColumn } from '../../Column';\nimport { RowBetween } from '../../Row';\nimport { useBlockNumber } from '../../../state/application/hooks';\nimport { ArrowUpCircle } from 'react-feather';\nimport { ThemeContext } from 'styled-components';\nimport Loader from '../Loader';\n\nconst StepView = _ref => {\n  let {\n    selectedPool,\n    version,\n    onDismiss\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const theme = useContext(ThemeContext);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [allChoosePool, setAllChoosePool] = useState({});\n  const {\n    allPool,\n    v2IsLoading\n  } = useGetMigrationData(version);\n  const [completed, setCompleted] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [choosePoolIndex, setChoosePoolIndex] = useState(0);\n  const [isUnstakeComplete, setIsUnstakeComplete] = useState(false);\n  const [isStakingLoading, setIsStakingLoading] = useState(false);\n\n  const handleChange = step => {\n    setCurrentStep(step);\n  };\n\n  useEffect(() => {\n    if (selectedPool) {\n      setCurrentStep(1);\n      setAllChoosePool(selectedPool);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [selectedPool]);\n\n  const toggleSelectAll = check => {\n    if (check) {\n      setAllChoosePool({ ...allPool\n      });\n    } else {\n      setAllChoosePool({});\n    }\n  };\n\n  const toggleIndividualSelect = address => {\n    if (!!allChoosePool[address]) {\n      const newAllChoosePool = allChoosePool;\n      delete newAllChoosePool[address];\n      setAllChoosePool({ ...newAllChoosePool\n      });\n    } else {\n      const newObject = allPool[address];\n      const container = {};\n      container[address] = newObject;\n      setAllChoosePool({ ...allChoosePool,\n        ...container\n      });\n    }\n  };\n\n  const goNext = () => {\n    const newStep = currentStep + 1;\n    setCurrentStep(newStep);\n  };\n\n  const goBack = () => {\n    const newStep = currentStep - 1;\n    setCurrentStep(newStep);\n  };\n\n  const allChoosePoolLength = (Object.keys(allChoosePool) || []).length;\n  const latestBlockNumber = useBlockNumber();\n  useEffect(() => {\n    if (latestBlockNumber && loading) {\n      setLoading(false);\n      setCompleted(true);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [latestBlockNumber]);\n  useEffect(() => {\n    if (latestBlockNumber && isUnstakeComplete && !isStakingLoading) {\n      setIsStakingLoading(true);\n    } else if (latestBlockNumber && isUnstakeComplete && isStakingLoading) {\n      setIsStakingLoading(false);\n      setIsUnstakeComplete(false);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [latestBlockNumber, isUnstakeComplete]);\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, !loading && !completed ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CloseIcon, {\n    onClick: () => onDismiss && onDismiss(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Text, {\n    color: \"text1\",\n    fontSize: 32,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, currentStep > 0 && allChoosePoolLength > 1 ? t('migratePage.migrateModalHeading', {\n    current: choosePoolIndex + 1,\n    total: allChoosePoolLength\n  }) : t('migratePage.migrate')), /*#__PURE__*/React.createElement(Box, {\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Steps, {\n    onChange: handleChange,\n    current: currentStep,\n    allowChangeOnClick: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Step, {\n    title: t('migratePage.choose'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Step, {\n    title: t('migratePage.unstake'),\n    disabled: currentStep === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Step, {\n    title: t('migratePage.stake'),\n    disabled: currentStep <= 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  })), currentStep === 0 && /*#__PURE__*/React.createElement(ChoosePool, {\n    allChoosePool: allChoosePool,\n    allPool: allPool,\n    v2IsLoading: v2IsLoading,\n    toggleSelectAll: toggleSelectAll,\n    toggleIndividualSelect: toggleIndividualSelect,\n    goNext: goNext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }), currentStep === 1 && /*#__PURE__*/React.createElement(Unstake, {\n    allChoosePool: allChoosePool,\n    goNext: () => {\n      setIsUnstakeComplete(true);\n      goNext();\n    },\n    goBack: goBack,\n    choosePoolIndex: choosePoolIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }), currentStep === 2 && /*#__PURE__*/React.createElement(Stake, {\n    allChoosePool: allChoosePool,\n    setCompleted: () => {\n      setLoading(true); // setCompleted(true)\n    },\n    allChoosePoolLength: allChoosePoolLength,\n    goBack: goBack,\n    choosePoolIndex: choosePoolIndex,\n    setChoosePoolIndex: value => setChoosePoolIndex(value),\n    isStakingLoading: isStakingLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }))) : !loading && completed ? /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ConfirmedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ArrowUpCircle, {\n    strokeWidth: 0.5,\n    size: 90,\n    color: theme.primary1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"12px\",\n    justify: 'center',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"text4\",\n    fontSize: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, t('earn.transactionSubmitted'))))) : /*#__PURE__*/React.createElement(Loader, {\n    loadingText: t('migratePage.submittingTransaction'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default StepView;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/MigrationModal/StepView/index.tsx"],"names":["React","useState","useEffect","useContext","Wrapper","ConfirmedIcon","Section","Text","Steps","Step","Box","CloseIcon","useTranslation","ChoosePool","Unstake","Stake","useGetMigrationData","AutoColumn","RowBetween","useBlockNumber","ArrowUpCircle","ThemeContext","Loader","StepView","selectedPool","version","onDismiss","t","theme","currentStep","setCurrentStep","allChoosePool","setAllChoosePool","allPool","v2IsLoading","completed","setCompleted","loading","setLoading","choosePoolIndex","setChoosePoolIndex","isUnstakeComplete","setIsUnstakeComplete","isStakingLoading","setIsStakingLoading","handleChange","step","toggleSelectAll","check","toggleIndividualSelect","address","newAllChoosePool","newObject","container","goNext","newStep","goBack","allChoosePoolLength","Object","keys","length","latestBlockNumber","current","total","value","primary1"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport { Wrapper, ConfirmedIcon, Section } from './styleds'\nimport { Text, Steps, Step, Box } from '@pangolindex/components'\nimport { CloseIcon } from '../../../theme/components'\nimport { useTranslation } from 'react-i18next'\nimport ChoosePool from '../ChoosePool'\nimport Unstake from '../Unstake'\nimport Stake from '../Stake'\nimport { Pair } from '@pangolindex/sdk'\nimport { useGetMigrationData } from '../../../state/migrate/hooks'\nimport { StakingInfo } from '../../../state/stake/hooks'\nimport { AutoColumn } from '../../Column'\nimport { RowBetween } from '../../Row'\nimport { useBlockNumber } from '../../../state/application/hooks'\nimport { ArrowUpCircle } from 'react-feather'\nimport { ThemeContext } from 'styled-components'\nimport Loader from '../Loader'\n\nexport interface StepProps {\n  selectedPool?: { [address: string]: { pair: Pair; staking: StakingInfo } }\n  version: number\n  onDismiss?: () => void\n}\n\nconst StepView = ({ selectedPool, version, onDismiss }: StepProps) => {\n  const { t } = useTranslation()\n  const theme = useContext(ThemeContext)\n  const [currentStep, setCurrentStep] = useState(0)\n  const [allChoosePool, setAllChoosePool] = useState({} as { [address: string]: { pair: Pair; staking: StakingInfo } })\n\n  const { allPool, v2IsLoading } = useGetMigrationData(version)\n  const [completed, setCompleted] = useState(false)\n  const [loading, setLoading] = useState(false)\n\n  const [choosePoolIndex, setChoosePoolIndex] = useState(0)\n\n  const [isUnstakeComplete, setIsUnstakeComplete] = useState(false)\n  const [isStakingLoading, setIsStakingLoading] = useState(false)\n\n  const handleChange = (step: number) => {\n    setCurrentStep(step)\n  }\n\n  useEffect(() => {\n    if (selectedPool) {\n      setCurrentStep(1)\n\n      setAllChoosePool(selectedPool)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedPool])\n\n  const toggleSelectAll = (check: boolean) => {\n    if (check) {\n      setAllChoosePool({ ...allPool })\n    } else {\n      setAllChoosePool({})\n    }\n  }\n\n  const toggleIndividualSelect = (address: string) => {\n    if (!!allChoosePool[address]) {\n      const newAllChoosePool = allChoosePool\n      delete newAllChoosePool[address]\n      setAllChoosePool({ ...newAllChoosePool })\n    } else {\n      const newObject = allPool[address]\n      const container = {} as { [address: string]: { pair: Pair; staking: StakingInfo } }\n      container[address] = newObject\n      setAllChoosePool({ ...allChoosePool, ...container })\n    }\n  }\n\n  const goNext = () => {\n    const newStep = currentStep + 1\n    setCurrentStep(newStep)\n  }\n\n  const goBack = () => {\n    const newStep = currentStep - 1\n    setCurrentStep(newStep)\n  }\n\n  const allChoosePoolLength = (Object.keys(allChoosePool) || []).length\n\n  const latestBlockNumber = useBlockNumber()\n\n  useEffect(() => {\n    if (latestBlockNumber && loading) {\n      setLoading(false)\n      setCompleted(true)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [latestBlockNumber])\n\n  useEffect(() => {\n    if (latestBlockNumber && isUnstakeComplete && !isStakingLoading) {\n      setIsStakingLoading(true)\n    } else if (latestBlockNumber && isUnstakeComplete && isStakingLoading) {\n      setIsStakingLoading(false)\n      setIsUnstakeComplete(false)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [latestBlockNumber, isUnstakeComplete])\n\n  return (\n    <Wrapper>\n      {!loading && !completed ? (\n        <>\n          <RowBetween>\n            <div />\n            <CloseIcon onClick={() => onDismiss && onDismiss()} />\n          </RowBetween>\n\n          <Text color=\"text1\" fontSize={32}>\n            {currentStep > 0 && allChoosePoolLength > 1\n              ? t('migratePage.migrateModalHeading', {\n                  current: choosePoolIndex + 1,\n                  total: allChoosePoolLength\n                })\n              : t('migratePage.migrate')}\n          </Text>\n\n          <Box mt={10}>\n            <Steps onChange={handleChange} current={currentStep} allowChangeOnClick={false}>\n              <Step title={t('migratePage.choose')} />\n              <Step title={t('migratePage.unstake')} disabled={currentStep === 0} />\n              <Step title={t('migratePage.stake')} disabled={currentStep <= 1} />\n            </Steps>\n            {currentStep === 0 && (\n              <ChoosePool\n                allChoosePool={allChoosePool}\n                allPool={allPool}\n                v2IsLoading={v2IsLoading}\n                toggleSelectAll={toggleSelectAll}\n                toggleIndividualSelect={toggleIndividualSelect}\n                goNext={goNext}\n              />\n            )}\n            {currentStep === 1 && (\n              <Unstake\n                allChoosePool={allChoosePool}\n                goNext={() => {\n                  setIsUnstakeComplete(true)\n                  goNext()\n                }}\n                goBack={goBack}\n                choosePoolIndex={choosePoolIndex}\n              />\n            )}\n\n            {currentStep === 2 && (\n              <Stake\n                allChoosePool={allChoosePool}\n                setCompleted={() => {\n                  setLoading(true)\n                  // setCompleted(true)\n                }}\n                allChoosePoolLength={allChoosePoolLength}\n                goBack={goBack}\n                choosePoolIndex={choosePoolIndex}\n                setChoosePoolIndex={value => setChoosePoolIndex(value)}\n                isStakingLoading={isStakingLoading}\n              />\n            )}\n          </Box>\n        </>\n      ) : !loading && completed ? (\n        <Wrapper>\n          <Section>\n            <ConfirmedIcon>\n              <ArrowUpCircle strokeWidth={0.5} size={90} color={theme.primary1} />\n            </ConfirmedIcon>\n\n            <AutoColumn gap=\"12px\" justify={'center'}>\n              <Text color=\"text4\" fontSize={24}>\n                {t('earn.transactionSubmitted')}\n              </Text>\n            </AutoColumn>\n          </Section>\n        </Wrapper>\n      ) : (\n        <Loader loadingText={t('migratePage.submittingTransaction')} />\n      )}\n    </Wrapper>\n  )\n}\nexport default StepView\n"]},"metadata":{},"sourceType":"module"}