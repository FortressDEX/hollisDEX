{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Earn/Manage.tsx\";\nimport React, { useCallback, useState } from 'react';\nimport { AutoColumn } from '../../components/Column';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport DoubleCurrencyLogo from '../../components/DoubleLogo';\nimport { useWalletModalToggle } from '../../state/application/hooks';\nimport { TYPE } from '../../theme';\nimport { RowBetween } from '../../components/Row';\nimport { CardSection, DataCard, CardNoise, CardBGImage } from '../../components/earn/styled';\nimport { ButtonPrimary } from '../../components/Button';\nimport StakingModal from '../../components/earn/StakingModal';\nimport { useMinichefPools } from '../../state/stake/hooks';\nimport UnstakingModal from '../../components/earn/UnstakingModal';\nimport ClaimRewardModal from '../../components/earn/ClaimRewardModal';\nimport { useTokenBalance } from '../../state/wallet/hooks';\nimport { useActiveWeb3React, useChainId } from '../../hooks';\nimport { useColor } from '../../hooks/useColor';\nimport { currencyId } from '../../utils/currencyId';\nimport { BIG_INT_ZERO } from '../../constants';\nimport { useTranslation } from 'react-i18next';\nimport RewardCard from './RewardCard';\nimport { BETA_MENU_LINK } from 'src/constants';\nconst PageWrapper = styled(AutoColumn)`\n  max-width: 640px;\n  width: 100%;\n`;\nconst PositionInfo = styled(AutoColumn)`\n  position: relative;\n  max-width: 640px;\n  width: 100%;\n  opacity: ${_ref => {\n  let {\n    dim\n  } = _ref;\n  return dim ? 0.6 : 1;\n}};\n`;\nconst BottomSection = styled(AutoColumn)`\n  border-radius: 12px;\n  width: 100%;\n  position: relative;\n`;\nconst StyledDataCard = styled(DataCard)`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #1e1a31 0%, #3d51a5 100%);\n  z-index: 2;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  background: ${_ref2 => {\n  let {\n    theme,\n    bgColor,\n    showBackground\n  } = _ref2;\n  return `radial-gradient(91.85% 100% at 1.84% 0%, ${bgColor} 0%,  ${showBackground ? theme.black : theme.bg5} 100%) `;\n}};\n`;\nconst PoolData = styled(DataCard)`\n  background: none;\n  border: 1px solid ${_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.bg4;\n}};\n  padding: 1rem;\n  z-index: 1;\n`;\nconst VoteCard = styled(DataCard)`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #27ae60 0%, #000000 100%);\n  overflow: hidden;\n`;\nconst DataRow = styled(RowBetween)`\n  justify-content: center;\n  gap: 12px;\n\n  ${_ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return theme.mediaWidth.upToSmall`\n     flex-direction: column;\n     gap: 12px;\n   `;\n}};\n`;\nconst MainDataRow = styled(RowBetween)`\n  justify-content: start;\n  align-items: start;\n  gap: 12px;\n\n  ${_ref5 => {\n  let {\n    theme\n  } = _ref5;\n  return theme.mediaWidth.upToSmall`\n     flex-direction: column;\n     gap: 12px;\n   `;\n}};\n`;\n\nconst Manage = _ref6 => {\n  var _stakingInfo$stakedAm, _stakingInfo$stakedAm2, _stakingInfo$stakedAm3, _stakingInfo$stakedAm4, _ref7, _stakingInfo$totalSta, _stakingInfo$totalSta2, _stakingInfo$totalRew, _stakingInfo$totalRew2, _stakingInfo$totalRew3, _stakingInfo$stakedAm5, _stakingInfo$stakedAm6, _stakingInfo$stakedAm7, _stakingInfo$stakedAm8, _stakingInfo$earnedAm, _stakingInfo$stakedAm9;\n\n  let {\n    version,\n    stakingInfo,\n    currencyA,\n    currencyB,\n    extraRewardTokensAmount\n  } = _ref6;\n  const {\n    account\n  } = useActiveWeb3React();\n  const chainId = useChainId();\n  let backgroundColor;\n  let token;\n  /* eslint-disable prefer-const*/\n  // get the color of the token\n\n  backgroundColor = useColor(token); // detect existing unstaked LP position to show add button if none found\n\n  const userLiquidityUnstaked = useTokenBalance(account !== null && account !== void 0 ? account : undefined, stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm === void 0 ? void 0 : _stakingInfo$stakedAm.token);\n  const showAddLiquidityButton = Boolean((stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm2 = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm2 === void 0 ? void 0 : _stakingInfo$stakedAm2.equalTo('0')) && (userLiquidityUnstaked === null || userLiquidityUnstaked === void 0 ? void 0 : userLiquidityUnstaked.equalTo('0'))); // toggle for staking modal and unstaking modal\n\n  const [showStakingModal, setShowStakingModal] = useState(false);\n  const [showUnstakingModal, setShowUnstakingModal] = useState(false);\n  const [showClaimRewardModal, setShowClaimRewardModal] = useState(false); // fade cards if nothing staked or nothing earned yet\n\n  const disableTop = !(stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.stakedAmount) || stakingInfo.stakedAmount.equalTo(BIG_INT_ZERO);\n  const toggleWalletModal = useWalletModalToggle();\n  const {\n    t\n  } = useTranslation();\n  const handleDepositClick = useCallback(() => {\n    if (account) {\n      setShowStakingModal(true);\n    } else {\n      toggleWalletModal();\n    }\n  }, [account, toggleWalletModal]);\n  const poolMap = useMinichefPools();\n  const pairAddress = stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm3 = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm3 === void 0 ? void 0 : (_stakingInfo$stakedAm4 = _stakingInfo$stakedAm3.token) === null || _stakingInfo$stakedAm4 === void 0 ? void 0 : _stakingInfo$stakedAm4.address;\n  const isSuperFarm = ((_ref7 = extraRewardTokensAmount || []) === null || _ref7 === void 0 ? void 0 : _ref7.length) > 0;\n  return /*#__PURE__*/React.createElement(PageWrapper, {\n    gap: \"lg\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    style: {\n      gap: '24px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.mediumHeader, {\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol, \"-\", currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol, \" \", t('earnPage.liquidityMining')), /*#__PURE__*/React.createElement(DoubleCurrencyLogo, {\n    currency0: currencyA !== null && currencyA !== void 0 ? currencyA : undefined,\n    currency1: currencyB !== null && currencyB !== void 0 ? currencyB : undefined,\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(MainDataRow, {\n    style: {\n      gap: '24px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PoolData, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, t('earnPage.totalStaked')), /*#__PURE__*/React.createElement(TYPE.body, {\n    fontSize: 24,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, `$${(_stakingInfo$totalSta = stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$totalSta2 = stakingInfo.totalStakedInUsd) === null || _stakingInfo$totalSta2 === void 0 ? void 0 : _stakingInfo$totalSta2.toFixed(0, {\n    groupSeparator: ','\n  })) !== null && _stakingInfo$totalSta !== void 0 ? _stakingInfo$totalSta : '-'}`))), /*#__PURE__*/React.createElement(PoolData, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, t('earnPage.poolRate')), /*#__PURE__*/React.createElement(TYPE.body, {\n    fontSize: isSuperFarm ? 18 : 24,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, (_stakingInfo$totalRew = stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$totalRew2 = stakingInfo.totalRewardRatePerSecond) === null || _stakingInfo$totalRew2 === void 0 ? void 0 : (_stakingInfo$totalRew3 = _stakingInfo$totalRew2.multiply((60 * 60 * 24 * 7).toString())) === null || _stakingInfo$totalRew3 === void 0 ? void 0 : _stakingInfo$totalRew3.toFixed(0, {\n    groupSeparator: ','\n  })) !== null && _stakingInfo$totalRew !== void 0 ? _stakingInfo$totalRew : '-', t('earnPage.rewardPerWeek', {\n    symbol: 'PNG'\n  })), isSuperFarm && (stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.totalRewardRatePerSecond) && /*#__PURE__*/React.createElement(React.Fragment, null, (extraRewardTokensAmount || []).map((reward, index) => {\n    var _stakingInfo$rewardTo, _weeklyRewardRate$toF;\n\n    const tokenMultiplier = stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$rewardTo = stakingInfo.rewardTokensMultiplier) === null || _stakingInfo$rewardTo === void 0 ? void 0 : _stakingInfo$rewardTo[index];\n    const weeklyRewardRate = (stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.getExtraTokensWeeklyRewardRate) && (stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.getExtraTokensWeeklyRewardRate(stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.totalRewardRatePerWeek, reward === null || reward === void 0 ? void 0 : reward.token, tokenMultiplier));\n    return /*#__PURE__*/React.createElement(TYPE.body, {\n      fontSize: 18,\n      fontWeight: 500,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }, (_weeklyRewardRate$toF = weeklyRewardRate === null || weeklyRewardRate === void 0 ? void 0 : weeklyRewardRate.toFixed(0, {\n      groupSeparator: ','\n    })) !== null && _weeklyRewardRate$toF !== void 0 ? _weeklyRewardRate$toF : '-', t('earnPage.rewardPerWeek', {\n      symbol: reward === null || reward === void 0 ? void 0 : reward.token.symbol\n    }));\n  }))))), version === '1' && (stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm5 = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm5 === void 0 ? void 0 : _stakingInfo$stakedAm5.greaterThan(BIG_INT_ZERO)) && poolMap.hasOwnProperty(pairAddress) ? /*#__PURE__*/React.createElement(VoteCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBGImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardNoise, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, t('earnPage.migrateTitle'))), /*#__PURE__*/React.createElement(RowBetween, {\n    style: {\n      marginBottom: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, t('earnPage.migrateDescription'))), /*#__PURE__*/React.createElement(ButtonPrimary, {\n    padding: \"8px\",\n    width: 'fit-content',\n    as: Link,\n    to: `${BETA_MENU_LINK.migrate}/1`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, t('earnPage.migrate')))), /*#__PURE__*/React.createElement(CardBGImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardNoise, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  })) : null, showAddLiquidityButton && /*#__PURE__*/React.createElement(VoteCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBGImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardNoise, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, t('earnPage.step1'))), /*#__PURE__*/React.createElement(RowBetween, {\n    style: {\n      marginBottom: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }, t('earnPage.pglTokenRequired', {\n    poolHandle: (currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol) + '-' + (currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol)\n  }))), /*#__PURE__*/React.createElement(ButtonPrimary, {\n    padding: \"8px\",\n    width: 'fit-content',\n    as: Link,\n    to: `/add/${currencyA && currencyId(currencyA, chainId)}/${currencyB && currencyId(currencyB, chainId)}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }, t('earnPage.addPoolLiquidity', {\n    poolHandle: (currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol) + '-' + (currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol)\n  })))), /*#__PURE__*/React.createElement(CardBGImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardNoise, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  })), stakingInfo && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StakingModal, {\n    isOpen: showStakingModal,\n    onDismiss: () => setShowStakingModal(false),\n    stakingInfo: stakingInfo,\n    userLiquidityUnstaked: userLiquidityUnstaked,\n    version: Number(version),\n    extraRewardTokensAmount: extraRewardTokensAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(UnstakingModal, {\n    isOpen: showUnstakingModal,\n    onDismiss: () => setShowUnstakingModal(false),\n    stakingInfo: stakingInfo,\n    version: Number(version),\n    extraRewardTokensAmount: extraRewardTokensAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ClaimRewardModal, {\n    isOpen: showClaimRewardModal,\n    onDismiss: () => setShowClaimRewardModal(false),\n    stakingInfo: stakingInfo,\n    version: Number(version),\n    extraRewardTokensAmount: extraRewardTokensAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(PositionInfo, {\n    gap: \"lg\",\n    justify: \"center\",\n    dim: showAddLiquidityButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BottomSection, {\n    gap: \"lg\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledDataCard, {\n    disabled: disableTop,\n    bgColor: backgroundColor,\n    showBackground: !showAddLiquidityButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBGImage, {\n    desaturate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(CardNoise, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 19\n    }\n  }, t('earnPage.liquidityDeposits'))), /*#__PURE__*/React.createElement(RowBetween, {\n    style: {\n      alignItems: 'baseline'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    fontSize: 36,\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 19\n    }\n  }, (_stakingInfo$stakedAm6 = stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm7 = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm7 === void 0 ? void 0 : _stakingInfo$stakedAm7.toSignificant(6)) !== null && _stakingInfo$stakedAm6 !== void 0 ? _stakingInfo$stakedAm6 : '-'), /*#__PURE__*/React.createElement(TYPE.white, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 19\n    }\n  }, \"PGL \", currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol, \"-\", currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol))))), /*#__PURE__*/React.createElement(RewardCard, {\n    stakedAmount: stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.stakedAmount,\n    earnedAmount: stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.earnedAmount,\n    weeklyRewardRate: stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.rewardRatePerWeek,\n    setShowClaimRewardModal: () => setShowClaimRewardModal(true),\n    isOverlay: true,\n    isSuperFarm: isSuperFarm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }\n  }), isSuperFarm && /*#__PURE__*/React.createElement(React.Fragment, null, (extraRewardTokensAmount || []).map((reward, index) => {\n    var _stakingInfo$rewardTo2;\n\n    const tokenMultiplier = stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$rewardTo2 = stakingInfo.rewardTokensMultiplier) === null || _stakingInfo$rewardTo2 === void 0 ? void 0 : _stakingInfo$rewardTo2[index];\n    const weeklyExtraRewardRate = (stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.getExtraTokensWeeklyRewardRate) && (stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.getExtraTokensWeeklyRewardRate(stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.rewardRatePerWeek, reward === null || reward === void 0 ? void 0 : reward.token, tokenMultiplier));\n    return /*#__PURE__*/React.createElement(RewardCard, {\n      stakedAmount: stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.stakedAmount,\n      earnedAmount: reward,\n      weeklyRewardRate: weeklyExtraRewardRate,\n      setShowClaimRewardModal: () => setShowClaimRewardModal(true),\n      currency: reward === null || reward === void 0 ? void 0 : reward.token,\n      isOverlay: false,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 19\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(TYPE.main, {\n    style: {\n      textAlign: 'center'\n    },\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"wizard-icon\",\n    style: {\n      marginRight: '8px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 11\n    }\n  }, \"\\u2B50\\uFE0F\"), t('earnPage.automagically')), !showAddLiquidityButton && /*#__PURE__*/React.createElement(DataRow, {\n    style: {\n      marginBottom: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonPrimary, {\n    padding: \"8px\",\n    borderRadius: \"8px\",\n    width: \"160px\",\n    onClick: handleDepositClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }\n  }, (stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm8 = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm8 === void 0 ? void 0 : _stakingInfo$stakedAm8.greaterThan(BIG_INT_ZERO)) ? t('earnPage.deposit') : t('earnPage.depositStakingTokens', {\n    symbol: 'PGL'\n  })), isSuperFarm && (stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$earnedAm = stakingInfo.earnedAmount) === null || _stakingInfo$earnedAm === void 0 ? void 0 : _stakingInfo$earnedAm.greaterThan(BIG_INT_ZERO)) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ButtonPrimary, {\n    padding: \"8px\",\n    borderRadius: \"8px\",\n    width: \"160px\",\n    onClick: () => setShowClaimRewardModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 17\n    }\n  }, t('earnPage.claim'))), (stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm9 = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm9 === void 0 ? void 0 : _stakingInfo$stakedAm9.greaterThan(BIG_INT_ZERO)) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ButtonPrimary, {\n    padding: \"8px\",\n    borderRadius: \"8px\",\n    width: \"160px\",\n    onClick: () => setShowUnstakingModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 17\n    }\n  }, \"Withdraw\"))), !userLiquidityUnstaked ? null : userLiquidityUnstaked.equalTo('0') ? null : /*#__PURE__*/React.createElement(TYPE.main, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 11\n    }\n  }, userLiquidityUnstaked.toSignificant(6), \" \", t('earnPage.stakingTokensAvailable', {\n    symbol: 'PGL'\n  }))));\n};\n\nexport default Manage;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Earn/Manage.tsx"],"names":["React","useCallback","useState","AutoColumn","styled","Link","DoubleCurrencyLogo","useWalletModalToggle","TYPE","RowBetween","CardSection","DataCard","CardNoise","CardBGImage","ButtonPrimary","StakingModal","useMinichefPools","UnstakingModal","ClaimRewardModal","useTokenBalance","useActiveWeb3React","useChainId","useColor","currencyId","BIG_INT_ZERO","useTranslation","RewardCard","BETA_MENU_LINK","PageWrapper","PositionInfo","dim","BottomSection","StyledDataCard","theme","bgColor","showBackground","black","bg5","PoolData","bg4","VoteCard","DataRow","mediaWidth","upToSmall","MainDataRow","Manage","version","stakingInfo","currencyA","currencyB","extraRewardTokensAmount","account","chainId","backgroundColor","token","userLiquidityUnstaked","undefined","stakedAmount","showAddLiquidityButton","Boolean","equalTo","showStakingModal","setShowStakingModal","showUnstakingModal","setShowUnstakingModal","showClaimRewardModal","setShowClaimRewardModal","disableTop","toggleWalletModal","t","handleDepositClick","poolMap","pairAddress","address","isSuperFarm","length","gap","margin","symbol","totalStakedInUsd","toFixed","groupSeparator","totalRewardRatePerSecond","multiply","toString","map","reward","index","tokenMultiplier","rewardTokensMultiplier","weeklyRewardRate","getExtraTokensWeeklyRewardRate","totalRewardRatePerWeek","greaterThan","hasOwnProperty","marginBottom","migrate","poolHandle","Number","alignItems","toSignificant","earnedAmount","rewardRatePerWeek","weeklyExtraRewardRate","textAlign","marginRight"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react'\nimport { AutoColumn } from '../../components/Column'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { Token, Currency, TokenAmount } from '@pangolindex/sdk'\nimport DoubleCurrencyLogo from '../../components/DoubleLogo'\nimport { useWalletModalToggle } from '../../state/application/hooks'\nimport { TYPE } from '../../theme'\nimport { RowBetween } from '../../components/Row'\nimport { CardSection, DataCard, CardNoise, CardBGImage } from '../../components/earn/styled'\nimport { ButtonPrimary } from '../../components/Button'\nimport StakingModal from '../../components/earn/StakingModal'\nimport { DoubleSideStakingInfo, useMinichefPools } from '../../state/stake/hooks'\nimport UnstakingModal from '../../components/earn/UnstakingModal'\nimport ClaimRewardModal from '../../components/earn/ClaimRewardModal'\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { useActiveWeb3React, useChainId } from '../../hooks'\nimport { useColor } from '../../hooks/useColor'\nimport { currencyId } from '../../utils/currencyId'\nimport { BIG_INT_ZERO } from '../../constants'\nimport { useTranslation } from 'react-i18next'\nimport RewardCard from './RewardCard'\nimport { BETA_MENU_LINK } from 'src/constants'\n\nconst PageWrapper = styled(AutoColumn)`\n  max-width: 640px;\n  width: 100%;\n`\n\nconst PositionInfo = styled(AutoColumn)<{ dim: any }>`\n  position: relative;\n  max-width: 640px;\n  width: 100%;\n  opacity: ${({ dim }) => (dim ? 0.6 : 1)};\n`\n\nconst BottomSection = styled(AutoColumn)`\n  border-radius: 12px;\n  width: 100%;\n  position: relative;\n`\n\nconst StyledDataCard = styled(DataCard)<{ bgColor?: any; showBackground?: any }>`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #1e1a31 0%, #3d51a5 100%);\n  z-index: 2;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  background: ${({ theme, bgColor, showBackground }) =>\n    `radial-gradient(91.85% 100% at 1.84% 0%, ${bgColor} 0%,  ${showBackground ? theme.black : theme.bg5} 100%) `};\n`\n\nconst PoolData = styled(DataCard)`\n  background: none;\n  border: 1px solid ${({ theme }) => theme.bg4};\n  padding: 1rem;\n  z-index: 1;\n`\n\nconst VoteCard = styled(DataCard)`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #27ae60 0%, #000000 100%);\n  overflow: hidden;\n`\n\nconst DataRow = styled(RowBetween)`\n  justify-content: center;\n  gap: 12px;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n     flex-direction: column;\n     gap: 12px;\n   `};\n`\n\nconst MainDataRow = styled(RowBetween)`\n  justify-content: start;\n  align-items: start;\n  gap: 12px;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n     flex-direction: column;\n     gap: 12px;\n   `};\n`\n\nexport interface ManageProps {\n  version: string\n  stakingInfo: DoubleSideStakingInfo\n  currencyA: Currency | null | undefined\n  currencyB: Currency | null | undefined\n  extraRewardTokensAmount?: Array<TokenAmount>\n}\n\nconst Manage: React.FC<ManageProps> = ({ version, stakingInfo, currencyA, currencyB, extraRewardTokensAmount }) => {\n  const { account } = useActiveWeb3React()\n  const chainId = useChainId()\n  let backgroundColor: string\n  let token: Token | undefined\n\n  /* eslint-disable prefer-const*/\n  // get the color of the token\n  backgroundColor = useColor(token)\n\n  // detect existing unstaked LP position to show add button if none found\n  const userLiquidityUnstaked = useTokenBalance(account ?? undefined, stakingInfo?.stakedAmount?.token)\n  const showAddLiquidityButton = Boolean(stakingInfo?.stakedAmount?.equalTo('0') && userLiquidityUnstaked?.equalTo('0'))\n\n  // toggle for staking modal and unstaking modal\n  const [showStakingModal, setShowStakingModal] = useState(false)\n  const [showUnstakingModal, setShowUnstakingModal] = useState(false)\n  const [showClaimRewardModal, setShowClaimRewardModal] = useState(false)\n\n  // fade cards if nothing staked or nothing earned yet\n  const disableTop = !stakingInfo?.stakedAmount || stakingInfo.stakedAmount.equalTo(BIG_INT_ZERO)\n\n  const toggleWalletModal = useWalletModalToggle()\n  const { t } = useTranslation()\n\n  const handleDepositClick = useCallback(() => {\n    if (account) {\n      setShowStakingModal(true)\n    } else {\n      toggleWalletModal()\n    }\n  }, [account, toggleWalletModal])\n\n  const poolMap = useMinichefPools()\n  const pairAddress = stakingInfo?.stakedAmount?.token?.address\n  const isSuperFarm = (extraRewardTokensAmount || [])?.length > 0\n\n  return (\n    <PageWrapper gap=\"lg\" justify=\"center\">\n      <RowBetween style={{ gap: '24px' }}>\n        <TYPE.mediumHeader style={{ margin: 0 }}>\n          {currencyA?.symbol}-{currencyB?.symbol} {t('earnPage.liquidityMining')}\n        </TYPE.mediumHeader>\n        <DoubleCurrencyLogo currency0={currencyA ?? undefined} currency1={currencyB ?? undefined} size={24} />\n      </RowBetween>\n\n      <MainDataRow style={{ gap: '24px' }}>\n        <PoolData>\n          <AutoColumn gap=\"sm\">\n            <TYPE.body style={{ margin: 0 }}>{t('earnPage.totalStaked')}</TYPE.body>\n            <TYPE.body fontSize={24} fontWeight={500}>\n              {`$${stakingInfo?.totalStakedInUsd?.toFixed(0, { groupSeparator: ',' }) ?? '-'}`}\n            </TYPE.body>\n          </AutoColumn>\n        </PoolData>\n        <PoolData>\n          <AutoColumn gap=\"sm\">\n            <TYPE.body style={{ margin: 0 }}>{t('earnPage.poolRate')}</TYPE.body>\n\n            <TYPE.body fontSize={isSuperFarm ? 18 : 24} fontWeight={500}>\n              {stakingInfo?.totalRewardRatePerSecond\n                ?.multiply((60 * 60 * 24 * 7).toString())\n                ?.toFixed(0, { groupSeparator: ',' }) ?? '-'}\n              {t('earnPage.rewardPerWeek', { symbol: 'PNG' })}\n            </TYPE.body>\n\n            {isSuperFarm && stakingInfo?.totalRewardRatePerSecond && (\n              <>\n                {(extraRewardTokensAmount || []).map((reward, index) => {\n                  const tokenMultiplier = stakingInfo?.rewardTokensMultiplier?.[index]\n                  const weeklyRewardRate =\n                    stakingInfo?.getExtraTokensWeeklyRewardRate &&\n                    stakingInfo?.getExtraTokensWeeklyRewardRate(\n                      stakingInfo?.totalRewardRatePerWeek,\n                      reward?.token,\n                      tokenMultiplier\n                    )\n\n                  return (\n                    <TYPE.body fontSize={18} fontWeight={500} key={index}>\n                      {weeklyRewardRate?.toFixed(0, { groupSeparator: ',' }) ?? '-'}\n\n                      {t('earnPage.rewardPerWeek', { symbol: reward?.token.symbol })}\n                    </TYPE.body>\n                  )\n                })}\n              </>\n            )}\n          </AutoColumn>\n        </PoolData>\n      </MainDataRow>\n\n      {version === '1' &&\n      stakingInfo?.stakedAmount?.greaterThan(BIG_INT_ZERO) &&\n      poolMap.hasOwnProperty(pairAddress) ? (\n        <VoteCard>\n          <CardBGImage />\n          <CardNoise />\n          <CardSection>\n            <AutoColumn gap=\"md\">\n              <RowBetween>\n                <TYPE.white fontWeight={600}>{t('earnPage.migrateTitle')}</TYPE.white>\n              </RowBetween>\n              <RowBetween style={{ marginBottom: '1rem' }}>\n                <TYPE.white fontSize={14}>{t('earnPage.migrateDescription')}</TYPE.white>\n              </RowBetween>\n              <ButtonPrimary padding=\"8px\" width={'fit-content'} as={Link} to={`${BETA_MENU_LINK.migrate}/1`}>\n                {t('earnPage.migrate')}\n              </ButtonPrimary>\n            </AutoColumn>\n          </CardSection>\n          <CardBGImage />\n          <CardNoise />\n        </VoteCard>\n      ) : null}\n\n      {showAddLiquidityButton && (\n        <VoteCard>\n          <CardBGImage />\n          <CardNoise />\n          <CardSection>\n            <AutoColumn gap=\"md\">\n              <RowBetween>\n                <TYPE.white fontWeight={600}>{t('earnPage.step1')}</TYPE.white>\n              </RowBetween>\n              <RowBetween style={{ marginBottom: '1rem' }}>\n                <TYPE.white fontSize={14}>\n                  {t('earnPage.pglTokenRequired', { poolHandle: currencyA?.symbol + '-' + currencyB?.symbol })}\n                </TYPE.white>\n              </RowBetween>\n              <ButtonPrimary\n                padding=\"8px\"\n                width={'fit-content'}\n                as={Link}\n                to={`/add/${currencyA && currencyId(currencyA, chainId)}/${currencyB &&\n                  currencyId(currencyB, chainId)}`}\n              >\n                {t('earnPage.addPoolLiquidity', { poolHandle: currencyA?.symbol + '-' + currencyB?.symbol })}\n              </ButtonPrimary>\n            </AutoColumn>\n          </CardSection>\n          <CardBGImage />\n          <CardNoise />\n        </VoteCard>\n      )}\n\n      {stakingInfo && (\n        <>\n          <StakingModal\n            isOpen={showStakingModal}\n            onDismiss={() => setShowStakingModal(false)}\n            stakingInfo={stakingInfo}\n            userLiquidityUnstaked={userLiquidityUnstaked}\n            version={Number(version)}\n            extraRewardTokensAmount={extraRewardTokensAmount}\n          />\n          <UnstakingModal\n            isOpen={showUnstakingModal}\n            onDismiss={() => setShowUnstakingModal(false)}\n            stakingInfo={stakingInfo}\n            version={Number(version)}\n            extraRewardTokensAmount={extraRewardTokensAmount}\n          />\n          <ClaimRewardModal\n            isOpen={showClaimRewardModal}\n            onDismiss={() => setShowClaimRewardModal(false)}\n            stakingInfo={stakingInfo}\n            version={Number(version)}\n            extraRewardTokensAmount={extraRewardTokensAmount}\n          />\n        </>\n      )}\n\n      <PositionInfo gap=\"lg\" justify=\"center\" dim={showAddLiquidityButton}>\n        <BottomSection gap=\"lg\" justify=\"center\">\n          <StyledDataCard disabled={disableTop} bgColor={backgroundColor} showBackground={!showAddLiquidityButton}>\n            <CardSection>\n              <CardBGImage desaturate />\n              <CardNoise />\n              <AutoColumn gap=\"md\">\n                <RowBetween>\n                  <TYPE.white fontWeight={600}>{t('earnPage.liquidityDeposits')}</TYPE.white>\n                </RowBetween>\n                <RowBetween style={{ alignItems: 'baseline' }}>\n                  <TYPE.white fontSize={36} fontWeight={600}>\n                    {stakingInfo?.stakedAmount?.toSignificant(6) ?? '-'}\n                  </TYPE.white>\n                  <TYPE.white>\n                    PGL {currencyA?.symbol}-{currencyB?.symbol}\n                  </TYPE.white>\n                </RowBetween>\n              </AutoColumn>\n            </CardSection>\n          </StyledDataCard>\n          {/* // copy */}\n\n          <RewardCard\n            stakedAmount={stakingInfo?.stakedAmount}\n            earnedAmount={stakingInfo?.earnedAmount}\n            weeklyRewardRate={stakingInfo?.rewardRatePerWeek}\n            setShowClaimRewardModal={() => setShowClaimRewardModal(true)}\n            isOverlay={true}\n            isSuperFarm={isSuperFarm}\n          />\n\n          {isSuperFarm && (\n            <>\n              {(extraRewardTokensAmount || []).map((reward, index) => {\n                const tokenMultiplier = stakingInfo?.rewardTokensMultiplier?.[index]\n\n                const weeklyExtraRewardRate =\n                  stakingInfo?.getExtraTokensWeeklyRewardRate &&\n                  stakingInfo?.getExtraTokensWeeklyRewardRate(\n                    stakingInfo?.rewardRatePerWeek,\n                    reward?.token,\n                    tokenMultiplier\n                  )\n\n                return (\n                  <RewardCard\n                    stakedAmount={stakingInfo?.stakedAmount}\n                    earnedAmount={reward}\n                    weeklyRewardRate={weeklyExtraRewardRate}\n                    setShowClaimRewardModal={() => setShowClaimRewardModal(true)}\n                    currency={reward?.token}\n                    isOverlay={false}\n                    key={index}\n                  />\n                )\n              })}\n            </>\n          )}\n        </BottomSection>\n        <TYPE.main style={{ textAlign: 'center' }} fontSize={14}>\n          <span role=\"img\" aria-label=\"wizard-icon\" style={{ marginRight: '8px' }}>\n            ⭐️\n          </span>\n          {t('earnPage.automagically')}\n        </TYPE.main>\n\n        {!showAddLiquidityButton && (\n          <DataRow style={{ marginBottom: '1rem' }}>\n            <ButtonPrimary padding=\"8px\" borderRadius=\"8px\" width=\"160px\" onClick={handleDepositClick}>\n              {stakingInfo?.stakedAmount?.greaterThan(BIG_INT_ZERO)\n                ? t('earnPage.deposit')\n                : t('earnPage.depositStakingTokens', { symbol: 'PGL' })}\n            </ButtonPrimary>\n\n            {isSuperFarm && stakingInfo?.earnedAmount?.greaterThan(BIG_INT_ZERO) && (\n              <>\n                <ButtonPrimary\n                  padding=\"8px\"\n                  borderRadius=\"8px\"\n                  width=\"160px\"\n                  onClick={() => setShowClaimRewardModal(true)}\n                >\n                  {t('earnPage.claim')}\n                </ButtonPrimary>\n              </>\n            )}\n\n            {stakingInfo?.stakedAmount?.greaterThan(BIG_INT_ZERO) && (\n              <>\n                <ButtonPrimary\n                  padding=\"8px\"\n                  borderRadius=\"8px\"\n                  width=\"160px\"\n                  onClick={() => setShowUnstakingModal(true)}\n                >\n                  Withdraw\n                </ButtonPrimary>\n              </>\n            )}\n          </DataRow>\n        )}\n        {!userLiquidityUnstaked ? null : userLiquidityUnstaked.equalTo('0') ? null : (\n          <TYPE.main>\n            {userLiquidityUnstaked.toSignificant(6)} {t('earnPage.stakingTokensAvailable', { symbol: 'PGL' })}\n          </TYPE.main>\n        )}\n      </PositionInfo>\n    </PageWrapper>\n  )\n}\n\nexport default Manage\n"]},"metadata":{},"sourceType":"module"}