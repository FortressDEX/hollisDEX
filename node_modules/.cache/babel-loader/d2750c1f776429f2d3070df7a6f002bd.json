{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Stake/RewardStakeDrawer/index.tsx\";\nimport React from 'react';\nimport Drawer from 'src/components/Drawer';\nimport StakeWidget from '../DetailModal/StakeWidget';\n\nconst RewardStakeDrawer = _ref => {\n  let {\n    isOpen,\n    onClose,\n    stakingInfo\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Drawer, {\n    title: \"Stake Reward\",\n    isOpen: isOpen,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, isOpen && /*#__PURE__*/React.createElement(StakeWidget, {\n    stakingInfo: stakingInfo,\n    onClose: onClose,\n    isRewardStake: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 18\n    }\n  }));\n};\n\nexport default RewardStakeDrawer;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Stake/RewardStakeDrawer/index.tsx"],"names":["React","Drawer","StakeWidget","RewardStakeDrawer","isOpen","onClose","stakingInfo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,OAAOC,WAAP,MAAwB,4BAAxB;;AAQA,MAAMC,iBAAkC,GAAG,QAAsC;AAAA,MAArC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,GAAqC;AAC/E,sBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,cAAd;AAA6B,IAAA,MAAM,EAAEF,MAArC;AAA6C,IAAA,OAAO,EAAEC,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,MAAM,iBAAI,oBAAC,WAAD;AAAa,IAAA,WAAW,EAAEE,WAA1B;AAAuC,IAAA,OAAO,EAAED,OAAhD;AAAyD,IAAA,aAAa,EAAE,IAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADb,CADF;AAKD,CAND;;AAQA,eAAeF,iBAAf","sourcesContent":["import React from 'react'\nimport Drawer from 'src/components/Drawer'\nimport { SingleSideStakingInfo } from 'src/state/stake/hooks'\nimport StakeWidget from '../DetailModal/StakeWidget'\n\ntype Props = {\n  isOpen: boolean\n  stakingInfo: SingleSideStakingInfo\n  onClose: () => void\n}\n\nconst RewardStakeDrawer: React.FC<Props> = ({ isOpen, onClose, stakingInfo }) => {\n  return (\n    <Drawer title=\"Stake Reward\" isOpen={isOpen} onClose={onClose}>\n      {isOpen && <StakeWidget stakingInfo={stakingInfo} onClose={onClose} isRewardStake={true} />}\n    </Drawer>\n  )\n}\n\nexport default RewardStakeDrawer\n"]},"metadata":{},"sourceType":"module"}