{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit';\nimport { addCurrency, removeCurrency } from './actions';\nconst initialState = {\n  currencies: []\n};\nexport default createReducer(initialState, builder => builder.addCase(addCurrency, (state, _ref) => {\n  let {\n    payload: address\n  } = _ref;\n  const existingSelectedListUrl = [].concat(state.currencies || []); // const index = existingSelectedListUrl.indexOf(address)\n  // if (index !== -1) {\n  //   existingSelectedListUrl.splice(index, 1)\n  //   state.currencies = existingSelectedListUrl\n  // } else {\n\n  existingSelectedListUrl.push(address);\n  state.currencies = existingSelectedListUrl; //}\n}).addCase(removeCurrency, (state, _ref2) => {\n  let {\n    payload: address\n  } = _ref2;\n  const existingList = [].concat(state.currencies || []);\n  const index = existingList.indexOf(address);\n\n  if (index !== -1) {\n    if ((existingList === null || existingList === void 0 ? void 0 : existingList.length) === 1) {\n      // if user want to remove the list and if there is only one item in the selected list\n      state.currencies = [];\n    } else {\n      existingList.splice(index, 1);\n      state.currencies = existingList;\n    }\n  }\n}));","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/state/watchlists/reducer.ts"],"names":["createReducer","addCurrency","removeCurrency","initialState","currencies","builder","addCase","state","payload","address","existingSelectedListUrl","concat","push","existingList","index","indexOf","length","splice"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,WAA5C;AAMA,MAAMC,YAA4B,GAAG;AACnCC,EAAAA,UAAU,EAAE;AADuB,CAArC;AAIA,eAAeJ,aAAa,CAACG,YAAD,EAAeE,OAAO,IAChDA,OAAO,CACJC,OADH,CACWL,WADX,EACwB,CAACM,KAAD,WAAiC;AAAA,MAAzB;AAAEC,IAAAA,OAAO,EAAEC;AAAX,GAAyB;AACrD,QAAMC,uBAAuB,GAAI,EAAD,CAAiBC,MAAjB,CAAwBJ,KAAK,CAACH,UAAN,IAAoB,EAA5C,CAAhC,CADqD,CAGrD;AAEA;AAEA;AACA;AAEA;;AACAM,EAAAA,uBAAuB,CAACE,IAAxB,CAA6BH,OAA7B;AACAF,EAAAA,KAAK,CAACH,UAAN,GAAmBM,uBAAnB,CAZqD,CAarD;AACD,CAfH,EAgBGJ,OAhBH,CAgBWJ,cAhBX,EAgB2B,CAACK,KAAD,YAAiC;AAAA,MAAzB;AAAEC,IAAAA,OAAO,EAAEC;AAAX,GAAyB;AACxD,QAAMI,YAAY,GAAI,EAAD,CAAiBF,MAAjB,CAAwBJ,KAAK,CAACH,UAAN,IAAoB,EAA5C,CAArB;AACA,QAAMU,KAAK,GAAGD,YAAY,CAACE,OAAb,CAAqBN,OAArB,CAAd;;AAEA,MAAIK,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,QAAI,CAAAD,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEG,MAAd,MAAyB,CAA7B,EAAgC;AAC9B;AACAT,MAAAA,KAAK,CAACH,UAAN,GAAmB,EAAnB;AACD,KAHD,MAGO;AACLS,MAAAA,YAAY,CAACI,MAAb,CAAoBH,KAApB,EAA2B,CAA3B;AACAP,MAAAA,KAAK,CAACH,UAAN,GAAmBS,YAAnB;AACD;AACF;AACF,CA7BH,CAD0B,CAA5B","sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\nimport { addCurrency, removeCurrency } from './actions'\n\nexport interface WatchlistState {\n  readonly currencies: string[]\n}\n\nconst initialState: WatchlistState = {\n  currencies: []\n}\n\nexport default createReducer(initialState, builder =>\n  builder\n    .addCase(addCurrency, (state, { payload: address }) => {\n      const existingSelectedListUrl = ([] as string[]).concat(state.currencies || [])\n\n      // const index = existingSelectedListUrl.indexOf(address)\n\n      // if (index !== -1) {\n\n      //   existingSelectedListUrl.splice(index, 1)\n      //   state.currencies = existingSelectedListUrl\n\n      // } else {\n      existingSelectedListUrl.push(address)\n      state.currencies = existingSelectedListUrl\n      //}\n    })\n    .addCase(removeCurrency, (state, { payload: address }) => {\n      const existingList = ([] as string[]).concat(state.currencies || [])\n      const index = existingList.indexOf(address)\n\n      if (index !== -1) {\n        if (existingList?.length === 1) {\n          // if user want to remove the list and if there is only one item in the selected list\n          state.currencies = [] as string[]\n        } else {\n          existingList.splice(index, 1)\n          state.currencies = existingList\n        }\n      }\n    })\n)\n"]},"metadata":{},"sourceType":"module"}