{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Pool/EarnWidget/index.tsx\";\nimport React, { useState } from 'react';\nimport { Root } from './styled';\nimport EarnOption from './EarnOption';\nimport AddLiquidity from './AddLiquidity';\nimport Stake from './Stake';\n\nconst EarnWidget = _ref => {\n  let {\n    currencyA,\n    currencyB,\n    pair,\n    version\n  } = _ref;\n  const [type, setType] = useState('Pool');\n  return /*#__PURE__*/React.createElement(Root, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(EarnOption, {\n    type: type,\n    setType: setType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), type === 'Pool' ? /*#__PURE__*/React.createElement(AddLiquidity, {\n    currencyA: currencyA,\n    currencyB: currencyB,\n    type: \"detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Stake, {\n    pair: pair,\n    version: version,\n    type: \"detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default EarnWidget;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Pool/EarnWidget/index.tsx"],"names":["React","useState","Root","EarnOption","AddLiquidity","Stake","EarnWidget","currencyA","currencyB","pair","version","type","setType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,IAAT,QAAqB,UAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AASA,MAAMC,UAAU,GAAG,QAA8D;AAAA,MAA7D;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA,IAAxB;AAA8BC,IAAAA;AAA9B,GAA6D;AAC/E,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,MAAD,CAAhC;AAEA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEU,IAAlB;AAAwB,IAAA,OAAO,EAAEC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGD,IAAI,KAAK,MAAT,gBACC,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAEJ,SAAzB;AAAoC,IAAA,SAAS,EAAEC,SAA/C;AAA0D,IAAA,IAAI,EAAC,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAGC,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEC,IAAb;AAAmB,IAAA,OAAO,EAAEC,OAA5B;AAAqC,IAAA,IAAI,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADF;AAUD,CAbD;;AAcA,eAAeJ,UAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Currency, Pair } from '@pangolindex/sdk'\nimport { Root } from './styled'\nimport EarnOption from './EarnOption'\nimport AddLiquidity from './AddLiquidity'\nimport Stake from './Stake'\n\ninterface EarnWidgetProps {\n  currencyA: Currency\n  currencyB: Currency\n  pair: Pair | null\n  version: number\n}\n\nconst EarnWidget = ({ currencyA, currencyB, pair, version }: EarnWidgetProps) => {\n  const [type, setType] = useState('Pool' as string)\n\n  return (\n    <Root>\n      <EarnOption type={type} setType={setType} />\n      {type === 'Pool' ? (\n        <AddLiquidity currencyA={currencyA} currencyB={currencyB} type=\"detail\" />\n      ) : (\n        <Stake pair={pair} version={version} type=\"detail\" />\n      )}\n    </Root>\n  )\n}\nexport default EarnWidget\n"]},"metadata":{},"sourceType":"module"}