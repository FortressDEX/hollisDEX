{"ast":null,"code":"import { useEffect, useState } from 'react';\nexport const useLocationHash = () => {\n  const [hash, setHash] = useState(window.location.hash);\n  useEffect(() => {\n    const onHashChange = () => {\n      setHash(window.location.hash);\n    };\n\n    window.addEventListener('hashchange', onHashChange, false);\n    return () => {\n      window.removeEventListener('hashchange', onHashChange, false);\n    };\n  }, []);\n  return hash;\n};\nexport const useIsBetaUI = () => {\n  const hash = useLocationHash();\n  const isBeta = hash.includes('beta');\n  return isBeta;\n};","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/hooks/useLocation.ts"],"names":["useEffect","useState","useLocationHash","hash","setHash","window","location","onHashChange","addEventListener","removeEventListener","useIsBetaUI","isBeta","includes"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACnC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAACI,MAAM,CAACC,QAAP,CAAgBH,IAAjB,CAAhC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,YAAY,GAAG,MAAM;AACzBH,MAAAA,OAAO,CAACC,MAAM,CAACC,QAAP,CAAgBH,IAAjB,CAAP;AACD,KAFD;;AAIAE,IAAAA,MAAM,CAACG,gBAAP,CAAwB,YAAxB,EAAsCD,YAAtC,EAAoD,KAApD;AACA,WAAO,MAAM;AACXF,MAAAA,MAAM,CAACI,mBAAP,CAA2B,YAA3B,EAAyCF,YAAzC,EAAuD,KAAvD;AACD,KAFD;AAGD,GATQ,EASN,EATM,CAAT;AAWA,SAAOJ,IAAP;AACD,CAfM;AAiBP,OAAO,MAAMO,WAAW,GAAG,MAAM;AAC/B,QAAMP,IAAI,GAAGD,eAAe,EAA5B;AACA,QAAMS,MAAM,GAAGR,IAAI,CAACS,QAAL,CAAc,MAAd,CAAf;AACA,SAAOD,MAAP;AACD,CAJM","sourcesContent":["import { useEffect, useState } from 'react'\n\nexport const useLocationHash = () => {\n  const [hash, setHash] = useState(window.location.hash)\n\n  useEffect(() => {\n    const onHashChange = () => {\n      setHash(window.location.hash)\n    }\n\n    window.addEventListener('hashchange', onHashChange, false)\n    return () => {\n      window.removeEventListener('hashchange', onHashChange, false)\n    }\n  }, [])\n\n  return hash\n}\n\nexport const useIsBetaUI = () => {\n  const hash = useLocationHash()\n  const isBeta = hash.includes('beta')\n  return isBeta\n}\n"]},"metadata":{},"sourceType":"module"}