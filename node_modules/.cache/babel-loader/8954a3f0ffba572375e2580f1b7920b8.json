{"ast":null,"code":"import { WAVAX } from '@pangolindex/sdk';\nimport IPangolinPair from '@pangolindex/exchange-contracts/artifacts/contracts/pangolin-core/interfaces/IPangolinPair.sol/IPangolinPair.json';\nimport StakingRewards from '@pangolindex/governance/artifacts/contracts/StakingRewards.sol/StakingRewards.json';\nimport Airdrop from '@pangolindex/governance/artifacts/contracts/Airdrop.sol/Airdrop.json';\nimport GovernorAlpha from '@pangolindex/governance/artifacts/contracts/GovernorAlpha.sol/GovernorAlpha.json';\nimport Png from '@pangolindex/governance/artifacts/contracts/PNG.sol/Png.json';\nimport PangolinBridgeMigrationRouter from '@pangolindex/exchange-contracts/artifacts/contracts/pangolin-periphery/PangolinBridgeMigrationRouter.sol/PangolinBridgeMigrationRouter.json';\nimport MiniChefV2 from '@pangolindex/governance/artifacts/contracts/MiniChefV2.sol/MiniChefV2.json';\nimport { useMemo } from 'react';\nimport ENS_PUBLIC_RESOLVER_ABI from '../constants/abis/ens-public-resolver.json';\nimport { ERC20_BYTES32_ABI } from '../constants/abis/erc20';\nimport ERC20_ABI from '../constants/abis/erc20.json';\nimport BRIDGE_TOKEN_ABI from '../constants/abis/bridge-token.json';\nimport { MIGRATOR_ABI, MIGRATOR_ADDRESS } from '../constants/abis/migrator';\nimport WETH_ABI from '../constants/abis/weth.json';\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../constants/multicall';\nimport { V1_EXCHANGE_ABI, V1_FACTORY_ABI, V1_FACTORY_ADDRESSES } from '../constants/v1';\nimport { getContract } from '../utils';\nimport { useActiveWeb3React } from './index';\nimport { AIRDROP_ADDRESS, BRIDGE_MIGRATOR_ADDRESS, MINICHEF_ADDRESS, ZERO_ADDRESS } from '../constants';\nimport { GOVERNANCE_ADDRESS } from '../constants';\nimport { PNG } from '../constants/tokens';\nimport { REWARDER_VIA_MULTIPLIER_INTERFACE } from '../constants/abis/rewarderViaMultiplier';\nimport { useChainId } from 'src/hooks'; // returns null on errors\n\nfunction useContract(address, ABI) {\n  let withSignerIfPossible = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  const {\n    library,\n    account\n  } = useActiveWeb3React();\n  return useMemo(() => {\n    if (!address || address === ZERO_ADDRESS || !ABI || !library) return null;\n\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined);\n    } catch (error) {\n      console.error('Failed to get contract', error);\n      return null;\n    }\n  }, [address, ABI, library, withSignerIfPossible, account]);\n}\n\nexport function useV1FactoryContract() {\n  const chainId = useChainId();\n  return useContract(chainId && V1_FACTORY_ADDRESSES[chainId], V1_FACTORY_ABI, false);\n}\nexport function useV2MigratorContract() {\n  return useContract(MIGRATOR_ADDRESS, MIGRATOR_ABI, true);\n}\nexport function useMiniChefContract() {\n  const chainId = useChainId();\n  return useContract(MINICHEF_ADDRESS[chainId], MiniChefV2.abi, true);\n}\nexport function useBridgeMigratorContract() {\n  return useContract(BRIDGE_MIGRATOR_ADDRESS, PangolinBridgeMigrationRouter.abi, true);\n}\nexport function useV1ExchangeContract(address, withSignerIfPossible) {\n  return useContract(address, V1_EXCHANGE_ABI, withSignerIfPossible);\n}\nexport function useTokenContract(tokenAddress, withSignerIfPossible) {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible);\n}\nexport function useBridgeTokenContract(tokenAddress, withSignerIfPossible) {\n  return useContract(tokenAddress, BRIDGE_TOKEN_ABI, withSignerIfPossible);\n}\nexport function useWETHContract(withSignerIfPossible) {\n  var _WAVAX$chainId;\n\n  const chainId = useChainId();\n  return useContract(chainId ? (_WAVAX$chainId = WAVAX[chainId]) === null || _WAVAX$chainId === void 0 ? void 0 : _WAVAX$chainId.address : undefined, WETH_ABI, withSignerIfPossible);\n}\nexport function useENSResolverContract(address, withSignerIfPossible) {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible);\n}\nexport function useBytes32TokenContract(tokenAddress, withSignerIfPossible) {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible);\n}\nexport function usePairContract(pairAddress, withSignerIfPossible) {\n  return useContract(pairAddress, IPangolinPair.abi, withSignerIfPossible);\n}\nexport function useMulticallContract() {\n  const chainId = useChainId();\n  return useContract(MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false);\n}\nexport function useGovernanceContract() {\n  return useContract(GOVERNANCE_ADDRESS, GovernorAlpha.abi, true);\n}\nexport function usePngContract() {\n  const chainId = useChainId();\n  return useContract(chainId ? PNG[chainId].address : undefined, Png.abi, true);\n}\nexport function useStakingContract(stakingAddress, withSignerIfPossible) {\n  const chainId = useChainId();\n  return useContract(stakingAddress, stakingAddress === MINICHEF_ADDRESS[chainId] ? MiniChefV2.abi : StakingRewards.abi, withSignerIfPossible);\n}\nexport function useRewardViaMultiplierContract(address, withSignerIfPossible) {\n  return useContract(address, REWARDER_VIA_MULTIPLIER_INTERFACE, withSignerIfPossible);\n}\nexport function useAirdropContract() {\n  const chainId = useChainId();\n  return useContract(chainId ? AIRDROP_ADDRESS[chainId] : undefined, Airdrop.abi, true);\n}","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/hooks/useContract.ts"],"names":["WAVAX","IPangolinPair","StakingRewards","Airdrop","GovernorAlpha","Png","PangolinBridgeMigrationRouter","MiniChefV2","useMemo","ENS_PUBLIC_RESOLVER_ABI","ERC20_BYTES32_ABI","ERC20_ABI","BRIDGE_TOKEN_ABI","MIGRATOR_ABI","MIGRATOR_ADDRESS","WETH_ABI","MULTICALL_ABI","MULTICALL_NETWORKS","V1_EXCHANGE_ABI","V1_FACTORY_ABI","V1_FACTORY_ADDRESSES","getContract","useActiveWeb3React","AIRDROP_ADDRESS","BRIDGE_MIGRATOR_ADDRESS","MINICHEF_ADDRESS","ZERO_ADDRESS","GOVERNANCE_ADDRESS","PNG","REWARDER_VIA_MULTIPLIER_INTERFACE","useChainId","useContract","address","ABI","withSignerIfPossible","library","account","undefined","error","console","useV1FactoryContract","chainId","useV2MigratorContract","useMiniChefContract","abi","useBridgeMigratorContract","useV1ExchangeContract","useTokenContract","tokenAddress","useBridgeTokenContract","useWETHContract","useENSResolverContract","useBytes32TokenContract","usePairContract","pairAddress","useMulticallContract","useGovernanceContract","usePngContract","useStakingContract","stakingAddress","useRewardViaMultiplierContract","useAirdropContract"],"mappings":"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","sourcesContent":["import { Contract } from '@ethersproject/contracts'\nimport { WAVAX } from '@pangolindex/sdk'\nimport IPangolinPair from '@pangolindex/exchange-contracts/artifacts/contracts/pangolin-core/interfaces/IPangolinPair.sol/IPangolinPair.json'\nimport StakingRewards from '@pangolindex/governance/artifacts/contracts/StakingRewards.sol/StakingRewards.json'\nimport Airdrop from '@pangolindex/governance/artifacts/contracts/Airdrop.sol/Airdrop.json'\nimport GovernorAlpha from '@pangolindex/governance/artifacts/contracts/GovernorAlpha.sol/GovernorAlpha.json'\nimport Png from '@pangolindex/governance/artifacts/contracts/PNG.sol/Png.json'\nimport PangolinBridgeMigrationRouter from '@pangolindex/exchange-contracts/artifacts/contracts/pangolin-periphery/PangolinBridgeMigrationRouter.sol/PangolinBridgeMigrationRouter.json'\nimport MiniChefV2 from '@pangolindex/governance/artifacts/contracts/MiniChefV2.sol/MiniChefV2.json'\nimport { useMemo } from 'react'\nimport ENS_PUBLIC_RESOLVER_ABI from '../constants/abis/ens-public-resolver.json'\nimport { ERC20_BYTES32_ABI } from '../constants/abis/erc20'\nimport ERC20_ABI from '../constants/abis/erc20.json'\nimport BRIDGE_TOKEN_ABI from '../constants/abis/bridge-token.json'\nimport { MIGRATOR_ABI, MIGRATOR_ADDRESS } from '../constants/abis/migrator'\nimport WETH_ABI from '../constants/abis/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../constants/multicall'\nimport { V1_EXCHANGE_ABI, V1_FACTORY_ABI, V1_FACTORY_ADDRESSES } from '../constants/v1'\nimport { getContract } from '../utils'\nimport { useActiveWeb3React } from './index'\nimport { AIRDROP_ADDRESS, BRIDGE_MIGRATOR_ADDRESS, MINICHEF_ADDRESS, ZERO_ADDRESS } from '../constants'\nimport { GOVERNANCE_ADDRESS } from '../constants'\nimport { PNG } from '../constants/tokens'\nimport { REWARDER_VIA_MULTIPLIER_INTERFACE } from '../constants/abis/rewarderViaMultiplier'\nimport { useChainId } from 'src/hooks'\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || address === ZERO_ADDRESS || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useV1FactoryContract(): Contract | null {\n  const chainId = useChainId()\n  return useContract(chainId && V1_FACTORY_ADDRESSES[chainId], V1_FACTORY_ABI, false)\n}\n\nexport function useV2MigratorContract(): Contract | null {\n  return useContract(MIGRATOR_ADDRESS, MIGRATOR_ABI, true)\n}\n\nexport function useMiniChefContract(): Contract | null {\n  const chainId = useChainId()\n  return useContract(MINICHEF_ADDRESS[chainId], MiniChefV2.abi, true)\n}\n\nexport function useBridgeMigratorContract(): Contract | null {\n  return useContract(BRIDGE_MIGRATOR_ADDRESS, PangolinBridgeMigrationRouter.abi, true)\n}\n\nexport function useV1ExchangeContract(address?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, V1_EXCHANGE_ABI, withSignerIfPossible)\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useBridgeTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, BRIDGE_TOKEN_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const chainId = useChainId()\n  return useContract(chainId ? WAVAX[chainId]?.address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IPangolinPair.abi, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const chainId = useChainId()\n  return useContract(MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n\nexport function useGovernanceContract(): Contract | null {\n  return useContract(GOVERNANCE_ADDRESS, GovernorAlpha.abi, true)\n}\n\nexport function usePngContract(): Contract | null {\n  const chainId = useChainId()\n  return useContract(chainId ? PNG[chainId].address : undefined, Png.abi, true)\n}\n\nexport function useStakingContract(stakingAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  const chainId = useChainId()\n  return useContract(\n    stakingAddress,\n    stakingAddress === MINICHEF_ADDRESS[chainId] ? MiniChefV2.abi : StakingRewards.abi,\n    withSignerIfPossible\n  )\n}\n\nexport function useRewardViaMultiplierContract(address?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, REWARDER_VIA_MULTIPLIER_INTERFACE, withSignerIfPossible)\n}\n\nexport function useAirdropContract(): Contract | null {\n  const chainId = useChainId()\n  return useContract(chainId ? AIRDROP_ADDRESS[chainId] : undefined, Airdrop.abi, true)\n}\n"]},"metadata":{},"sourceType":"module"}