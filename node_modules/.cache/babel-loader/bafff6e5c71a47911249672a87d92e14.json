{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/CurrencyLogo/index.tsx\";\nimport { CAVAX, Token, ChainId } from '@pangolindex/sdk';\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport AvaxLogo from '../../assets/images/avalanche_token_round.png';\nimport WgmLogo from '../../assets/images/wgmlogo.png';\nimport useHttpLocations from '../../hooks/useHttpLocations';\nimport { WrappedTokenInfo } from '../../state/lists/hooks';\nimport Logo from '../Logo';\nimport { getTokenLogoURL } from '../../constants';\nexport const StyledEthereumLogo = styled.img`\n  width: ${_ref => {\n  let {\n    size\n  } = _ref;\n  return size;\n}};\n  height: ${_ref2 => {\n  let {\n    size\n  } = _ref2;\n  return size;\n}};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n  border-radius: 24px;\n`;\nconst StyledLogo = styled(Logo)`\n  width: ${_ref3 => {\n  let {\n    size\n  } = _ref3;\n  return size;\n}};\n  height: ${_ref4 => {\n  let {\n    size\n  } = _ref4;\n  return size;\n}};\n  border-radius: ${_ref5 => {\n  let {\n    size\n  } = _ref5;\n  return size;\n}};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n`;\nexport default function CurrencyLogo(_ref6) {\n  var _currency$symbol;\n\n  let {\n    chainId,\n    currency,\n    size = 24,\n    style,\n    imageSize = size\n  } = _ref6;\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined);\n  const srcs = useMemo(() => {\n    if (chainId && currency === CAVAX[chainId]) return [];\n\n    if (currency instanceof Token) {\n      const primarySrc = getTokenLogoURL(currency.address, imageSize);\n      return [primarySrc, ...uriLocations];\n    }\n\n    return [];\n  }, [chainId, currency, uriLocations, imageSize]);\n\n  if (chainId && currency === CAVAX[ChainId.AVALANCHE]) {\n    return /*#__PURE__*/React.createElement(StyledEthereumLogo, {\n      src: AvaxLogo,\n      size: `${size}px`,\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }\n    });\n  } else if (chainId && currency === CAVAX[ChainId.FUJI]) {\n    return /*#__PURE__*/React.createElement(StyledEthereumLogo, {\n      src: AvaxLogo,\n      size: `${size}px`,\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 12\n      }\n    });\n  } else if (chainId && currency === CAVAX[ChainId.WAGMI]) {\n    return /*#__PURE__*/React.createElement(StyledEthereumLogo, {\n      src: WgmLogo,\n      size: `${size}px`,\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(StyledLogo, {\n    size: `${size}px`,\n    srcs: srcs,\n    alt: `${(_currency$symbol = currency === null || currency === void 0 ? void 0 : currency.symbol) !== null && _currency$symbol !== void 0 ? _currency$symbol : 'token'} logo`,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }\n  });\n}","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/CurrencyLogo/index.tsx"],"names":["CAVAX","Token","ChainId","React","useMemo","styled","AvaxLogo","WgmLogo","useHttpLocations","WrappedTokenInfo","Logo","getTokenLogoURL","StyledEthereumLogo","img","size","StyledLogo","CurrencyLogo","chainId","currency","style","imageSize","uriLocations","logoURI","undefined","srcs","primarySrc","address","AVALANCHE","FUJI","WAGMI","symbol"],"mappings":"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","sourcesContent":["import { Currency, CAVAX, Token, ChainId } from '@pangolindex/sdk'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\n\nimport AvaxLogo from '../../assets/images/avalanche_token_round.png'\nimport WgmLogo from '../../assets/images/wgmlogo.png'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport Logo from '../Logo'\nimport { getTokenLogoURL, LogoSize } from '../../constants'\n\nexport const StyledEthereumLogo = styled.img<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n  border-radius: 24px;\n`\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  border-radius: ${({ size }) => size};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n`\n\nexport default function CurrencyLogo({\n  chainId,\n  currency,\n  size = 24,\n  style,\n  imageSize = size\n}: {\n  chainId: ChainId\n  currency?: Currency\n  size?: LogoSize\n  style?: React.CSSProperties\n  imageSize?: LogoSize\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (chainId && currency === CAVAX[chainId]) return []\n\n    if (currency instanceof Token) {\n      const primarySrc = getTokenLogoURL(currency.address, imageSize)\n      return [primarySrc, ...uriLocations]\n    }\n\n    return []\n  }, [chainId, currency, uriLocations, imageSize])\n\n  if (chainId && currency === CAVAX[ChainId.AVALANCHE]) {\n    return <StyledEthereumLogo src={AvaxLogo} size={`${size}px`} style={style} />\n  } else if (chainId && currency === CAVAX[ChainId.FUJI]) {\n    return <StyledEthereumLogo src={AvaxLogo} size={`${size}px`} style={style} />\n  } else if (chainId && currency === CAVAX[ChainId.WAGMI]) {\n    return <StyledEthereumLogo src={WgmLogo} size={`${size}px`} style={style} />\n  }\n\n  return <StyledLogo size={`${size}px`} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n"]},"metadata":{},"sourceType":"module"}