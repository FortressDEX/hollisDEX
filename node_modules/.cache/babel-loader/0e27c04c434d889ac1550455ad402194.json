{"ast":null,"code":"import { ChainId, TokenAmount } from '@pangolindex/sdk';\nimport { useTokenContract } from '../hooks/useContract';\nimport { useSingleCallResult } from '../state/multicall/hooks';\nimport { PNG } from '../constants/tokens'; // returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\n\nexport function useTotalSupply(token) {\n  var _useSingleCallResult, _useSingleCallResult$;\n\n  const contract = useTokenContract(token === null || token === void 0 ? void 0 : token.address, false);\n  const totalSupply = (_useSingleCallResult = useSingleCallResult(contract, 'totalSupply')) === null || _useSingleCallResult === void 0 ? void 0 : (_useSingleCallResult$ = _useSingleCallResult.result) === null || _useSingleCallResult$ === void 0 ? void 0 : _useSingleCallResult$[0]; // Special case to handle PNG's proxy burnt total supply\n\n  if (token === null || token === void 0 ? void 0 : token.equals(PNG[ChainId.AVALANCHE])) {\n    return new TokenAmount(token, '230000000000000000000000000');\n  }\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined;\n}","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/data/TotalSupply.ts"],"names":["ChainId","TokenAmount","useTokenContract","useSingleCallResult","PNG","useTotalSupply","token","contract","address","totalSupply","result","equals","AVALANCHE","toString","undefined"],"mappings":"AACA,SAASA,OAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,GAAT,QAAoB,qBAApB,C,CAEA;AACA;;AACA,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAAgE;AAAA;;AACrE,QAAMC,QAAQ,GAAGL,gBAAgB,CAACI,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEE,OAAR,EAAiB,KAAjB,CAAjC;AAEA,QAAMC,WAAsB,2BAAGN,mBAAmB,CAACI,QAAD,EAAW,aAAX,CAAtB,kFAAG,qBAA8CG,MAAjD,0DAAG,sBAAuD,CAAvD,CAA/B,CAHqE,CAKrE;;AACA,MAAIJ,KAAJ,aAAIA,KAAJ,uBAAIA,KAAK,CAAEK,MAAP,CAAcP,GAAG,CAACJ,OAAO,CAACY,SAAT,CAAjB,CAAJ,EAA2C;AACzC,WAAO,IAAIX,WAAJ,CAAgBK,KAAhB,EAAuB,6BAAvB,CAAP;AACD;;AAED,SAAOA,KAAK,IAAIG,WAAT,GAAuB,IAAIR,WAAJ,CAAgBK,KAAhB,EAAuBG,WAAW,CAACI,QAAZ,EAAvB,CAAvB,GAAwEC,SAA/E;AACD","sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { ChainId, Token, TokenAmount } from '@pangolindex/sdk'\nimport { useTokenContract } from '../hooks/useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { PNG } from '../constants/tokens'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nexport function useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  // Special case to handle PNG's proxy burnt total supply\n  if (token?.equals(PNG[ChainId.AVALANCHE])) {\n    return new TokenAmount(token, '230000000000000000000000000')\n  }\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n"]},"metadata":{},"sourceType":"module"}