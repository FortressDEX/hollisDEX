{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Stake/PoolCard/StakeWidget/index.tsx\";\nimport React from 'react';\nimport { ZERO_ADDRESS } from 'src/constants';\nimport { Root, Buttons, MaxButton, StakeWrapper, GridContainer, InputText } from './styled';\nimport { BETA_MENU_LINK } from 'src/constants';\nimport { Box, Button } from '@pangolindex/components';\nimport { ApprovalState } from 'src/hooks/useApproveCallback';\nimport { useDerivedStakingProcess } from 'src/state/stake/hooks';\nimport { useTranslation } from 'react-i18next';\nimport TransactionCompleted from 'src/components/Beta/TransactionCompleted';\nimport Stat from 'src/components/Stat';\nimport Loader from 'src/components/Beta/Loader';\nimport Percentage from 'src/components/Beta/Percentage';\n\nconst StakeWidget = _ref => {\n  let {\n    stakingInfo,\n    onClose\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const {\n    stakeToken,\n    attempting,\n    parsedAmount,\n    hash,\n    userPngUnstaked,\n    stepIndex,\n    dollerWorth,\n    hypotheticalRewardRatePerWeek,\n    signatureData,\n    error,\n    approval,\n    png,\n    onUserInput,\n    onAttemptToApprove,\n    wrappedOnDismiss,\n    handleMax,\n    onStake,\n    onChangePercentage,\n    setStepIndex\n  } = useDerivedStakingProcess(stakingInfo);\n  const isDisabled = !(userPngUnstaked === null || userPngUnstaked === void 0 ? void 0 : userPngUnstaked.greaterThan('0'));\n  return /*#__PURE__*/React.createElement(Root, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, !attempting && !hash && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    value: (parsedAmount === null || parsedAmount === void 0 ? void 0 : parsedAmount.toExact()) || '0',\n    addonAfter: /*#__PURE__*/React.createElement(Box, {\n      display: 'flex',\n      alignItems: 'center',\n      height: '100%',\n      justifyContent: 'center',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(MaxButton, {\n      onClick: () => handleMax(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, \"PNG\")),\n    onChange: value => {\n      onUserInput(value);\n    },\n    label: `Enter PNG`,\n    fontSize: 24,\n    isNumeric: true,\n    placeholder: \"0.00\",\n    disabled: isDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    ml: \"5px\",\n    mt: \"25px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Percentage, {\n    onChangePercentage: value => {\n      setStepIndex(value);\n      onChangePercentage(value * 25);\n    },\n    currentValue: stepIndex,\n    variant: \"box\",\n    isDisabled: isDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(StakeWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Stat, {\n    title: `${t('migratePage.dollarWorth')}`,\n    stat: `${dollerWorth ? `$${dollerWorth === null || dollerWorth === void 0 ? void 0 : dollerWorth.toFixed(4)}` : '-'}`,\n    titlePosition: \"top\",\n    titleFontSize: 14,\n    statFontSize: 18,\n    titleColor: \"text2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Stat, {\n    title: `${t('earn.weeklyRewards')}`,\n    stat: hypotheticalRewardRatePerWeek ? `${hypotheticalRewardRatePerWeek.toSignificant(4)}` : '-',\n    titlePosition: \"top\",\n    titleFontSize: 14,\n    statFontSize: 18,\n    titleColor: \"text2\",\n    currency: stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.rewardToken,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(Buttons, {\n    isStaked: userPngUnstaked === null || userPngUnstaked === void 0 ? void 0 : userPngUnstaked.greaterThan('0'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, (userPngUnstaked === null || userPngUnstaked === void 0 ? void 0 : userPngUnstaked.greaterThan('0')) ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    variant: approval === ApprovalState.APPROVED || signatureData !== null ? 'confirm' : 'primary',\n    isDisabled: approval !== ApprovalState.NOT_APPROVED || signatureData !== null,\n    onClick: onAttemptToApprove,\n    height: \"46px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, t('earn.approve')), /*#__PURE__*/React.createElement(Button, {\n    variant: 'primary',\n    isDisabled: !!error || signatureData === null && approval !== ApprovalState.APPROVED,\n    onClick: onStake,\n    height: \"46px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, error !== null && error !== void 0 ? error : t('earn.deposit'))) : /*#__PURE__*/React.createElement(Button, {\n    padding: \"15px 18px\",\n    variant: \"primary\",\n    as: \"a\",\n    href: `/#${BETA_MENU_LINK.swap}?inputCurrency=${ZERO_ADDRESS}&outputCurrency=${png.address}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, t('header.buy', {\n    symbol: stakeToken\n  })))), attempting && !hash && /*#__PURE__*/React.createElement(Loader, {\n    size: 100,\n    label: 'Staking',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 31\n    }\n  }), hash && /*#__PURE__*/React.createElement(TransactionCompleted, {\n    onClose: () => {\n      wrappedOnDismiss();\n      onClose && onClose();\n    },\n    submitText: 'Staked',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default StakeWidget;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Stake/PoolCard/StakeWidget/index.tsx"],"names":["React","ZERO_ADDRESS","Root","Buttons","MaxButton","StakeWrapper","GridContainer","InputText","BETA_MENU_LINK","Box","Button","ApprovalState","useDerivedStakingProcess","useTranslation","TransactionCompleted","Stat","Loader","Percentage","StakeWidget","stakingInfo","onClose","t","stakeToken","attempting","parsedAmount","hash","userPngUnstaked","stepIndex","dollerWorth","hypotheticalRewardRatePerWeek","signatureData","error","approval","png","onUserInput","onAttemptToApprove","wrappedOnDismiss","handleMax","onStake","onChangePercentage","setStepIndex","isDisabled","greaterThan","toExact","value","toFixed","toSignificant","rewardToken","APPROVED","NOT_APPROVED","swap","address","symbol"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { ZERO_ADDRESS } from 'src/constants'\nimport { Root, Buttons, MaxButton, StakeWrapper, GridContainer, InputText } from './styled'\nimport { BETA_MENU_LINK } from 'src/constants'\nimport { Box, Button } from '@pangolindex/components'\nimport { ApprovalState } from 'src/hooks/useApproveCallback'\nimport { SingleSideStakingInfo, useDerivedStakingProcess } from 'src/state/stake/hooks'\nimport { useTranslation } from 'react-i18next'\nimport TransactionCompleted from 'src/components/Beta/TransactionCompleted'\nimport Stat from 'src/components/Stat'\nimport Loader from 'src/components/Beta/Loader'\nimport Percentage from 'src/components/Beta/Percentage'\n\ntype Props = {\n  stakingInfo: SingleSideStakingInfo\n  onClose?: () => void\n}\n\nconst StakeWidget: React.FC<Props> = ({ stakingInfo, onClose }) => {\n  const { t } = useTranslation()\n\n  const {\n    stakeToken,\n    attempting,\n    parsedAmount,\n    hash,\n    userPngUnstaked,\n    stepIndex,\n    dollerWorth,\n    hypotheticalRewardRatePerWeek,\n    signatureData,\n    error,\n    approval,\n    png,\n    onUserInput,\n    onAttemptToApprove,\n    wrappedOnDismiss,\n    handleMax,\n    onStake,\n    onChangePercentage,\n    setStepIndex\n  } = useDerivedStakingProcess(stakingInfo)\n\n  const isDisabled = !userPngUnstaked?.greaterThan('0')\n\n  return (\n    <Root>\n      {!attempting && !hash && (\n        <>\n          <Box>\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n              <InputText\n                value={parsedAmount?.toExact() || '0'}\n                addonAfter={\n                  <Box display={'flex'} alignItems={'center'} height={'100%'} justifyContent={'center'}>\n                    <MaxButton onClick={() => handleMax()}>PNG</MaxButton>\n                  </Box>\n                }\n                onChange={(value: any) => {\n                  onUserInput(value as any)\n                }}\n                label={`Enter PNG`}\n                fontSize={24}\n                isNumeric={true}\n                placeholder=\"0.00\"\n                disabled={isDisabled}\n              />\n\n              <Box ml=\"5px\" mt=\"25px\">\n                <Percentage\n                  onChangePercentage={value => {\n                    setStepIndex(value)\n                    onChangePercentage(value * 25)\n                  }}\n                  currentValue={stepIndex}\n                  variant=\"box\"\n                  isDisabled={isDisabled}\n                />\n              </Box>\n            </Box>\n\n            <StakeWrapper>\n              <GridContainer>\n                <Box>\n                  <Stat\n                    title={`${t('migratePage.dollarWorth')}`}\n                    stat={`${dollerWorth ? `$${dollerWorth?.toFixed(4)}` : '-'}`}\n                    titlePosition=\"top\"\n                    titleFontSize={14}\n                    statFontSize={18}\n                    titleColor=\"text2\"\n                  />\n                </Box>\n\n                <Box>\n                  <Stat\n                    title={`${t('earn.weeklyRewards')}`}\n                    stat={hypotheticalRewardRatePerWeek ? `${hypotheticalRewardRatePerWeek.toSignificant(4)}` : '-'}\n                    titlePosition=\"top\"\n                    titleFontSize={14}\n                    statFontSize={18}\n                    titleColor=\"text2\"\n                    currency={stakingInfo?.rewardToken}\n                  />\n                </Box>\n              </GridContainer>\n            </StakeWrapper>\n          </Box>\n\n          <Buttons isStaked={userPngUnstaked?.greaterThan('0')}>\n            {/* show staked or get png button */}\n            {userPngUnstaked?.greaterThan('0') ? (\n              <>\n                <Button\n                  variant={approval === ApprovalState.APPROVED || signatureData !== null ? 'confirm' : 'primary'}\n                  isDisabled={approval !== ApprovalState.NOT_APPROVED || signatureData !== null}\n                  onClick={onAttemptToApprove}\n                  height=\"46px\"\n                >\n                  {t('earn.approve')}\n                </Button>\n                <Button\n                  variant={'primary'}\n                  isDisabled={!!error || (signatureData === null && approval !== ApprovalState.APPROVED)}\n                  onClick={onStake}\n                  height=\"46px\"\n                >\n                  {error ?? t('earn.deposit')}\n                </Button>\n              </>\n            ) : (\n              <Button\n                padding=\"15px 18px\"\n                variant=\"primary\"\n                as=\"a\"\n                href={`/#${BETA_MENU_LINK.swap}?inputCurrency=${ZERO_ADDRESS}&outputCurrency=${png.address}`}\n              >\n                {t('header.buy', { symbol: stakeToken })}\n              </Button>\n            )}\n          </Buttons>\n        </>\n      )}\n      {attempting && !hash && <Loader size={100} label={'Staking'} />}\n      {hash && (\n        <TransactionCompleted\n          onClose={() => {\n            wrappedOnDismiss()\n            onClose && onClose()\n          }}\n          submitText={'Staked'}\n        />\n      )}\n    </Root>\n  )\n}\n\nexport default StakeWidget\n"]},"metadata":{},"sourceType":"module"}