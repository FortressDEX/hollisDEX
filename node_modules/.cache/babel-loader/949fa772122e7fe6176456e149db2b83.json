{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/MigrationModal/Stake/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Wrapper } from './styleds';\nimport { Box, Button } from '@pangolindex/components';\nimport { JSBI } from '@pangolindex/sdk';\nimport PoolInfo from '../PoolInfo';\nimport { tryParseAmount } from '../../../state/swap/hooks';\nimport { useActiveWeb3React } from '../../../hooks';\nimport { useTokenBalance } from '../../../state/wallet/hooks';\nimport { RowBetween } from '../../Row';\nimport { useTranslation } from 'react-i18next';\nimport { useTransactionAdder } from '../../../state/transactions/hooks';\nimport { usePairContract, useStakingContract } from '../../../hooks/useContract';\nimport { useApproveCallback, ApprovalState } from '../../../hooks/useApproveCallback';\nimport { MINICHEF_ADDRESS } from '../../../constants';\nimport { useDerivedStakeInfo, useMinichefPools } from '../../../state/stake/hooks';\nimport { splitSignature } from 'ethers/lib/utils';\nimport useTransactionDeadline from '../../../hooks/useTransactionDeadline';\nimport Loader from '../Loader';\nimport { useChainId } from 'src/hooks';\n\nconst Stake = _ref => {\n  var _Object$values, _Object$values$choose, _Object$values2, _Object$values2$choos, _error2;\n\n  let {\n    allChoosePool,\n    allChoosePoolLength,\n    setCompleted,\n    goBack,\n    choosePoolIndex,\n    setChoosePoolIndex,\n    isStakingLoading\n  } = _ref;\n  const {\n    account,\n    library\n  } = useActiveWeb3React();\n  const chainId = useChainId();\n  const {\n    t\n  } = useTranslation(); // state for pending and submitted txn views\n\n  const addTransaction = useTransactionAdder();\n  const [attempting, setAttempting] = useState(false);\n  const [isValidAmount, setIsValidAmount] = useState(false);\n  const pair = (_Object$values = Object.values(allChoosePool)) === null || _Object$values === void 0 ? void 0 : (_Object$values$choose = _Object$values[choosePoolIndex]) === null || _Object$values$choose === void 0 ? void 0 : _Object$values$choose.pair;\n  const stakingInfo = (_Object$values2 = Object.values(allChoosePool)) === null || _Object$values2 === void 0 ? void 0 : (_Object$values2$choos = _Object$values2[choosePoolIndex]) === null || _Object$values2$choos === void 0 ? void 0 : _Object$values2$choos.staking;\n  const userLiquidityUnstaked = useTokenBalance(account !== null && account !== void 0 ? account : undefined, pair.liquidityToken);\n  const [stakingAmount, setStakingAmount] = useState('');\n  const {\n    parsedAmount\n  } = useDerivedStakeInfo(stakingAmount, stakingInfo.stakedAmount.token, userLiquidityUnstaked);\n  const [stepIndex, setStepIndex] = useState(4); // approval data for stake\n\n  const deadline = useTransactionDeadline();\n  const [approval, approveCallback] = useApproveCallback(chainId, parsedAmount, MINICHEF_ADDRESS[chainId]);\n  const [signatureData, setSignatureData] = useState(null);\n\n  const onChangeAmount = value => {\n    if (value === userLiquidityUnstaked.toExact()) {\n      setStepIndex(4);\n    } else {\n      setStepIndex(0);\n    }\n\n    setStakingAmount(value);\n    setSignatureData(null);\n  };\n\n  const onChangeDot = value => {\n    setStepIndex(value);\n\n    if (value === 4) {\n      setStakingAmount(userLiquidityUnstaked.toExact());\n    } else {\n      const newAmount = userLiquidityUnstaked.multiply(JSBI.BigInt(value * 25)).divide(JSBI.BigInt(100));\n      setStakingAmount(newAmount.toSignificant(6));\n    }\n  };\n\n  const onMax = () => {\n    setStepIndex(4);\n    setStakingAmount(userLiquidityUnstaked.toExact());\n  };\n\n  useEffect(() => {\n    setStakingAmount(userLiquidityUnstaked.toExact());\n    setStepIndex(4);\n    setAttempting(false); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [choosePoolIndex, userLiquidityUnstaked.toFixed()]);\n  useEffect(() => {\n    var _stakingInfo$stakedAm;\n\n    const stakingToken = stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm === void 0 ? void 0 : _stakingInfo$stakedAm.token;\n    const parsedInput = tryParseAmount(chainId, stakingAmount, stakingToken);\n\n    if (parsedInput && (stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.stakedAmount) && JSBI.lessThanOrEqual(parsedInput.raw, userLiquidityUnstaked.raw) && JSBI.greaterThan(parsedInput.raw, JSBI.BigInt(0))) {\n      setIsValidAmount(true);\n    } else {\n      setIsValidAmount(false);\n    }\n\n    setSignatureData(null); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [stakingAmount]);\n  const stakingContract = useStakingContract(MINICHEF_ADDRESS[chainId]);\n  const poolMap = useMinichefPools();\n  const pairContract = usePairContract(stakingInfo.stakedAmount.token.address);\n\n  async function onStake() {\n    var _stakingInfo$stakedAm2;\n\n    const stakingToken = stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm2 = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm2 === void 0 ? void 0 : _stakingInfo$stakedAm2.token;\n    const parsedInput = tryParseAmount(chainId, stakingAmount, stakingToken);\n\n    if (stakingContract && parsedInput && userLiquidityUnstaked && JSBI.lessThanOrEqual(parsedInput.raw, userLiquidityUnstaked.raw)) {\n      let method, args;\n\n      if (approval === ApprovalState.APPROVED) {\n        var _pair$liquidityToken;\n\n        method = 'deposit';\n        args = [poolMap[pair === null || pair === void 0 ? void 0 : (_pair$liquidityToken = pair.liquidityToken) === null || _pair$liquidityToken === void 0 ? void 0 : _pair$liquidityToken.address], `0x${parsedAmount === null || parsedAmount === void 0 ? void 0 : parsedAmount.raw.toString(16)}`, account];\n      } else if (signatureData) {\n        var _pair$liquidityToken2;\n\n        method = 'depositWithPermit';\n        args = [poolMap[pair === null || pair === void 0 ? void 0 : (_pair$liquidityToken2 = pair.liquidityToken) === null || _pair$liquidityToken2 === void 0 ? void 0 : _pair$liquidityToken2.address], `0x${parsedAmount === null || parsedAmount === void 0 ? void 0 : parsedAmount.raw.toString(16)}`, account, signatureData.deadline, signatureData.v, signatureData.r, signatureData.s];\n      } else {\n        setAttempting(false);\n        throw new Error(t('earn.attemptingToStakeError'));\n      }\n\n      setAttempting(true);\n      await stakingContract[method](...args).then(response => {\n        addTransaction(response, {\n          summary: t('earn.depositLiquidity')\n        });\n        afterStake();\n      }).catch(error => console.error(error)).finally(() => setAttempting(false));\n    }\n  }\n\n  async function onAttemptToApprove() {\n    if (!stakingContract || !pairContract || !library || !deadline) throw new Error(t('earn.missingDependencies'));\n    if (!parsedAmount) throw new Error(t('earn.missingLiquidityAmount')); // try to gather a signature for permission\n\n    const nonce = await pairContract.nonces(account);\n    const EIP712Domain = [{\n      name: 'name',\n      type: 'string'\n    }, {\n      name: 'version',\n      type: 'string'\n    }, {\n      name: 'chainId',\n      type: 'uint256'\n    }, {\n      name: 'verifyingContract',\n      type: 'address'\n    }];\n    const domain = {\n      name: 'Pangolin Liquidity',\n      version: '1',\n      chainId: chainId,\n      verifyingContract: pairContract.address\n    };\n    const Permit = [{\n      name: 'owner',\n      type: 'address'\n    }, {\n      name: 'spender',\n      type: 'address'\n    }, {\n      name: 'value',\n      type: 'uint256'\n    }, {\n      name: 'nonce',\n      type: 'uint256'\n    }, {\n      name: 'deadline',\n      type: 'uint256'\n    }];\n    const message = {\n      owner: account,\n      spender: stakingContract.address,\n      value: parsedAmount.raw.toString(),\n      nonce: nonce.toHexString(),\n      deadline: deadline.toNumber()\n    };\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain,\n        Permit\n      },\n      domain,\n      primaryType: 'Permit',\n      message\n    });\n    library.send('eth_signTypedData_v4', [account, data]).then(splitSignature).then(signature => {\n      setSignatureData({\n        v: signature.v,\n        r: signature.r,\n        s: signature.s,\n        deadline: deadline.toNumber()\n      });\n    }).catch(error => {\n      // for all errors other than 4001 (EIP-1193 user rejected request), fall back to manual approve\n      if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n        approveCallback();\n      }\n    });\n  }\n\n  const afterStake = () => {\n    if (choosePoolIndex === allChoosePoolLength - 1) {\n      setCompleted();\n    } else {\n      const newIndex = choosePoolIndex + 1;\n      setChoosePoolIndex(newIndex);\n      goBack();\n    }\n  };\n\n  let error;\n\n  if (!account) {\n    error = t('earn.connectWallet');\n  }\n\n  if (!userLiquidityUnstaked) {\n    var _error;\n\n    error = (_error = error) !== null && _error !== void 0 ? _error : t('earn.enterAmount');\n  }\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 5\n    }\n  }, isStakingLoading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PoolInfo, {\n    pair: pair,\n    type: \"stake\",\n    stakingInfo: stakingInfo,\n    stepIndex: stepIndex,\n    onChangeDot: onChangeDot,\n    amount: stakingAmount,\n    onChangeAmount: onChangeAmount,\n    userPoolBalance: userLiquidityUnstaked,\n    onMax: onMax,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mr: \"5px\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: approval === ApprovalState.APPROVED || signatureData !== null ? 'confirm' : 'primary',\n    onClick: onAttemptToApprove,\n    isDisabled: attempting || approval !== ApprovalState.NOT_APPROVED || signatureData !== null || !isValidAmount,\n    loading: attempting,\n    loadingText: t('migratePage.loading'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 17\n    }\n  }, t('earn.approve'))), /*#__PURE__*/React.createElement(Box, {\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    isDisabled: attempting || !!error || signatureData === null && approval !== ApprovalState.APPROVED || !isValidAmount,\n    onClick: onStake,\n    loading: attempting,\n    loadingText: t('migratePage.loading'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 17\n    }\n  }, (_error2 = error) !== null && _error2 !== void 0 ? _error2 : t('earn.deposit')))))));\n};\n\nexport default Stake;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/MigrationModal/Stake/index.tsx"],"names":["React","useState","useEffect","Wrapper","Box","Button","JSBI","PoolInfo","tryParseAmount","useActiveWeb3React","useTokenBalance","RowBetween","useTranslation","useTransactionAdder","usePairContract","useStakingContract","useApproveCallback","ApprovalState","MINICHEF_ADDRESS","useDerivedStakeInfo","useMinichefPools","splitSignature","useTransactionDeadline","Loader","useChainId","Stake","allChoosePool","allChoosePoolLength","setCompleted","goBack","choosePoolIndex","setChoosePoolIndex","isStakingLoading","account","library","chainId","t","addTransaction","attempting","setAttempting","isValidAmount","setIsValidAmount","pair","Object","values","stakingInfo","staking","userLiquidityUnstaked","undefined","liquidityToken","stakingAmount","setStakingAmount","parsedAmount","stakedAmount","token","stepIndex","setStepIndex","deadline","approval","approveCallback","signatureData","setSignatureData","onChangeAmount","value","toExact","onChangeDot","newAmount","multiply","BigInt","divide","toSignificant","onMax","toFixed","stakingToken","parsedInput","lessThanOrEqual","raw","greaterThan","stakingContract","poolMap","pairContract","address","onStake","method","args","APPROVED","toString","v","r","s","Error","then","response","summary","afterStake","catch","error","console","finally","onAttemptToApprove","nonce","nonces","EIP712Domain","name","type","domain","version","verifyingContract","Permit","message","owner","spender","toHexString","toNumber","data","JSON","stringify","types","primaryType","send","signature","code","newIndex","NOT_APPROVED"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Wrapper } from './styleds'\nimport { Box, Button } from '@pangolindex/components'\nimport { Pair, JSBI, TokenAmount } from '@pangolindex/sdk'\nimport PoolInfo from '../PoolInfo'\nimport { StakingInfo } from '../../../state/stake/hooks'\nimport { tryParseAmount } from '../../../state/swap/hooks'\nimport { useActiveWeb3React } from '../../../hooks'\nimport { useTokenBalance } from '../../../state/wallet/hooks'\nimport { RowBetween } from '../../Row'\nimport { useTranslation } from 'react-i18next'\nimport { useTransactionAdder } from '../../../state/transactions/hooks'\nimport { usePairContract, useStakingContract } from '../../../hooks/useContract'\nimport { useApproveCallback, ApprovalState } from '../../../hooks/useApproveCallback'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { MINICHEF_ADDRESS } from '../../../constants'\nimport { useDerivedStakeInfo, useMinichefPools } from '../../../state/stake/hooks'\nimport { splitSignature } from 'ethers/lib/utils'\nimport useTransactionDeadline from '../../../hooks/useTransactionDeadline'\nimport Loader from '../Loader'\nimport { useChainId } from 'src/hooks'\n\nexport interface StakeProps {\n  allChoosePool: { [address: string]: { pair: Pair; staking: StakingInfo } }\n  allChoosePoolLength: number\n  setCompleted: () => void\n  goBack: () => void\n  choosePoolIndex: number\n  setChoosePoolIndex: (value: number) => void\n  isStakingLoading: boolean\n}\n\nconst Stake = ({\n  allChoosePool,\n  allChoosePoolLength,\n  setCompleted,\n  goBack,\n  choosePoolIndex,\n  setChoosePoolIndex,\n  isStakingLoading\n}: StakeProps) => {\n  const { account, library } = useActiveWeb3React()\n  const chainId = useChainId()\n\n  const { t } = useTranslation()\n\n  // state for pending and submitted txn views\n  const addTransaction = useTransactionAdder()\n  const [attempting, setAttempting] = useState<boolean>(false)\n  const [isValidAmount, setIsValidAmount] = useState(false as boolean)\n\n  const pair = Object.values(allChoosePool)?.[choosePoolIndex]?.pair\n  const stakingInfo = Object.values(allChoosePool)?.[choosePoolIndex]?.staking\n\n  const userLiquidityUnstaked = useTokenBalance(account ?? undefined, pair.liquidityToken) as TokenAmount\n  const [stakingAmount, setStakingAmount] = useState('')\n\n  const { parsedAmount } = useDerivedStakeInfo(stakingAmount, stakingInfo.stakedAmount.token, userLiquidityUnstaked)\n\n  const [stepIndex, setStepIndex] = useState(4)\n  // approval data for stake\n  const deadline = useTransactionDeadline()\n  const [approval, approveCallback] = useApproveCallback(chainId, parsedAmount, MINICHEF_ADDRESS[chainId])\n  const [signatureData, setSignatureData] = useState<{ v: number; r: string; s: string; deadline: number } | null>(null)\n\n  const onChangeAmount = (value: string) => {\n    if (value === userLiquidityUnstaked.toExact()) {\n      setStepIndex(4)\n    } else {\n      setStepIndex(0)\n    }\n    setStakingAmount(value)\n    setSignatureData(null)\n  }\n\n  const onChangeDot = (value: number) => {\n    setStepIndex(value)\n    if (value === 4) {\n      setStakingAmount(userLiquidityUnstaked.toExact())\n    } else {\n      const newAmount = (userLiquidityUnstaked as TokenAmount)\n        .multiply(JSBI.BigInt(value * 25))\n        .divide(JSBI.BigInt(100)) as TokenAmount\n      setStakingAmount(newAmount.toSignificant(6))\n    }\n  }\n\n  const onMax = () => {\n    setStepIndex(4)\n    setStakingAmount(userLiquidityUnstaked.toExact())\n  }\n\n  useEffect(() => {\n    setStakingAmount(userLiquidityUnstaked.toExact())\n    setStepIndex(4)\n    setAttempting(false)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [choosePoolIndex, userLiquidityUnstaked.toFixed()])\n\n  useEffect(() => {\n    const stakingToken = stakingInfo?.stakedAmount?.token\n    const parsedInput = tryParseAmount(chainId, stakingAmount, stakingToken) as TokenAmount\n\n    if (\n      parsedInput &&\n      stakingInfo?.stakedAmount &&\n      JSBI.lessThanOrEqual(parsedInput.raw, userLiquidityUnstaked.raw) &&\n      JSBI.greaterThan(parsedInput.raw, JSBI.BigInt(0))\n    ) {\n      setIsValidAmount(true)\n    } else {\n      setIsValidAmount(false)\n    }\n\n    setSignatureData(null)\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [stakingAmount])\n\n  const stakingContract = useStakingContract(MINICHEF_ADDRESS[chainId])\n  const poolMap = useMinichefPools()\n\n  const pairContract = usePairContract(stakingInfo.stakedAmount.token.address)\n\n  async function onStake() {\n    const stakingToken = stakingInfo?.stakedAmount?.token\n    const parsedInput = tryParseAmount(chainId, stakingAmount, stakingToken) as TokenAmount\n\n    if (\n      stakingContract &&\n      parsedInput &&\n      userLiquidityUnstaked &&\n      JSBI.lessThanOrEqual(parsedInput.raw, userLiquidityUnstaked.raw)\n    ) {\n      let method, args\n\n      if (approval === ApprovalState.APPROVED) {\n        method = 'deposit'\n        args = [poolMap[pair?.liquidityToken?.address], `0x${parsedAmount?.raw.toString(16)}`, account]\n      } else if (signatureData) {\n        method = 'depositWithPermit'\n        args = [\n          poolMap[pair?.liquidityToken?.address],\n          `0x${parsedAmount?.raw.toString(16)}`,\n          account,\n          signatureData.deadline,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s\n        ]\n      } else {\n        setAttempting(false)\n        throw new Error(t('earn.attemptingToStakeError'))\n      }\n\n      setAttempting(true)\n\n      await stakingContract[method](...args)\n        .then((response: TransactionResponse) => {\n          addTransaction(response, {\n            summary: t('earn.depositLiquidity')\n          })\n          afterStake()\n        })\n        .catch((error: any) => console.error(error))\n        .finally(() => setAttempting(false))\n    }\n  }\n\n  async function onAttemptToApprove() {\n    if (!stakingContract || !pairContract || !library || !deadline) throw new Error(t('earn.missingDependencies'))\n\n    if (!parsedAmount) throw new Error(t('earn.missingLiquidityAmount'))\n\n    // try to gather a signature for permission\n    const nonce = await pairContract.nonces(account)\n\n    const EIP712Domain = [\n      { name: 'name', type: 'string' },\n      { name: 'version', type: 'string' },\n      { name: 'chainId', type: 'uint256' },\n      { name: 'verifyingContract', type: 'address' }\n    ]\n    const domain = {\n      name: 'Pangolin Liquidity',\n      version: '1',\n      chainId: chainId,\n      verifyingContract: pairContract.address\n    }\n    const Permit = [\n      { name: 'owner', type: 'address' },\n      { name: 'spender', type: 'address' },\n      { name: 'value', type: 'uint256' },\n      { name: 'nonce', type: 'uint256' },\n      { name: 'deadline', type: 'uint256' }\n    ]\n    const message = {\n      owner: account,\n      spender: stakingContract.address,\n      value: parsedAmount.raw.toString(),\n      nonce: nonce.toHexString(),\n      deadline: deadline.toNumber()\n    }\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain,\n        Permit\n      },\n      domain,\n      primaryType: 'Permit',\n      message\n    })\n\n    library\n      .send('eth_signTypedData_v4', [account, data])\n      .then(splitSignature)\n      .then(signature => {\n        setSignatureData({\n          v: signature.v,\n          r: signature.r,\n          s: signature.s,\n          deadline: deadline.toNumber()\n        })\n      })\n      .catch(error => {\n        // for all errors other than 4001 (EIP-1193 user rejected request), fall back to manual approve\n        if (error?.code !== 4001) {\n          approveCallback()\n        }\n      })\n  }\n\n  const afterStake = () => {\n    if (choosePoolIndex === allChoosePoolLength - 1) {\n      setCompleted()\n    } else {\n      const newIndex = choosePoolIndex + 1\n      setChoosePoolIndex(newIndex)\n      goBack()\n    }\n  }\n\n  let error: string | undefined\n  if (!account) {\n    error = t('earn.connectWallet')\n  }\n  if (!userLiquidityUnstaked) {\n    error = error ?? t('earn.enterAmount')\n  }\n\n  return (\n    <Wrapper>\n      {isStakingLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <PoolInfo\n            pair={pair}\n            type=\"stake\"\n            stakingInfo={stakingInfo}\n            stepIndex={stepIndex}\n            onChangeDot={onChangeDot}\n            amount={stakingAmount}\n            onChangeAmount={onChangeAmount}\n            userPoolBalance={userLiquidityUnstaked}\n            onMax={onMax}\n          />\n\n          <Box mt={10}>\n            <RowBetween>\n              <Box mr=\"5px\" width=\"100%\">\n                <Button\n                  variant={approval === ApprovalState.APPROVED || signatureData !== null ? 'confirm' : 'primary'}\n                  onClick={onAttemptToApprove}\n                  isDisabled={\n                    attempting || approval !== ApprovalState.NOT_APPROVED || signatureData !== null || !isValidAmount\n                  }\n                  loading={attempting}\n                  loadingText={t('migratePage.loading')}\n                >\n                  {t('earn.approve')}\n                </Button>\n              </Box>\n              <Box width=\"100%\">\n                <Button\n                  variant=\"primary\"\n                  isDisabled={\n                    attempting ||\n                    !!error ||\n                    (signatureData === null && approval !== ApprovalState.APPROVED) ||\n                    !isValidAmount\n                  }\n                  onClick={onStake}\n                  loading={attempting}\n                  loadingText={t('migratePage.loading')}\n                >\n                  {error ?? t('earn.deposit')}\n                </Button>\n              </Box>\n            </RowBetween>\n          </Box>\n        </>\n      )}\n    </Wrapper>\n  )\n}\nexport default Stake\n"]},"metadata":{},"sourceType":"module"}