{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/WalletModal/Option.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { ExternalLink } from '../../theme';\nimport { useIsBetaUI } from 'src/hooks/useLocation';\nconst InfoCard = styled.button`\n  background-color: ${_ref => {\n  let {\n    theme,\n    active\n  } = _ref;\n  return active ? theme.bg3 : theme.bg2;\n}};\n  padding: 1rem;\n  outline: none;\n  border: 1px solid;\n  border-radius: 12px;\n  width: 100% !important;\n  &:focus {\n    box-shadow: 0 0 0 1px ${_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.primary1;\n}};\n  }\n  border-color: ${_ref3 => {\n  let {\n    theme,\n    active\n  } = _ref3;\n  return active ? 'transparent' : theme.bg3;\n}};\n`;\nconst OptionCard = styled(InfoCard)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 2rem;\n  padding: 1rem;\n`;\nconst OptionCardLeft = styled.div`\n  ${_ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return theme.flexColumnNoWrap;\n}};\n  justify-content: center;\n  height: 100%;\n`;\nconst OptionCardClickable = styled(OptionCard)`\n  margin-top: 0;\n  &:hover {\n    cursor: ${_ref5 => {\n  let {\n    clickable\n  } = _ref5;\n  return clickable ? 'pointer' : '';\n}};\n    border: ${_ref6 => {\n  let {\n    clickable,\n    theme,\n    isBeta\n  } = _ref6;\n  return clickable ? `1px solid ${isBeta ? theme.primary : theme.primary1}` : ``;\n}};\n  }\n  opacity: ${_ref7 => {\n  let {\n    disabled\n  } = _ref7;\n  return disabled ? '0.5' : '1';\n}};\n`;\nconst GreenCircle = styled.div`\n  ${_ref8 => {\n  let {\n    theme\n  } = _ref8;\n  return theme.flexRowNoWrap;\n}}\n  justify-content: center;\n  align-items: center;\n\n  &:first-child {\n    height: 8px;\n    width: 8px;\n    margin-right: 8px;\n    background-color: ${_ref9 => {\n  let {\n    theme\n  } = _ref9;\n  return theme.green1;\n}};\n    border-radius: 50%;\n  }\n`;\nconst CircleWrapper = styled.div`\n  color: ${_ref10 => {\n  let {\n    theme\n  } = _ref10;\n  return theme.green1;\n}};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst HeaderText = styled.div`\n  ${_ref11 => {\n  let {\n    theme\n  } = _ref11;\n  return theme.flexRowNoWrap;\n}};\n  color: ${props => props.color === 'blue' ? _ref12 => {\n  let {\n    theme\n  } = _ref12;\n  return theme.primary1;\n} : _ref13 => {\n  let {\n    theme\n  } = _ref13;\n  return theme.text1;\n}};\n  font-size: 1rem;\n  font-weight: 500;\n`;\nconst SubHeader = styled.div`\n  color: ${_ref14 => {\n  let {\n    theme\n  } = _ref14;\n  return theme.text1;\n}};\n  margin-top: 10px;\n  font-size: 12px;\n`;\nconst IconWrapper = styled.div`\n  ${_ref15 => {\n  let {\n    theme\n  } = _ref15;\n  return theme.flexColumnNoWrap;\n}};\n  align-items: center;\n  justify-content: center;\n  & > img,\n  span {\n    height: ${_ref16 => {\n  let {\n    size\n  } = _ref16;\n  return size ? size + 'px' : '24px';\n}};\n    width: ${_ref17 => {\n  let {\n    size\n  } = _ref17;\n  return size ? size + 'px' : '24px';\n}};\n  }\n  ${_ref18 => {\n  let {\n    theme\n  } = _ref18;\n  return theme.mediaWidth.upToMedium`\n    align-items: flex-end;\n  `;\n}};\n`;\nexport default function Option(_ref19) {\n  let {\n    link = null,\n    clickable = true,\n    size,\n    onClick = null,\n    color,\n    header,\n    subheader = null,\n    icon,\n    active = false,\n    id\n  } = _ref19;\n  const isBeta = useIsBetaUI();\n  const content = /*#__PURE__*/React.createElement(OptionCardClickable, {\n    id: id,\n    onClick: onClick,\n    clickable: clickable && !active,\n    active: active,\n    isBeta: isBeta,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(OptionCardLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HeaderText, {\n    color: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, active ? /*#__PURE__*/React.createElement(CircleWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GreenCircle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }))) : '', header), subheader && /*#__PURE__*/React.createElement(SubHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 23\n    }\n  }, subheader)), /*#__PURE__*/React.createElement(IconWrapper, {\n    size: size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: icon,\n    alt: 'Icon',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  })));\n\n  if (link) {\n    return /*#__PURE__*/React.createElement(ExternalLink, {\n      href: link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 12\n      }\n    }, content);\n  }\n\n  return content;\n}","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/WalletModal/Option.tsx"],"names":["React","styled","ExternalLink","useIsBetaUI","InfoCard","button","theme","active","bg3","bg2","primary1","OptionCard","OptionCardLeft","div","flexColumnNoWrap","OptionCardClickable","clickable","isBeta","primary","disabled","GreenCircle","flexRowNoWrap","green1","CircleWrapper","HeaderText","props","color","text1","SubHeader","IconWrapper","size","mediaWidth","upToMedium","Option","link","onClick","header","subheader","icon","id","content"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { ExternalLink } from '../../theme'\nimport { useIsBetaUI } from 'src/hooks/useLocation'\n\nconst InfoCard = styled.button<{ active?: boolean }>`\n  background-color: ${({ theme, active }) => (active ? theme.bg3 : theme.bg2)};\n  padding: 1rem;\n  outline: none;\n  border: 1px solid;\n  border-radius: 12px;\n  width: 100% !important;\n  &:focus {\n    box-shadow: 0 0 0 1px ${({ theme }) => theme.primary1};\n  }\n  border-color: ${({ theme, active }) => (active ? 'transparent' : theme.bg3)};\n`\n\nconst OptionCard = styled(InfoCard as any)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 2rem;\n  padding: 1rem;\n`\n\nconst OptionCardLeft = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  justify-content: center;\n  height: 100%;\n`\n\nconst OptionCardClickable = styled(OptionCard as any)<{ clickable?: boolean; isBeta: boolean }>`\n  margin-top: 0;\n  &:hover {\n    cursor: ${({ clickable }) => (clickable ? 'pointer' : '')};\n    border: ${({ clickable, theme, isBeta }) =>\n      clickable ? `1px solid ${isBeta ? theme.primary : theme.primary1}` : ``};\n  }\n  opacity: ${({ disabled }) => (disabled ? '0.5' : '1')};\n`\n\nconst GreenCircle = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  justify-content: center;\n  align-items: center;\n\n  &:first-child {\n    height: 8px;\n    width: 8px;\n    margin-right: 8px;\n    background-color: ${({ theme }) => theme.green1};\n    border-radius: 50%;\n  }\n`\n\nconst CircleWrapper = styled.div`\n  color: ${({ theme }) => theme.green1};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst HeaderText = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  color: ${props => (props.color === 'blue' ? ({ theme }) => theme.primary1 : ({ theme }) => theme.text1)};\n  font-size: 1rem;\n  font-weight: 500;\n`\n\nconst SubHeader = styled.div`\n  color: ${({ theme }) => theme.text1};\n  margin-top: 10px;\n  font-size: 12px;\n`\n\nconst IconWrapper = styled.div<{ size?: number | null }>`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  align-items: center;\n  justify-content: center;\n  & > img,\n  span {\n    height: ${({ size }) => (size ? size + 'px' : '24px')};\n    width: ${({ size }) => (size ? size + 'px' : '24px')};\n  }\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    align-items: flex-end;\n  `};\n`\n\nexport default function Option({\n  link = null,\n  clickable = true,\n  size,\n  onClick = null,\n  color,\n  header,\n  subheader = null,\n  icon,\n  active = false,\n  id\n}: {\n  link?: string | null\n  clickable?: boolean\n  size?: number | null\n  onClick?: null | (() => void)\n  color: string\n  header: React.ReactNode\n  subheader: React.ReactNode | null\n  icon: string\n  active?: boolean\n  id: string\n}) {\n  const isBeta = useIsBetaUI()\n\n  const content = (\n    <OptionCardClickable id={id} onClick={onClick} clickable={clickable && !active} active={active} isBeta={isBeta}>\n      <OptionCardLeft>\n        <HeaderText color={color}>\n          {active ? (\n            <CircleWrapper>\n              <GreenCircle>\n                <div />\n              </GreenCircle>\n            </CircleWrapper>\n          ) : (\n            ''\n          )}\n          {header}\n        </HeaderText>\n        {subheader && <SubHeader>{subheader}</SubHeader>}\n      </OptionCardLeft>\n      <IconWrapper size={size}>\n        <img src={icon} alt={'Icon'} />\n      </IconWrapper>\n    </OptionCardClickable>\n  )\n  if (link) {\n    return <ExternalLink href={link}>{content}</ExternalLink>\n  }\n\n  return content\n}\n"]},"metadata":{},"sourceType":"module"}