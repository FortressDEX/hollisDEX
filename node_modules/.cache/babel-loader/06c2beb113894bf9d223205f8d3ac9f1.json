{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Swap/WatchList/CoinChart.tsx\";\nimport React, { useCallback, useContext, useState } from 'react';\nimport { Text, Box, CurrencyLogo, Button, useSwapActionHandlers } from '@pangolindex/components';\nimport useUSDCPrice from 'src/utils/useUSDCPrice';\nimport { Link } from 'react-feather';\nimport { LineChart, Line, ResponsiveContainer, Tooltip } from 'recharts';\nimport { SelectedCoinInfo, TrackIcons, DurationBtns } from './styleds';\nimport { ANALYTICS_PAGE } from 'src/constants';\nimport { Field } from 'src/state/swap/actions';\nimport { useTokenPriceData } from 'src/state/token/hooks';\nimport { TIMEFRAME } from 'src/constants';\nimport { formattedNum, toNiceDateYear } from 'src/utils/charts';\nimport { useTranslation } from 'react-i18next';\nimport { unwrappedToken } from 'src/utils/wrappedCurrency';\nimport { BETA_MENU_LINK } from 'src/constants';\nimport { useChainId } from 'src/hooks';\nexport const RedirectContext = React.createContext(false);\n\nconst CoinChart = _ref => {\n  let {\n    coin\n  } = _ref;\n  const chainId = useChainId();\n  const {\n    t\n  } = useTranslation();\n  const weekFrame = TIMEFRAME.find(t => t.label === '1W');\n  const [timeWindow, setTimeWindow] = useState(weekFrame || {});\n  const redirect = useContext(RedirectContext);\n  const usdcPrice = useUSDCPrice(coin);\n  const {\n    onCurrencySelection\n  } = useSwapActionHandlers(chainId);\n  const onCurrencySelect = useCallback(currency => {\n    onCurrencySelection(Field.INPUT, currency);\n  }, [onCurrencySelection]);\n  const priceData = useTokenPriceData(((coin === null || coin === void 0 ? void 0 : coin.address) || '').toLowerCase(), timeWindow === null || timeWindow === void 0 ? void 0 : timeWindow.momentIdentifier, timeWindow === null || timeWindow === void 0 ? void 0 : timeWindow.interval, timeWindow === null || timeWindow === void 0 ? void 0 : timeWindow.label) || [];\n  const token = unwrappedToken(coin, chainId);\n  const priceChart = [...priceData]; // add current price in chart\n\n  if (priceChart.length > 0 && usdcPrice) {\n    const timestampnow = Math.floor(Date.now() / 1000);\n    priceChart.push({\n      priceUSD: parseFloat(usdcPrice === null || usdcPrice === void 0 ? void 0 : usdcPrice.toSignificant(4)),\n      timestamp: `${timestampnow}`\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SelectedCoinInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CurrencyLogo, {\n    currency: token,\n    size: 48,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"text1\",\n    fontSize: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, token.symbol), /*#__PURE__*/React.createElement(Text, {\n    color: \"green1\",\n    fontSize: \"16px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"$\", usdcPrice ? usdcPrice === null || usdcPrice === void 0 ? void 0 : usdcPrice.toSignificant(4, {\n    groupSeparator: ','\n  }) : '-')), /*#__PURE__*/React.createElement(TrackIcons, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    backgroundColor: \"primary\",\n    color: \"black\",\n    width: '32px',\n    height: '32px',\n    padding: \"0px\",\n    href: `${ANALYTICS_PAGE}/#/token/${coin === null || coin === void 0 ? void 0 : coin.address}`,\n    target: \"_blank\",\n    as: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    size: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  })), redirect ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"plain\",\n    backgroundColor: \"oceanBlue\",\n    color: \"white\",\n    padding: \"0px 10px\",\n    height: \"32px\",\n    href: `/#${BETA_MENU_LINK.swap}?inputCurrency=${coin === null || coin === void 0 ? void 0 : coin.address}`,\n    target: \"\",\n    as: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, t('swapPage.trade')) : /*#__PURE__*/React.createElement(Button, {\n    variant: \"plain\",\n    backgroundColor: \"oceanBlue\",\n    color: \"white\",\n    padding: \"0px 10px\",\n    height: \"32px\",\n    onClick: () => {\n      onCurrencySelect(coin);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, t('swapPage.trade')))), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    height: 150,\n    width: '100%',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    data: priceChart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"priceUSD\",\n    stroke: '#18C145',\n    dot: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    cursor: true,\n    formatter: priceUSD => {\n      return [`${formattedNum(priceUSD, true)}`, 'USD'];\n    },\n    labelFormatter: (label, data) => {\n      var _data$, _data$$payload;\n\n      return toNiceDateYear(data === null || data === void 0 ? void 0 : (_data$ = data[0]) === null || _data$ === void 0 ? void 0 : (_data$$payload = _data$.payload) === null || _data$$payload === void 0 ? void 0 : _data$$payload.timestamp);\n    },\n    labelStyle: {\n      paddingTop: 4\n    },\n    wrapperStyle: {\n      top: -70,\n      left: -10,\n      zIndex: 9999\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(DurationBtns, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, TIMEFRAME.map(btn => /*#__PURE__*/React.createElement(Button, {\n    variant: \"plain\",\n    key: btn === null || btn === void 0 ? void 0 : btn.label,\n    padding: \"0px\",\n    width: \"auto\",\n    color: timeWindow.label === btn.label ? 'mustardYellow' : 'text1',\n    onClick: () => setTimeWindow(btn),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, btn === null || btn === void 0 ? void 0 : btn.label))));\n};\n\nexport default CoinChart;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Swap/WatchList/CoinChart.tsx"],"names":["React","useCallback","useContext","useState","Text","Box","CurrencyLogo","Button","useSwapActionHandlers","useUSDCPrice","Link","LineChart","Line","ResponsiveContainer","Tooltip","SelectedCoinInfo","TrackIcons","DurationBtns","ANALYTICS_PAGE","Field","useTokenPriceData","TIMEFRAME","formattedNum","toNiceDateYear","useTranslation","unwrappedToken","BETA_MENU_LINK","useChainId","RedirectContext","createContext","CoinChart","coin","chainId","t","weekFrame","find","label","timeWindow","setTimeWindow","redirect","usdcPrice","onCurrencySelection","onCurrencySelect","currency","INPUT","priceData","address","toLowerCase","momentIdentifier","interval","token","priceChart","length","timestampnow","Math","floor","Date","now","push","priceUSD","parseFloat","toSignificant","timestamp","symbol","groupSeparator","swap","data","payload","paddingTop","top","left","zIndex","map","btn"],"mappings":"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","sourcesContent":["import React, { useCallback, useContext, useState } from 'react'\nimport { Text, Box, CurrencyLogo, Button, useSwapActionHandlers } from '@pangolindex/components'\nimport useUSDCPrice from 'src/utils/useUSDCPrice'\nimport { Link } from 'react-feather'\nimport { LineChart, Line, ResponsiveContainer, Tooltip } from 'recharts'\nimport { Token } from '@pangolindex/sdk'\nimport { SelectedCoinInfo, TrackIcons, DurationBtns } from './styleds'\nimport { ANALYTICS_PAGE } from 'src/constants'\nimport { Field } from 'src/state/swap/actions'\nimport { useTokenPriceData } from 'src/state/token/hooks'\nimport { TIMEFRAME } from 'src/constants'\nimport { formattedNum, toNiceDateYear } from 'src/utils/charts'\nimport { useTranslation } from 'react-i18next'\nimport { unwrappedToken } from 'src/utils/wrappedCurrency'\nimport { BETA_MENU_LINK } from 'src/constants'\nimport { useChainId } from 'src/hooks'\n\ntype Props = {\n  coin: Token\n}\n\nexport const RedirectContext = React.createContext<boolean>(false)\n\nconst CoinChart: React.FC<Props> = ({ coin }) => {\n  const chainId = useChainId()\n\n  const { t } = useTranslation()\n  const weekFrame = TIMEFRAME.find(t => t.label === '1W')\n\n  const [timeWindow, setTimeWindow] = useState(\n    weekFrame ||\n      ({} as {\n        description: string\n        label: string\n        interval: number\n        momentIdentifier: string\n      })\n  )\n\n  const redirect = useContext(RedirectContext)\n\n  const usdcPrice = useUSDCPrice(coin)\n\n  const { onCurrencySelection } = useSwapActionHandlers(chainId)\n  const onCurrencySelect = useCallback(\n    currency => {\n      onCurrencySelection(Field.INPUT, currency)\n    },\n    [onCurrencySelection]\n  )\n\n  const priceData =\n    useTokenPriceData(\n      (coin?.address || '').toLowerCase(),\n      timeWindow?.momentIdentifier,\n      timeWindow?.interval,\n      timeWindow?.label\n    ) || []\n\n  const token = unwrappedToken(coin, chainId)\n\n  const priceChart = [...priceData]\n  // add current price in chart\n  if (priceChart.length > 0 && usdcPrice) {\n    const timestampnow = Math.floor(Date.now() / 1000)\n\n    priceChart.push({\n      priceUSD: parseFloat(usdcPrice?.toSignificant(4)),\n      timestamp: `${timestampnow}`\n    })\n  }\n\n  return (\n    <Box>\n      <SelectedCoinInfo>\n        <CurrencyLogo currency={token} size={48} />\n        <Box>\n          <Text color=\"text1\" fontSize=\"24px\">\n            {token.symbol}\n          </Text>\n          <Text color=\"green1\" fontSize=\"16px\">\n            ${usdcPrice ? usdcPrice?.toSignificant(4, { groupSeparator: ',' }) : '-'}\n          </Text>\n        </Box>\n        <TrackIcons>\n          <Button\n            variant=\"primary\"\n            backgroundColor=\"primary\"\n            color=\"black\"\n            width={'32px'}\n            height={'32px'}\n            padding=\"0px\"\n            href={`${ANALYTICS_PAGE}/#/token/${coin?.address}`}\n            target=\"_blank\"\n            as=\"a\"\n          >\n            <Link size={12} />\n          </Button>\n          {redirect ? (\n            <Button\n              variant=\"plain\"\n              backgroundColor=\"oceanBlue\"\n              color=\"white\"\n              padding=\"0px 10px\"\n              height=\"32px\"\n              href={`/#${BETA_MENU_LINK.swap}?inputCurrency=${coin?.address}`}\n              target=\"\"\n              as=\"a\"\n            >\n              {t('swapPage.trade')}\n            </Button>\n          ) : (\n            <Button\n              variant=\"plain\"\n              backgroundColor=\"oceanBlue\"\n              color=\"white\"\n              padding=\"0px 10px\"\n              height=\"32px\"\n              onClick={() => {\n                onCurrencySelect(coin)\n              }}\n            >\n              {t('swapPage.trade')}\n            </Button>\n          )}\n        </TrackIcons>\n      </SelectedCoinInfo>\n      <ResponsiveContainer height={150} width={'100%'}>\n        <LineChart data={priceChart}>\n          <Line type=\"monotone\" dataKey=\"priceUSD\" stroke={'#18C145'} dot={false} />\n          <Tooltip\n            cursor={true}\n            formatter={(priceUSD: number) => {\n              return [`${formattedNum(priceUSD, true)}`, 'USD']\n            }}\n            labelFormatter={(label, data) => {\n              return toNiceDateYear(data?.[0]?.payload?.timestamp)\n            }}\n            labelStyle={{ paddingTop: 4 }}\n            wrapperStyle={{ top: -70, left: -10, zIndex: 9999 }}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n      <DurationBtns>\n        {TIMEFRAME.map(btn => (\n          <Button\n            variant=\"plain\"\n            key={btn?.label}\n            padding=\"0px\"\n            width=\"auto\"\n            color={timeWindow.label === btn.label ? 'mustardYellow' : 'text1'}\n            onClick={() => setTimeWindow(btn)}\n          >\n            {btn?.label}\n          </Button>\n        ))}\n      </DurationBtns>\n    </Box>\n  )\n}\nexport default CoinChart\n"]},"metadata":{},"sourceType":"module"}