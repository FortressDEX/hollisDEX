{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/FiatInputPanel/Footer.tsx\";\nimport React from 'react';\nimport { AdvancedDetailsFooter } from '../swap/AdvancedSwapDetailsDropdown';\nimport { useGetQuote } from '../../state/wyre/hooks';\nimport { RowBetween, RowFixed } from '../Row';\nimport { AutoColumn } from '../Column';\nimport { TYPE } from '../../theme';\nimport QuestionHelper from '../QuestionHelper';\nexport default function Footer() {\n  const quote = useGetQuote().quote;\n  const sourceCurrency = !quote ? 'USD' : quote.sourceCurrency;\n  const destCurrency = !quote ? '' : quote.destCurrency;\n  const amountReceivable = !quote ? 0 : quote.destAmount.toFixed(2);\n  const exchangeRate = !quote ? 0 : quote.exchangeRate > 0 ? 1 / quote.exchangeRate : 0;\n  const transactionFee = !quote ? 0 : quote.fees[sourceCurrency];\n  const networkFee = !quote ? 0 : quote.sourceAmount - (quote.sourceAmountWithoutFees + transactionFee);\n  const total = !quote ? 0 : quote.sourceAmount;\n  const locale = navigator.language;\n\n  function formatAndLocalizeCurrencyAmount(amount) {\n    return Intl.NumberFormat(locale, {\n      style: 'currency',\n      currency: sourceCurrency\n    }).format(amount);\n  }\n\n  return /*#__PURE__*/React.createElement(AdvancedDetailsFooter, {\n    show: quote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    style: {\n      padding: '0 24px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    fontSize: 14,\n    fontWeight: 400,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"You'll receive\"), /*#__PURE__*/React.createElement(QuestionHelper, {\n    text: 'Premium',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  })), amountReceivable, \"\\xA0\", destCurrency), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    fontSize: 14,\n    fontWeight: 400,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Exchange rate (1 \", destCurrency, \" =)\")), formatAndLocalizeCurrencyAmount(exchangeRate)), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    fontSize: 14,\n    fontWeight: 400,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Transaction fees\"), /*#__PURE__*/React.createElement(QuestionHelper, {\n    text: \"Transaction fees\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })), formatAndLocalizeCurrencyAmount(transactionFee)), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    fontSize: 14,\n    fontWeight: 400,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Network fees\"), /*#__PURE__*/React.createElement(QuestionHelper, {\n    text: \"Network fees\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  })), formatAndLocalizeCurrencyAmount(networkFee)), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    fontSize: 16,\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(QuestionHelper, {\n    text: \"Total amount to pay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(TYPE.black, {\n    fontSize: 16,\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"~\", formatAndLocalizeCurrencyAmount(total)))));\n}","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/FiatInputPanel/Footer.tsx"],"names":["React","AdvancedDetailsFooter","useGetQuote","RowBetween","RowFixed","AutoColumn","TYPE","QuestionHelper","Footer","quote","sourceCurrency","destCurrency","amountReceivable","destAmount","toFixed","exchangeRate","transactionFee","fees","networkFee","sourceAmount","sourceAmountWithoutFees","total","locale","navigator","language","formatAndLocalizeCurrencyAmount","amount","Intl","NumberFormat","style","currency","format","padding"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { AdvancedDetailsFooter } from '../swap/AdvancedSwapDetailsDropdown'\nimport { useGetQuote } from '../../state/wyre/hooks'\nimport { RowBetween, RowFixed } from '../Row'\nimport { AutoColumn } from '../Column'\nimport { TYPE } from '../../theme'\nimport QuestionHelper from '../QuestionHelper'\n\nexport default function Footer() {\n  const quote = useGetQuote().quote\n  const sourceCurrency = !quote ? 'USD' : quote.sourceCurrency\n  const destCurrency = !quote ? '' : quote.destCurrency\n  const amountReceivable = !quote ? 0 : quote.destAmount.toFixed(2)\n  const exchangeRate = !quote ? 0 : quote.exchangeRate > 0 ? 1 / quote.exchangeRate : 0\n  const transactionFee = !quote ? 0 : quote.fees[sourceCurrency]\n  const networkFee = !quote ? 0 : quote.sourceAmount - (quote.sourceAmountWithoutFees + transactionFee)\n  const total = !quote ? 0 : quote.sourceAmount\n  const locale = navigator.language\n\n  function formatAndLocalizeCurrencyAmount(amount: number): string {\n    return Intl.NumberFormat(locale, { style: 'currency', currency: sourceCurrency }).format(amount)\n  }\n\n  return (\n    <AdvancedDetailsFooter show={quote}>\n      <AutoColumn gap=\"md\" style={{ padding: '0 24px' }}>\n        <RowBetween>\n          <RowFixed>\n            <TYPE.black fontSize={14} fontWeight={400}>\n              {\"You'll receive\"}\n            </TYPE.black>\n            <QuestionHelper text={'Premium'} />\n          </RowFixed>\n          {amountReceivable}&nbsp;{destCurrency}\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <TYPE.black fontSize={14} fontWeight={400}>\n              Exchange rate (1 {destCurrency} =)\n            </TYPE.black>\n          </RowFixed>\n          {formatAndLocalizeCurrencyAmount(exchangeRate)}\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <TYPE.black fontSize={14} fontWeight={400}>\n              Transaction fees\n            </TYPE.black>\n            <QuestionHelper text=\"Transaction fees\" />\n          </RowFixed>\n          {formatAndLocalizeCurrencyAmount(transactionFee)}\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <TYPE.black fontSize={14} fontWeight={400}>\n              Network fees\n            </TYPE.black>\n            <QuestionHelper text=\"Network fees\" />\n          </RowFixed>\n          {formatAndLocalizeCurrencyAmount(networkFee)}\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <TYPE.black fontSize={16} fontWeight={600}>\n              Total\n            </TYPE.black>\n            <QuestionHelper text=\"Total amount to pay\" />\n          </RowFixed>\n          <TYPE.black fontSize={16} fontWeight={600}>\n            ~{formatAndLocalizeCurrencyAmount(total)}\n          </TYPE.black>\n        </RowBetween>\n      </AutoColumn>\n    </AdvancedDetailsFooter>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}