{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/layout/Header/NetworkSelection/index.tsx\";\nimport React, { useState } from 'react';\nimport { ALL_CHAINS } from '@pangolindex/sdk';\nimport { Box, Text, ToggleButtons } from '@pangolindex/components'; //import { useActiveWeb3React } from 'src/hooks'\n\nimport Modal from 'src/components/Beta/Modal';\nimport { ChainsList, ChainButton, Frame, Logo, CloseButton, ButtonFrame } from './styled';\nimport { Scrollbars } from 'react-custom-scrollbars';\nexport default function NetworkSelection(_ref) {\n  let {\n    open,\n    closeModal\n  } = _ref;\n  const [mainnet, setMainnet] = useState(true);\n  const {\n    ethereum\n  } = window;\n  const isMetaMask = ethereum && ethereum.isMetaMask;\n  const chains = ALL_CHAINS.filter(chain => chain.pangolin_is_live && chain.mainnet === mainnet);\n  const chainListHeight = chains.length / 2 <= 1 ? 48 : chains.length / 2 <= 2 ? 116 : 184;\n\n  const changeChain = async chain => {\n    if (isMetaMask && ethereum) {\n      try {\n        await ethereum.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{\n            chainId: `0x${chain.chain_id.toString(16)}`\n          }]\n        });\n      } catch (error) {\n        // This error code indicates that the chain has not been added to MetaMask.\n        const metamask = error;\n\n        if (metamask.code === 4902) {\n          await ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [{\n              chainName: chain.name,\n              chainId: `0x${chain.chain_id.toString(16)}`,\n              //nativeCurrency: chain.nativeCurrency,\n              rpcUrls: [chain.rpc_uri],\n              blockExplorerUrls: chain.blockExplorerUrls,\n              iconUrls: chain.logo,\n              nativeCurrency: chain.nativeCurrency\n            }]\n          });\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: open,\n    onDismiss: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Frame, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CloseButton, {\n    onClick: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    color: \"text1\",\n    fontSize: \"24px\",\n    marginBottom: 20,\n    style: {\n      gridArea: 'text'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Select Chain\"), /*#__PURE__*/React.createElement(ButtonFrame, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButtons, {\n    options: ['Mainnet', 'Testnet'],\n    value: mainnet === true ? 'Mainnet' : 'Testnet',\n    onChange: value => {\n      setMainnet(value === 'Mainnet');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    height: chainListHeight,\n    style: {\n      gridArea: 'chains'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Scrollbars, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ChainsList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, chains.map((chain, index) => /*#__PURE__*/React.createElement(ChainButton, {\n    key: index,\n    onClick: () => changeChain(chain),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    src: chain.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    color: \"text1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  }, chain.name))))))));\n}","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/layout/Header/NetworkSelection/index.tsx"],"names":["React","useState","ALL_CHAINS","Box","Text","ToggleButtons","Modal","ChainsList","ChainButton","Frame","Logo","CloseButton","ButtonFrame","Scrollbars","NetworkSelection","open","closeModal","mainnet","setMainnet","ethereum","window","isMetaMask","chains","filter","chain","pangolin_is_live","chainListHeight","length","changeChain","request","method","params","chainId","chain_id","toString","error","metamask","code","chainName","name","rpcUrls","rpc_uri","blockExplorerUrls","iconUrls","logo","nativeCurrency","gridArea","value","map","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { ALL_CHAINS, Chain } from '@pangolindex/sdk'\nimport { Box, Text, ToggleButtons } from '@pangolindex/components'\n\n//import { useActiveWeb3React } from 'src/hooks'\nimport Modal from 'src/components/Beta/Modal'\nimport { ChainsList, ChainButton, Frame, Logo, CloseButton, ButtonFrame } from './styled'\nimport { Scrollbars } from 'react-custom-scrollbars'\n\ninterface Props {\n  open: boolean\n  closeModal: () => void\n}\n\ninterface MetamaskError {\n  code: number\n  message: string\n}\n\nexport default function NetworkSelection({ open, closeModal }: Props) {\n  const [mainnet, setMainnet] = useState(true)\n\n  const { ethereum } = window\n  const isMetaMask = ethereum && ethereum.isMetaMask\n\n  const chains = ALL_CHAINS.filter(chain => chain.pangolin_is_live && chain.mainnet === mainnet)\n\n  const chainListHeight = chains.length / 2 <= 1 ? 48 : chains.length / 2 <= 2 ? 116 : 184\n\n  const changeChain = async (chain: Chain) => {\n    if (isMetaMask && ethereum) {\n      try {\n        await ethereum.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{ chainId: `0x${chain.chain_id.toString(16)}` }]\n        })\n      } catch (error) {\n        // This error code indicates that the chain has not been added to MetaMask.\n        const metamask = error as MetamaskError\n        if (metamask.code === 4902) {\n          await ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [\n              {\n                chainName: chain.name,\n                chainId: `0x${chain.chain_id.toString(16)}`,\n                //nativeCurrency: chain.nativeCurrency,\n                rpcUrls: [chain.rpc_uri],\n                blockExplorerUrls: chain.blockExplorerUrls,\n                iconUrls: chain.logo,\n                nativeCurrency: chain.nativeCurrency\n              }\n            ]\n          })\n        }\n      }\n    }\n  }\n\n  return (\n    <Modal isOpen={open} onDismiss={closeModal}>\n      <Frame>\n        <CloseButton onClick={closeModal} />\n        <Text color=\"text1\" fontSize=\"24px\" marginBottom={20} style={{ gridArea: 'text' }}>\n          Select Chain\n        </Text>\n        <ButtonFrame>\n          <ToggleButtons\n            options={['Mainnet', 'Testnet']}\n            value={mainnet === true ? 'Mainnet' : 'Testnet'}\n            onChange={value => {\n              setMainnet(value === 'Mainnet')\n            }}\n          />\n        </ButtonFrame>\n        <Box height={chainListHeight} style={{ gridArea: 'chains' }}>\n          <Scrollbars>\n            <ChainsList>\n              {chains.map((chain, index) => (\n                <ChainButton key={index} onClick={() => changeChain(chain)}>\n                  <Logo src={chain.logo} />\n                  <Text color=\"text1\">{chain.name}</Text>\n                </ChainButton>\n              ))}\n            </ChainsList>\n          </Scrollbars>\n        </Box>\n      </Frame>\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}