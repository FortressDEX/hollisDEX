{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Pool/EarnWidget/EarnOption/index.tsx\";\nimport React from 'react';\nimport { Text, Box, ToggleButtons } from '@pangolindex/components';\nimport { EarnWrapper } from './styled';\nimport { useTranslation } from 'react-i18next';\n\nconst TradeOption = _ref => {\n  let {\n    type,\n    setType\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/React.createElement(EarnWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    p: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"text1\",\n    fontSize: 20,\n    fontWeight: 500,\n    style: {\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, type === 'Pool' ? t('pool.addLiquidity') : t('header.farm')), /*#__PURE__*/React.createElement(ToggleButtons, {\n    options: ['Pool', 'Farm'],\n    value: type,\n    onChange: value => {\n      setType(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default TradeOption;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Beta/Pool/EarnWidget/EarnOption/index.tsx"],"names":["React","Text","Box","ToggleButtons","EarnWrapper","useTranslation","TradeOption","type","setType","t","whiteSpace","overflow","textOverflow","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,aAApB,QAAyC,yBAAzC;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,SAASC,cAAT,QAA+B,eAA/B;;AAOA,MAAMC,WAA4B,GAAG,QAAuB;AAAA,MAAtB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAsB;AAC1D,QAAM;AAAEC,IAAAA;AAAF,MAAQJ,cAAc,EAA5B;AACA,sBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,CAAC,EAAE,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,UAAU,EAAC,QAA/B;AAAwC,IAAA,cAAc,EAAC,eAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,QAAQ,EAAE,EAFZ;AAGE,IAAA,UAAU,EAAE,GAHd;AAIE,IAAA,KAAK,EAAE;AAAEK,MAAAA,UAAU,EAAE,QAAd;AAAwBC,MAAAA,QAAQ,EAAE,QAAlC;AAA4CC,MAAAA,YAAY,EAAE;AAA1D,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGL,IAAI,KAAK,MAAT,GAAkBE,CAAC,CAAC,mBAAD,CAAnB,GAA2CA,CAAC,CAAC,aAAD,CAN/C,CADF,eASE,oBAAC,aAAD;AACE,IAAA,OAAO,EAAE,CAAC,MAAD,EAAS,MAAT,CADX;AAEE,IAAA,KAAK,EAAEF,IAFT;AAGE,IAAA,QAAQ,EAAEM,KAAK,IAAI;AACjBL,MAAAA,OAAO,CAACK,KAAD,CAAP;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,CADF,CADF;AAuBD,CAzBD;;AA0BA,eAAeP,WAAf","sourcesContent":["import React from 'react'\nimport { Text, Box, ToggleButtons } from '@pangolindex/components'\nimport { EarnWrapper } from './styled'\nimport { useTranslation } from 'react-i18next'\n\ninterface Props {\n  type: string\n  setType: (value: string) => void\n}\n\nconst TradeOption: React.FC<Props> = ({ type, setType }) => {\n  const { t } = useTranslation()\n  return (\n    <EarnWrapper>\n      <Box p={10}>\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text\n            color=\"text1\"\n            fontSize={20}\n            fontWeight={500}\n            style={{ whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' }}\n          >\n            {type === 'Pool' ? t('pool.addLiquidity') : t('header.farm')}\n          </Text>\n          <ToggleButtons\n            options={['Pool', 'Farm']}\n            value={type}\n            onChange={value => {\n              setType(value)\n            }}\n          />\n        </Box>\n      </Box>\n    </EarnWrapper>\n  )\n}\nexport default TradeOption\n"]},"metadata":{},"sourceType":"module"}