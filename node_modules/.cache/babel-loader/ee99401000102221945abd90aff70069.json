{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/swap/AdvancedSwapDetails.tsx\";\nimport { TradeType } from '@pangolindex/sdk';\nimport React, { useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { Field } from '../../state/swap/actions';\nimport { useUserSlippageTolerance } from '../../state/user/hooks';\nimport { TYPE } from '../../theme';\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from '../../utils/prices';\nimport { AutoColumn } from '../Column';\nimport QuestionHelper from '../QuestionHelper';\nimport { RowBetween, RowFixed } from '../Row';\nimport FormattedPriceImpact from './FormattedPriceImpact';\nimport { SectionBreak } from './styleds';\nimport SwapRoute from './SwapRoute';\nimport { useTranslation } from 'react-i18next';\nimport { useChainId } from 'src/hooks';\n\nfunction TradeSummary(_ref) {\n  var _ref2, _slippageAdjustedAmou, _ref3, _slippageAdjustedAmou2;\n\n  let {\n    trade,\n    allowedSlippage,\n    chainId\n  } = _ref;\n  const theme = useContext(ThemeContext);\n  const {\n    priceImpactWithoutFee,\n    realizedLPFee\n  } = computeTradePriceBreakdown(chainId, trade);\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT;\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage, chainId);\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoColumn, {\n    style: {\n      padding: '0 20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    fontSize: 14,\n    fontWeight: 400,\n    color: theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, isExactIn ? t('swap.minimumReceived') : t('swap.maximumSold')), /*#__PURE__*/React.createElement(QuestionHelper, {\n    text: t('swap.transactionRevertHelper'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    color: theme.text1,\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, isExactIn ? (_ref2 = `${(_slippageAdjustedAmou = slippageAdjustedAmounts[Field.OUTPUT]) === null || _slippageAdjustedAmou === void 0 ? void 0 : _slippageAdjustedAmou.toSignificant(4)} ${trade.outputAmount.currency.symbol}`) !== null && _ref2 !== void 0 ? _ref2 : '-' : (_ref3 = `${(_slippageAdjustedAmou2 = slippageAdjustedAmounts[Field.INPUT]) === null || _slippageAdjustedAmou2 === void 0 ? void 0 : _slippageAdjustedAmou2.toSignificant(4)} ${trade.inputAmount.currency.symbol}`) !== null && _ref3 !== void 0 ? _ref3 : '-'))), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    fontSize: 14,\n    fontWeight: 400,\n    color: theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, t('swap.priceImpact')), /*#__PURE__*/React.createElement(QuestionHelper, {\n    text: t('swap.priceImpactHelper'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(FormattedPriceImpact, {\n    priceImpact: priceImpactWithoutFee,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    fontSize: 14,\n    fontWeight: 400,\n    color: theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, t('swap.liquidityProviderFee')), /*#__PURE__*/React.createElement(QuestionHelper, {\n    text: t('swap.liquidityProviderHelper'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(TYPE.black, {\n    fontSize: 14,\n    color: theme.text1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'))));\n}\n\nexport function AdvancedSwapDetails(_ref4) {\n  let {\n    trade\n  } = _ref4;\n  const theme = useContext(ThemeContext);\n  const [allowedSlippage] = useUserSlippageTolerance();\n  const chainId = useChainId();\n  const showRoute = Boolean(trade && trade.route.path.length > 2);\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, trade && chainId && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TradeSummary, {\n    trade: trade,\n    allowedSlippage: allowedSlippage,\n    chainId: chainId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), showRoute && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SectionBreak, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(AutoColumn, {\n    style: {\n      padding: '0 24px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    fontSize: 14,\n    fontWeight: 400,\n    color: theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, t('swap.route')), /*#__PURE__*/React.createElement(QuestionHelper, {\n    text: t('swap.routingHelper'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(SwapRoute, {\n    trade: trade,\n    chainId: chainId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/swap/AdvancedSwapDetails.tsx"],"names":["TradeType","React","useContext","ThemeContext","Field","useUserSlippageTolerance","TYPE","computeSlippageAdjustedAmounts","computeTradePriceBreakdown","AutoColumn","QuestionHelper","RowBetween","RowFixed","FormattedPriceImpact","SectionBreak","SwapRoute","useTranslation","useChainId","TradeSummary","trade","allowedSlippage","chainId","theme","priceImpactWithoutFee","realizedLPFee","isExactIn","tradeType","EXACT_INPUT","slippageAdjustedAmounts","t","padding","text2","text1","OUTPUT","toSignificant","outputAmount","currency","symbol","INPUT","inputAmount","AdvancedSwapDetails","showRoute","Boolean","route","path","length"],"mappings":"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","sourcesContent":["import { ChainId, Trade, TradeType } from '@pangolindex/sdk'\nimport React, { useContext } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { Field } from '../../state/swap/actions'\nimport { useUserSlippageTolerance } from '../../state/user/hooks'\nimport { TYPE } from '../../theme'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from '../../utils/prices'\nimport { AutoColumn } from '../Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { RowBetween, RowFixed } from '../Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { SectionBreak } from './styleds'\nimport SwapRoute from './SwapRoute'\nimport { useTranslation } from 'react-i18next'\nimport { useChainId } from 'src/hooks'\n\nfunction TradeSummary({\n  trade,\n  allowedSlippage,\n  chainId\n}: {\n  trade: Trade\n  allowedSlippage: number\n  chainId: ChainId\n}) {\n  const theme = useContext(ThemeContext)\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(chainId, trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage, chainId)\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <AutoColumn style={{ padding: '0 20px' }}>\n        <RowBetween>\n          <RowFixed>\n            <TYPE.black fontSize={14} fontWeight={400} color={theme.text2}>\n              {isExactIn ? t('swap.minimumReceived') : t('swap.maximumSold')}\n            </TYPE.black>\n            <QuestionHelper text={t('swap.transactionRevertHelper')} />\n          </RowFixed>\n          <RowFixed>\n            <TYPE.black color={theme.text1} fontSize={14}>\n              {isExactIn\n                ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                  '-'\n                : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ??\n                  '-'}\n            </TYPE.black>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <TYPE.black fontSize={14} fontWeight={400} color={theme.text2}>\n              {t('swap.priceImpact')}\n            </TYPE.black>\n            <QuestionHelper text={t('swap.priceImpactHelper')} />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <TYPE.black fontSize={14} fontWeight={400} color={theme.text2}>\n              {t('swap.liquidityProviderFee')}\n            </TYPE.black>\n            <QuestionHelper text={t('swap.liquidityProviderHelper')} />\n          </RowFixed>\n          <TYPE.black fontSize={14} color={theme.text1}>\n            {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </TYPE.black>\n        </RowBetween>\n      </AutoColumn>\n    </>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const theme = useContext(ThemeContext)\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n  const chainId = useChainId()\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n  const { t } = useTranslation()\n\n  return (\n    <AutoColumn gap=\"md\">\n      {trade && chainId && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} chainId={chainId} />\n          {showRoute && (\n            <>\n              <SectionBreak />\n              <AutoColumn style={{ padding: '0 24px' }}>\n                <RowFixed>\n                  <TYPE.black fontSize={14} fontWeight={400} color={theme.text2}>\n                    {t('swap.route')}\n                  </TYPE.black>\n                  <QuestionHelper text={t('swap.routingHelper')} />\n                </RowFixed>\n                <SwapRoute trade={trade} chainId={chainId} />\n              </AutoColumn>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}