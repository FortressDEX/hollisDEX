{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Earn/ManageV2.tsx\";\nimport React, { useMemo } from 'react';\nimport { useMinichefStakingInfos } from '../../state/stake/hooks';\nimport Manage from './Manage';\nimport { usePair } from '../../data/Reserves';\nimport { wrappedCurrency } from '../../utils/wrappedCurrency';\nimport { useCurrency, useTokens } from '../../hooks/Tokens';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useSingleContractMultipleData } from '../../state/multicall/hooks';\nimport { useRewardViaMultiplierContract } from '../../hooks/useContract';\nimport { JSBI, TokenAmount } from '@pangolindex/sdk';\n\nconst ManageV2 = _ref => {\n  var _useMinichefStakingIn, _miniChefStaking$earn, _rewardTokenAmounts$, _rewardTokenAmounts$$;\n\n  let {\n    match: {\n      params: {\n        currencyIdA,\n        currencyIdB\n      }\n    }\n  } = _ref;\n  const {\n    chainId,\n    account\n  } = useActiveWeb3React(); // get currencies and pair\n\n  const [currencyA, currencyB] = [useCurrency(currencyIdA), useCurrency(currencyIdB)];\n  const tokenA = wrappedCurrency(currencyA !== null && currencyA !== void 0 ? currencyA : undefined, chainId);\n  const tokenB = wrappedCurrency(currencyB !== null && currencyB !== void 0 ? currencyB : undefined, chainId);\n  const [, stakingTokenPair] = usePair(tokenA, tokenB);\n  const miniChefStaking = (_useMinichefStakingIn = useMinichefStakingInfos(2, stakingTokenPair)) === null || _useMinichefStakingIn === void 0 ? void 0 : _useMinichefStakingIn[0];\n  const rewardAddress = miniChefStaking === null || miniChefStaking === void 0 ? void 0 : miniChefStaking.rewardsAddress;\n  const rewardContract = useRewardViaMultiplierContract(rewardAddress);\n  const earnedAmount = (miniChefStaking === null || miniChefStaking === void 0 ? void 0 : miniChefStaking.earnedAmount) ? JSBI.BigInt(miniChefStaking === null || miniChefStaking === void 0 ? void 0 : (_miniChefStaking$earn = miniChefStaking.earnedAmount) === null || _miniChefStaking$earn === void 0 ? void 0 : _miniChefStaking$earn.raw).toString() : JSBI.BigInt(0).toString();\n  const rewardTokenAmounts = useSingleContractMultipleData(rewardContract, 'pendingTokens', account ? [[0, account, earnedAmount]] : []);\n  const rewardTokens = useTokens(miniChefStaking === null || miniChefStaking === void 0 ? void 0 : miniChefStaking.rewardTokensAddress);\n  const rewardAmounts = (rewardTokenAmounts === null || rewardTokenAmounts === void 0 ? void 0 : (_rewardTokenAmounts$ = rewardTokenAmounts[0]) === null || _rewardTokenAmounts$ === void 0 ? void 0 : (_rewardTokenAmounts$$ = _rewardTokenAmounts$.result) === null || _rewardTokenAmounts$$ === void 0 ? void 0 : _rewardTokenAmounts$$.amounts) || []; // eslint-disable-line react-hooks/exhaustive-deps\n\n  const rewardTokensAmount = useMemo(() => {\n    if (!rewardTokens) return [];\n    return rewardTokens.map((rewardToken, index) => new TokenAmount(rewardToken, rewardAmounts[index] || 0));\n  }, [rewardAmounts, rewardTokens]);\n  return /*#__PURE__*/React.createElement(Manage, {\n    version: \"2\",\n    stakingInfo: miniChefStaking,\n    currencyA: currencyA,\n    currencyB: currencyB,\n    extraRewardTokensAmount: rewardTokensAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default ManageV2;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/pages/Earn/ManageV2.tsx"],"names":["React","useMemo","useMinichefStakingInfos","Manage","usePair","wrappedCurrency","useCurrency","useTokens","useActiveWeb3React","useSingleContractMultipleData","useRewardViaMultiplierContract","JSBI","TokenAmount","ManageV2","match","params","currencyIdA","currencyIdB","chainId","account","currencyA","currencyB","tokenA","undefined","tokenB","stakingTokenPair","miniChefStaking","rewardAddress","rewardsAddress","rewardContract","earnedAmount","BigInt","raw","toString","rewardTokenAmounts","rewardTokens","rewardTokensAddress","rewardAmounts","result","amounts","rewardTokensAmount","map","rewardToken","index"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport { useMinichefStakingInfos } from '../../state/stake/hooks'\nimport { RouteComponentProps } from 'react-router-dom'\nimport Manage from './Manage'\nimport { usePair } from '../../data/Reserves'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport { useCurrency, useTokens } from '../../hooks/Tokens'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useSingleContractMultipleData } from '../../state/multicall/hooks'\nimport { useRewardViaMultiplierContract } from '../../hooks/useContract'\nimport { JSBI, Token, TokenAmount } from '@pangolindex/sdk'\n\nconst ManageV2: React.FC<RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>> = ({\n  match: {\n    params: { currencyIdA, currencyIdB }\n  }\n}) => {\n  const { chainId, account } = useActiveWeb3React()\n\n  // get currencies and pair\n  const [currencyA, currencyB] = [useCurrency(currencyIdA), useCurrency(currencyIdB)]\n  const tokenA = wrappedCurrency(currencyA ?? undefined, chainId)\n  const tokenB = wrappedCurrency(currencyB ?? undefined, chainId)\n\n  const [, stakingTokenPair] = usePair(tokenA, tokenB)\n  const miniChefStaking = useMinichefStakingInfos(2, stakingTokenPair)?.[0]\n\n  const rewardAddress = miniChefStaking?.rewardsAddress\n  const rewardContract = useRewardViaMultiplierContract(rewardAddress)\n\n  const earnedAmount = miniChefStaking?.earnedAmount\n    ? JSBI.BigInt(miniChefStaking?.earnedAmount?.raw).toString()\n    : JSBI.BigInt(0).toString()\n\n  const rewardTokenAmounts = useSingleContractMultipleData(\n    rewardContract,\n    'pendingTokens',\n    account ? [[0, account as string, earnedAmount]] : []\n  )\n  const rewardTokens = useTokens(miniChefStaking?.rewardTokensAddress)\n  const rewardAmounts = rewardTokenAmounts?.[0]?.result?.amounts || [] // eslint-disable-line react-hooks/exhaustive-deps\n\n  const rewardTokensAmount = useMemo(() => {\n    if (!rewardTokens) return []\n    return rewardTokens.map((rewardToken, index) => new TokenAmount(rewardToken as Token, rewardAmounts[index] || 0))\n  }, [rewardAmounts, rewardTokens])\n\n  return (\n    <Manage\n      version=\"2\"\n      stakingInfo={miniChefStaking}\n      currencyA={currencyA}\n      currencyB={currencyB}\n      extraRewardTokensAmount={rewardTokensAmount}\n    />\n  )\n}\n\nexport default ManageV2\n"]},"metadata":{},"sourceType":"module"}