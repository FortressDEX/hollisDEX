{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/MigrationModal/PoolInfo/index.tsx\";\nimport React from 'react';\nimport { InfoWrapper, DataBox, ContentBox, TextBox, StyledBalanceMax } from './styleds';\nimport { Text, Box, DoubleCurrencyLogo, Steps, Step } from '@pangolindex/components';\nimport { useGetPairDataFromPair } from '../../../state/stake/hooks';\nimport numeral from 'numeral';\nimport { useTranslation } from 'react-i18next';\nimport { useTokenBalance } from '../../../state/wallet/hooks';\nimport { useActiveWeb3React, useChainId } from '../../../hooks';\nimport { wrappedCurrencyAmount } from '../../../utils/wrappedCurrency';\nimport { tryParseAmount } from '../../../state/swap/hooks';\nimport { JSBI } from '@pangolindex/sdk';\n\nconst PoolInfo = _ref => {\n  var _stakingInfo$stakedAm, _stakingInfo$earnedAm, _stakingInfo$earnedAm2, _stakingInfo$stakedAm2, _stakingInfo$rewardRa, _totalAmountUsd$multi;\n\n  let {\n    pair,\n    type,\n    stakingInfo,\n    amount,\n    stepIndex,\n    onChangeDot,\n    onChangeAmount,\n    userPoolBalance,\n    onMax\n  } = _ref;\n  const {\n    account\n  } = useActiveWeb3React();\n  const chainId = useChainId();\n  const {\n    t\n  } = useTranslation();\n  const {\n    currency0,\n    currency1,\n    token0Deposited,\n    token1Deposited,\n    totalAmountUsd,\n    totalPoolTokens,\n    getHypotheticalPoolOwnership\n  } = useGetPairDataFromPair(pair);\n\n  const renderPoolDataRow = (label, value) => {\n    return /*#__PURE__*/React.createElement(DataBox, {\n      key: label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      color: \"text4\",\n      fontSize: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, label), /*#__PURE__*/React.createElement(Text, {\n      color: \"text4\",\n      fontSize: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, value));\n  };\n\n  const userLiquidityUnstaked = useTokenBalance(account !== null && account !== void 0 ? account : undefined, stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm === void 0 ? void 0 : _stakingInfo$stakedAm.token);\n  const unClaimedPng = (_stakingInfo$earnedAm = stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$earnedAm2 = stakingInfo.earnedAmount) === null || _stakingInfo$earnedAm2 === void 0 ? void 0 : _stakingInfo$earnedAm2.toFixed(6)) !== null && _stakingInfo$earnedAm !== void 0 ? _stakingInfo$earnedAm : '0';\n  const parsedAmount = tryParseAmount(chainId, amount, stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm2 = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm2 === void 0 ? void 0 : _stakingInfo$stakedAm2.token);\n  const parsedAmountWrapped = wrappedCurrencyAmount(parsedAmount, chainId);\n  const poolOwnership = getHypotheticalPoolOwnership(parsedAmountWrapped ? stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.stakedAmount.add(parsedAmountWrapped).raw : stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.stakedAmount.raw, parsedAmountWrapped ? totalPoolTokens === null || totalPoolTokens === void 0 ? void 0 : totalPoolTokens.add(parsedAmountWrapped).raw : totalPoolTokens === null || totalPoolTokens === void 0 ? void 0 : totalPoolTokens.raw);\n  const pngRate = stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$rewardRa = stakingInfo.rewardRatePerWeek) === null || _stakingInfo$rewardRa === void 0 ? void 0 : _stakingInfo$rewardRa.toSignificant(4, {\n    groupSeparator: ','\n  });\n  const currency0Row = {\n    label: `${currency0.symbol} Amount:`,\n    value: `${token0Deposited === null || token0Deposited === void 0 ? void 0 : token0Deposited.multiply(parsedAmount || JSBI.BigInt(0)).divide((userPoolBalance === null || userPoolBalance === void 0 ? void 0 : userPoolBalance.greaterThan('0')) ? userPoolBalance : JSBI.BigInt(1)).toSignificant(6)}`\n  };\n  const currency1Row = {\n    label: `${currency1.symbol} Amount:`,\n    value: `${token1Deposited === null || token1Deposited === void 0 ? void 0 : token1Deposited.multiply(parsedAmount || JSBI.BigInt(0)).divide((userPoolBalance === null || userPoolBalance === void 0 ? void 0 : userPoolBalance.greaterThan('0')) ? userPoolBalance : JSBI.BigInt(1)).toSignificant(6)}`\n  };\n  const dollarWorthRow = {\n    label: `${t('migratePage.dollarWorth')}`,\n    value: `${numeral(totalAmountUsd === null || totalAmountUsd === void 0 ? void 0 : (_totalAmountUsd$multi = totalAmountUsd.multiply(parsedAmount || JSBI.BigInt(0)).divide((userPoolBalance === null || userPoolBalance === void 0 ? void 0 : userPoolBalance.greaterThan('0')) ? userPoolBalance : JSBI.BigInt(1))) === null || _totalAmountUsd$multi === void 0 ? void 0 : _totalAmountUsd$multi.toFixed(2)).format('$0.00a')}`\n  };\n  const yourPngRate = {\n    label: `${t('migratePage.yourRate')}`,\n    value: `${pngRate}    ${t('earnPage.rewardPerWeek', {\n      symbol: 'PNG'\n    })}`\n  };\n  const unClaimedRow = {\n    label: `${t('migratePage.unclaimedPng')}`,\n    value: userLiquidityUnstaked ? `${unClaimedPng}` : '-'\n  };\n  const poolShareRow = {\n    label: `${t('migratePage.shareOfPool')}`,\n    value: poolOwnership ? poolOwnership.toFixed(2) + '%' : '-'\n  };\n  let info = [];\n  if (type === 'unstake') info = [yourPngRate, unClaimedRow];\n  if (type === 'stake') info = [currency0Row, currency1Row, dollarWorthRow, poolShareRow];\n\n  const addonLabel = () => {\n    if (type === 'stake') {\n      return /*#__PURE__*/React.createElement(Text, {\n        color: \"text4\",\n        fontSize: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }\n      }, t('migratePage.availableToDeposit'), \" \", userPoolBalance === null || userPoolBalance === void 0 ? void 0 : userPoolBalance.toSignificant(6));\n    } else {\n      var _stakingInfo$stakedAm3;\n\n      return /*#__PURE__*/React.createElement(Text, {\n        color: \"text4\",\n        fontSize: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }\n      }, t('migratePage.availableToUnstake'), \" \", stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm3 = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm3 === void 0 ? void 0 : _stakingInfo$stakedAm3.toSignificant(6));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(InfoWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DoubleCurrencyLogo, {\n    size: 24,\n    currency0: currency0,\n    currency1: currency1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }), ' ', /*#__PURE__*/React.createElement(Text, {\n    color: \"text1\",\n    fontSize: 16,\n    ml: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, currency0.symbol, \"-\", currency1.symbol, \" \", t('migratePage.pool')))), type === 'stake' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {\n    color: \"text4\",\n    fontSize: 16,\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, t('migratePage.poolInfoDescription')), /*#__PURE__*/React.createElement(Box, {\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextBox, {\n    value: amount ? amount : '',\n    addonAfter: /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(StyledBalanceMax, {\n      onClick: onMax,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    }, t('currencyInputPanel.max')), /*#__PURE__*/React.createElement(Text, {\n      color: \"text4\",\n      fontSize: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    }, \"PGL\")),\n    onChange: value => {\n      onChangeAmount && onChangeAmount(value);\n    },\n    addonLabel: addonLabel(),\n    fontSize: 24,\n    isNumeric: true,\n    placeholder: \"0.00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Steps, {\n    onChange: value => {\n      onChangeDot && onChangeDot(value);\n    },\n    current: stepIndex,\n    progressDot: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Step, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Step, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Step, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Step, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Step, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ContentBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, info.map(item => renderPoolDataRow(item.label, item.value)))));\n};\n\nexport default PoolInfo;","map":{"version":3,"sources":["/Users/safahi/Documents/GitHub/interface/hollisDEX/src/components/MigrationModal/PoolInfo/index.tsx"],"names":["React","InfoWrapper","DataBox","ContentBox","TextBox","StyledBalanceMax","Text","Box","DoubleCurrencyLogo","Steps","Step","useGetPairDataFromPair","numeral","useTranslation","useTokenBalance","useActiveWeb3React","useChainId","wrappedCurrencyAmount","tryParseAmount","JSBI","PoolInfo","pair","type","stakingInfo","amount","stepIndex","onChangeDot","onChangeAmount","userPoolBalance","onMax","account","chainId","t","currency0","currency1","token0Deposited","token1Deposited","totalAmountUsd","totalPoolTokens","getHypotheticalPoolOwnership","renderPoolDataRow","label","value","userLiquidityUnstaked","undefined","stakedAmount","token","unClaimedPng","earnedAmount","toFixed","parsedAmount","parsedAmountWrapped","poolOwnership","add","raw","pngRate","rewardRatePerWeek","toSignificant","groupSeparator","currency0Row","symbol","multiply","BigInt","divide","greaterThan","currency1Row","dollarWorthRow","format","yourPngRate","unClaimedRow","poolShareRow","info","addonLabel","map","item"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { InfoWrapper, DataBox, ContentBox, TextBox, StyledBalanceMax } from './styleds'\nimport { Text, Box, DoubleCurrencyLogo, Steps, Step } from '@pangolindex/components'\nimport { Pair, TokenAmount } from '@pangolindex/sdk'\nimport { useGetPairDataFromPair } from '../../../state/stake/hooks'\nimport numeral from 'numeral'\nimport { useTranslation } from 'react-i18next'\nimport { StakingInfo } from '../../../state/stake/hooks'\nimport { useTokenBalance } from '../../../state/wallet/hooks'\nimport { useActiveWeb3React, useChainId } from '../../../hooks'\nimport { wrappedCurrencyAmount } from '../../../utils/wrappedCurrency'\nimport { tryParseAmount } from '../../../state/swap/hooks'\nimport { JSBI } from '@pangolindex/sdk'\n\nexport interface PoolInfoProps {\n  pair: Pair\n  type: 'unstake' | 'remove' | 'stake' | 'add'\n  stakingInfo?: StakingInfo | undefined\n  stepIndex?: number\n  onChangeDot?: (value: number) => void\n  amount?: string\n  onChangeAmount?: (value: string) => void\n  userPoolBalance?: TokenAmount\n  onMax: () => void\n}\n\nconst PoolInfo = ({\n  pair,\n  type,\n  stakingInfo,\n  amount,\n  stepIndex,\n  onChangeDot,\n  onChangeAmount,\n  userPoolBalance,\n  onMax\n}: PoolInfoProps) => {\n  const { account } = useActiveWeb3React()\n  const chainId = useChainId()\n\n  const { t } = useTranslation()\n\n  const {\n    currency0,\n    currency1,\n    token0Deposited,\n    token1Deposited,\n    totalAmountUsd,\n    totalPoolTokens,\n    getHypotheticalPoolOwnership\n  } = useGetPairDataFromPair(pair)\n\n  const renderPoolDataRow = (label: string, value: string) => {\n    return (\n      <DataBox key={label}>\n        <Text color=\"text4\" fontSize={16}>\n          {label}\n        </Text>\n\n        <Text color=\"text4\" fontSize={16}>\n          {value}\n        </Text>\n      </DataBox>\n    )\n  }\n\n  const userLiquidityUnstaked = useTokenBalance(account ?? undefined, stakingInfo?.stakedAmount?.token) as TokenAmount\n\n  const unClaimedPng = stakingInfo?.earnedAmount?.toFixed(6) ?? '0'\n\n  const parsedAmount = tryParseAmount(chainId, amount, stakingInfo?.stakedAmount?.token)\n  const parsedAmountWrapped = wrappedCurrencyAmount(parsedAmount, chainId)\n\n  const poolOwnership = getHypotheticalPoolOwnership(\n    parsedAmountWrapped ? stakingInfo?.stakedAmount.add(parsedAmountWrapped).raw : stakingInfo?.stakedAmount.raw,\n    parsedAmountWrapped ? totalPoolTokens?.add(parsedAmountWrapped).raw : totalPoolTokens?.raw\n  )\n\n  const pngRate = stakingInfo?.rewardRatePerWeek?.toSignificant(4, { groupSeparator: ',' })\n\n  const currency0Row = {\n    label: `${currency0.symbol} Amount:`,\n    value: `${token0Deposited\n      ?.multiply(parsedAmount || JSBI.BigInt(0))\n      .divide(userPoolBalance?.greaterThan('0') ? userPoolBalance : JSBI.BigInt(1))\n      .toSignificant(6)}`\n  }\n\n  const currency1Row = {\n    label: `${currency1.symbol} Amount:`,\n    value: `${token1Deposited\n      ?.multiply(parsedAmount || JSBI.BigInt(0))\n      .divide(userPoolBalance?.greaterThan('0') ? userPoolBalance : JSBI.BigInt(1))\n      .toSignificant(6)}`\n  }\n\n  const dollarWorthRow = {\n    label: `${t('migratePage.dollarWorth')}`,\n    value: `${numeral(\n      totalAmountUsd\n        ?.multiply(parsedAmount || JSBI.BigInt(0))\n        .divide(userPoolBalance?.greaterThan('0') ? userPoolBalance : JSBI.BigInt(1))\n        ?.toFixed(2)\n    ).format('$0.00a')}`\n  }\n\n  const yourPngRate = {\n    label: `${t('migratePage.yourRate')}`,\n    value: `${pngRate}    ${t('earnPage.rewardPerWeek', { symbol: 'PNG' })}`\n  }\n\n  const unClaimedRow = {\n    label: `${t('migratePage.unclaimedPng')}`,\n    value: userLiquidityUnstaked ? `${unClaimedPng}` : '-'\n  }\n  const poolShareRow = {\n    label: `${t('migratePage.shareOfPool')}`,\n    value: poolOwnership ? poolOwnership.toFixed(2) + '%' : '-'\n  }\n\n  let info = [] as Array<{ label: string; value: string }>\n  if (type === 'unstake') info = [yourPngRate, unClaimedRow]\n  if (type === 'stake') info = [currency0Row, currency1Row, dollarWorthRow, poolShareRow]\n\n  const addonLabel = () => {\n    if (type === 'stake') {\n      return (\n        <Text color=\"text4\" fontSize={12}>\n          {t('migratePage.availableToDeposit')} {userPoolBalance?.toSignificant(6)}\n        </Text>\n      )\n    } else {\n      return (\n        <Text color=\"text4\" fontSize={12}>\n          {t('migratePage.availableToUnstake')} {stakingInfo?.stakedAmount?.toSignificant(6)}\n        </Text>\n      )\n    }\n  }\n\n  return (\n    <InfoWrapper>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Box display=\"flex\" alignItems=\"center\">\n          <DoubleCurrencyLogo size={24} currency0={currency0} currency1={currency1} />{' '}\n          <Text color=\"text1\" fontSize={16} ml={10}>\n            {currency0.symbol}-{currency1.symbol} {t('migratePage.pool')}\n          </Text>\n        </Box>\n      </Box>\n\n      {type === 'stake' && (\n        <>\n          <Text color=\"text4\" fontSize={16} mt={10}>\n            {t('migratePage.poolInfoDescription')}\n          </Text>\n\n          <Box mt={10}>\n            <TextBox\n              value={amount ? amount : ''}\n              addonAfter={\n                <Box display=\"flex\" alignItems=\"center\">\n                  <StyledBalanceMax onClick={onMax}>{t('currencyInputPanel.max')}</StyledBalanceMax>\n\n                  <Text color=\"text4\" fontSize={24}>\n                    PGL\n                  </Text>\n                </Box>\n              }\n              onChange={(value: any) => {\n                onChangeAmount && onChangeAmount(value)\n              }}\n              addonLabel={addonLabel()}\n              fontSize={24}\n              isNumeric={true}\n              placeholder=\"0.00\"\n            />\n          </Box>\n\n          <Box>\n            <Steps\n              onChange={value => {\n                onChangeDot && onChangeDot(value)\n              }}\n              current={stepIndex}\n              progressDot={true}\n            >\n              <Step />\n              <Step />\n              <Step />\n              <Step />\n              <Step />\n            </Steps>\n          </Box>\n        </>\n      )}\n\n      <Box>\n        <ContentBox>{info.map(item => renderPoolDataRow(item.label, item.value))}</ContentBox>\n      </Box>\n    </InfoWrapper>\n  )\n}\nexport default PoolInfo\n"]},"metadata":{},"sourceType":"module"}