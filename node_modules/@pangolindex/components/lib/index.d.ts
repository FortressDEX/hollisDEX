import React from 'react';
import SelectTokenDrawer from 'src/components/SwapWidget/SelectTokenDrawer';
import { usePair } from 'src/data/Reserves';
import { useAllTokens } from 'src/hooks/Tokens';
import { LimitOrderInfo, useDerivedSwapInfo, useGelatoLimitOrderDetail, useGelatoLimitOrderList, useSwapActionHandlers } from 'src/state/pswap/hooks';
import useUSDCPrice from 'src/utils/useUSDCPrice';
import { wrappedCurrency } from 'src/utils/wrappedCurrency';
import { PANGOLIN_PERSISTED_KEYS, pangolinReducers } from './state';
export declare function PangolinProvider({ chainId, library, children, account, theme, }: {
    chainId: number | undefined;
    library: any | undefined;
    account: string | undefined;
    children?: React.ReactNode;
    theme?: any;
}): JSX.Element;
export * from './components';
export * from '@gelatonetwork/limit-orders-react';
export type { LimitOrderInfo };
export { pangolinReducers, PANGOLIN_PERSISTED_KEYS, useGelatoLimitOrderDetail, useGelatoLimitOrderList, SelectTokenDrawer, useDerivedSwapInfo, useUSDCPrice, useAllTokens, usePair, useSwapActionHandlers, wrappedCurrency, };
