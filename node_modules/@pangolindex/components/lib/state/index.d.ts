export declare const PANGOLIN_PERSISTED_KEYS: string[];
export declare const pangolinReducers: {
    gapplication: import("redux").Reducer<import("@gelatonetwork/limit-orders-react/dist/state/gapplication/reducer").ApplicationState, import("redux").AnyAction>;
    guser: import("redux").Reducer<import("@gelatonetwork/limit-orders-react/dist/state/guser/reducer").UserState, import("redux").AnyAction>;
    gorder: import("redux").Reducer<import("@gelatonetwork/limit-orders-react/dist/state/gorder/reducer").OrderState, import("redux").AnyAction>;
    gmulticall: import("redux").Reducer<import("@gelatonetwork/limit-orders-react/dist/state/gmulticall/reducer").MulticallState, import("redux").AnyAction>;
    glists: import("redux").Reducer<import("@gelatonetwork/limit-orders-react/dist/state/glists/reducer").ListsState, import("redux").AnyAction>;
    gtransactions: import("redux").Reducer<import("@gelatonetwork/limit-orders-react/dist/state/gtransactions/reducer").TransactionState, import("redux").AnyAction>;
    papplication: import("@reduxjs/toolkit/dist/createReducer").ReducerWithInitialState<import("./papplication/reducer").ApplicationState>;
    ptransactions: import("@reduxjs/toolkit/dist/createReducer").ReducerWithInitialState<import("./ptransactions/reducer").TransactionState>;
    pswap: import("@reduxjs/toolkit/dist/createReducer").ReducerWithInitialState<import("./pswap/reducer").SwapState>;
    plists: import("@reduxjs/toolkit/dist/createReducer").ReducerWithInitialState<import("./plists/reducer").ListsState>;
    pmulticall: import("@reduxjs/toolkit/dist/createReducer").ReducerWithInitialState<import("./pmulticall/reducer").MulticallState>;
    puser: import("@reduxjs/toolkit/dist/createReducer").ReducerWithInitialState<import("./puser/reducer").UserState>;
};
declare const store: import("@reduxjs/toolkit").EnhancedStore<{
    gapplication: import("@gelatonetwork/limit-orders-react/dist/state/gapplication/reducer").ApplicationState;
    guser: import("@gelatonetwork/limit-orders-react/dist/state/guser/reducer").UserState;
    gorder: import("@gelatonetwork/limit-orders-react/dist/state/gorder/reducer").OrderState;
    gmulticall: import("@gelatonetwork/limit-orders-react/dist/state/gmulticall/reducer").MulticallState;
    glists: import("@gelatonetwork/limit-orders-react/dist/state/glists/reducer").ListsState;
    gtransactions: import("@gelatonetwork/limit-orders-react/dist/state/gtransactions/reducer").TransactionState;
    papplication: import("./papplication/reducer").ApplicationState;
    ptransactions: import("./ptransactions/reducer").TransactionState;
    pswap: import("./pswap/reducer").SwapState;
    plists: import("./plists/reducer").ListsState;
    pmulticall: import("./pmulticall/reducer").MulticallState;
    puser: import("./puser/reducer").UserState;
}, import("redux").AnyAction, import("redux").Middleware<{}, any, import("redux").Dispatch<import("redux").AnyAction>>[]>;
export default store;
export declare type AppState = ReturnType<typeof store.getState>;
export declare type AppDispatch = typeof store.dispatch;
