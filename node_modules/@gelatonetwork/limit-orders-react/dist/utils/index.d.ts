import { Percent, Currency, TradeType, Token } from "@uniswap/sdk-core";
import { Trade as V2Trade } from "@uniswap/v2-sdk";
import { Contract } from "@ethersproject/contracts";
import { Web3Provider, JsonRpcSigner } from "@ethersproject/providers";
import { TokenAddressMap } from "../state/glists/hooks";
export declare function escapeRegExp(string: string): string;
export declare function isTokenOnList(tokenAddressMap: TokenAddressMap, token?: Token): boolean;
export declare function shortenAddress(address: string, chars?: number): string;
export declare function isAddress(value: any): string | false;
export declare function isTradeBetter(tradeA: V2Trade<Currency, Currency, TradeType> | undefined | null, tradeB: V2Trade<Currency, Currency, TradeType> | undefined | null, minimumDelta?: Percent): boolean | undefined;
export declare function getSigner(library: Web3Provider, account: string): JsonRpcSigner;
export declare function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner;
export declare function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract;
export declare function getEtherBalance(address: string, library: Web3Provider): Promise<import("ethers").BigNumber>;
