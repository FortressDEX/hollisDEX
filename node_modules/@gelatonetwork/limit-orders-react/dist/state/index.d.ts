export declare const GELATO_PERSISTED_KEYS: string[];
export declare const gelatoReducers: {
    gapplication: import("redux").Reducer<import("./gapplication/reducer").ApplicationState, import("redux").AnyAction>;
    guser: import("redux").Reducer<import("./guser/reducer").UserState, import("redux").AnyAction>;
    gorder: import("redux").Reducer<import("./gorder/reducer").OrderState, import("redux").AnyAction>;
    gmulticall: import("redux").Reducer<import("./gmulticall/reducer").MulticallState, import("redux").AnyAction>;
    glists: import("redux").Reducer<import("./glists/reducer").ListsState, import("redux").AnyAction>;
    gtransactions: import("redux").Reducer<import("./gtransactions/reducer").TransactionState, import("redux").AnyAction>;
};
declare const store: import("@reduxjs/toolkit").EnhancedStore<{
    gapplication: import("./gapplication/reducer").ApplicationState;
    guser: import("./guser/reducer").UserState;
    gorder: import("./gorder/reducer").OrderState;
    gmulticall: import("./gmulticall/reducer").MulticallState;
    glists: import("./glists/reducer").ListsState;
    gtransactions: import("./gtransactions/reducer").TransactionState;
}, import("redux").AnyAction, [import("redux-thunk").ThunkMiddleware<{
    gapplication: import("./gapplication/reducer").ApplicationState;
    guser: import("./guser/reducer").UserState;
    gorder: import("./gorder/reducer").OrderState;
    gmulticall: import("./gmulticall/reducer").MulticallState;
    glists: import("./glists/reducer").ListsState;
    gtransactions: import("./gtransactions/reducer").TransactionState;
}, import("redux").AnyAction, null> | import("redux-thunk").ThunkMiddleware<{
    gapplication: import("./gapplication/reducer").ApplicationState;
    guser: import("./guser/reducer").UserState;
    gorder: import("./gorder/reducer").OrderState;
    gmulticall: import("./gmulticall/reducer").MulticallState;
    glists: import("./glists/reducer").ListsState;
    gtransactions: import("./gtransactions/reducer").TransactionState;
}, import("redux").AnyAction, undefined>]>;
export declare type AppState = ReturnType<typeof store.getState>;
export declare type AppDispatch = typeof store.dispatch;
export {};
