import React from "react";
import { Currency } from "@uniswap/sdk-core";
export declare function ConfirmationPendingContent({ onDismiss, pendingText, inline, }: {
    onDismiss: () => void;
    pendingText: string;
    inline?: boolean;
}): JSX.Element;
export declare function TransactionSubmittedContent({ onDismiss, chainId, hash, inline, }: {
    onDismiss: () => void;
    hash: string | undefined;
    chainId: number;
    currencyToAdd?: Currency | undefined;
    inline?: boolean;
}): JSX.Element;
export declare function ConfirmationModalContent({ title, bottomContent, onDismiss, topContent, }: {
    title: string;
    onDismiss: () => void;
    topContent: () => React.ReactNode;
    bottomContent?: () => React.ReactNode | undefined;
}): JSX.Element;
export declare function TransactionErrorContent({ message, onDismiss, }: {
    message: string;
    onDismiss: () => void;
}): JSX.Element;
interface ConfirmationModalProps {
    isOpen: boolean;
    onDismiss: () => void;
    hash: string | undefined;
    content: () => React.ReactNode;
    attemptingTxn: boolean;
    pendingText: string;
    currencyToAdd?: Currency | undefined;
}
export default function TransactionConfirmationModal({ isOpen, onDismiss, attemptingTxn, hash, pendingText, content, currencyToAdd, }: ConfirmationModalProps): JSX.Element | null;
export {};
